[{"E:\\Projects\\GabirReact\\src\\index.js":"1","E:\\Projects\\GabirReact\\src\\App.js":"2","E:\\Projects\\GabirReact\\src\\serviceWorkerRegistration.js":"3","E:\\Projects\\GabirReact\\src\\Pages\\Assets.tsx":"4","E:\\Projects\\GabirReact\\src\\Pages\\TeamPage.tsx":"5","E:\\Projects\\GabirReact\\src\\Pages\\Calendar.tsx":"6","E:\\Projects\\GabirReact\\src\\Pages\\TeamsPage.tsx":"7","E:\\Projects\\GabirReact\\src\\Pages\\404.tsx":"8","E:\\Projects\\GabirReact\\src\\Pages\\QuoteSubmit.tsx":"9","E:\\Projects\\GabirReact\\src\\Pages\\Tutorial.tsx":"10","E:\\Projects\\GabirReact\\src\\Pages\\Showoff.tsx":"11","E:\\Projects\\GabirReact\\src\\Pages\\Timeline.tsx":"12","E:\\Projects\\GabirReact\\src\\Pages\\HaikuSubmit.tsx":"13","E:\\Projects\\GabirReact\\src\\Pages\\Driveroftheday.tsx":"14","E:\\Projects\\GabirReact\\src\\Pages\\Constructors.tsx":"15","E:\\Projects\\GabirReact\\src\\Pages\\Standings.tsx":"16","E:\\Projects\\GabirReact\\src\\Pages\\Tools\\SpecMapping.tsx":"17","E:\\Projects\\GabirReact\\src\\Pages\\Main.tsx":"18","E:\\Projects\\GabirReact\\src\\components\\QuoteForm.js":"19","E:\\Projects\\GabirReact\\src\\components\\HaikuForm.js":"20","E:\\Projects\\GabirReact\\src\\components\\Race.tsx":"21","E:\\Projects\\GabirReact\\src\\components\\Footer.tsx":"22","E:\\Projects\\GabirReact\\src\\components\\Alert\\index.tsx":"23","E:\\Projects\\GabirReact\\src\\components\\LoadingIcon\\Loading.tsx":"24","E:\\Projects\\GabirReact\\src\\components\\Header.tsx":"25","E:\\Projects\\GabirReact\\src\\components\\StandingsRow\\TeamRow.tsx":"26","E:\\Projects\\GabirReact\\src\\components\\StandingsRow\\Row.tsx":"27","E:\\Projects\\GabirReact\\src\\components\\Notification\\index.tsx":"28","E:\\Projects\\GabirReact\\src\\components\\ShareButton.tsx":"29","E:\\Projects\\GabirReact\\src\\components\\RightTab\\RightTab.tsx":"30","E:\\Projects\\GabirReact\\src\\components\\Decorations\\Fall.tsx":"31"},{"size":350,"mtime":1634786986552,"results":"32","hashOfConfig":"33"},{"size":2846,"mtime":1635384190114,"results":"34","hashOfConfig":"33"},{"size":5201,"mtime":1634005114235,"results":"35","hashOfConfig":"33"},{"size":7178,"mtime":1634957182191,"results":"36","hashOfConfig":"33"},{"size":4787,"mtime":1635384190887,"results":"37","hashOfConfig":"33"},{"size":2821,"mtime":1634355682564,"results":"38","hashOfConfig":"33"},{"size":3739,"mtime":1635384190946,"results":"39","hashOfConfig":"33"},{"size":1250,"mtime":1634005113824,"results":"40","hashOfConfig":"33"},{"size":1070,"mtime":1635384190360,"results":"41","hashOfConfig":"33"},{"size":20073,"mtime":1634005114022,"results":"42","hashOfConfig":"33"},{"size":2883,"mtime":1635384190395,"results":"43","hashOfConfig":"33"},{"size":4103,"mtime":1635384191016,"results":"44","hashOfConfig":"33"},{"size":1068,"mtime":1635384190359,"results":"45","hashOfConfig":"33"},{"size":9763,"mtime":1634005113889,"results":"46","hashOfConfig":"33"},{"size":4441,"mtime":1635384190229,"results":"47","hashOfConfig":"33"},{"size":4617,"mtime":1635384190832,"results":"48","hashOfConfig":"33"},{"size":11026,"mtime":1635994305875,"results":"49","hashOfConfig":"33"},{"size":19648,"mtime":1635990902190,"results":"50","hashOfConfig":"33"},{"size":2892,"mtime":1634005114177,"results":"51","hashOfConfig":"33"},{"size":4172,"mtime":1634005114137,"results":"52","hashOfConfig":"33"},{"size":5124,"mtime":1634010555550,"results":"53","hashOfConfig":"33"},{"size":518,"mtime":1634005114112,"results":"54","hashOfConfig":"33"},{"size":2000,"mtime":1634957182193,"results":"55","hashOfConfig":"33"},{"size":1251,"mtime":1634355682569,"results":"56","hashOfConfig":"33"},{"size":6761,"mtime":1635989827977,"results":"57","hashOfConfig":"33"},{"size":1161,"mtime":1634005591076,"results":"58","hashOfConfig":"33"},{"size":1847,"mtime":1634005591084,"results":"59","hashOfConfig":"33"},{"size":1709,"mtime":1635569644912,"results":"60","hashOfConfig":"33"},{"size":891,"mtime":1634005114198,"results":"61","hashOfConfig":"33"},{"size":350,"mtime":1634355682569,"results":"62","hashOfConfig":"33"},{"size":1122,"mtime":1635992282836,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"z2gb0o",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"73"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"73"},"E:\\Projects\\GabirReact\\src\\index.js",[],["130","131"],"E:\\Projects\\GabirReact\\src\\App.js",[],"E:\\Projects\\GabirReact\\src\\serviceWorkerRegistration.js",[],"E:\\Projects\\GabirReact\\src\\Pages\\Assets.tsx",[],["132","133"],"E:\\Projects\\GabirReact\\src\\Pages\\TeamPage.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Calendar.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\TeamsPage.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\404.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\QuoteSubmit.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Tutorial.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Showoff.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Timeline.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\HaikuSubmit.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Driveroftheday.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Constructors.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Standings.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Tools\\SpecMapping.tsx",["134","135","136"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { useState, useEffect } from 'react'\r\nimport Header from '../../components/Header'\r\nimport Loading from \"../../components/LoadingIcon/Loading\";\r\nimport qs from 'qs';\r\nimport { Notification, Area } from '../../components/Notification/index'\r\n\r\ntype CarImage = {\r\n\tpath: string;\r\n\tname: string;\r\n}\r\n\r\ntype Preset = {\r\n\tname: string;\r\n\tmetal: number;\r\n\trough: number;\r\n}\r\n\r\nconst SpecMap = (props: any) => {\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [color, setColor] = useState((qs.parse(props.location.hash, { ignoreQueryPrefix: true })[`#color`] !== undefined ? String(qs.parse(props.location.hash, { ignoreQueryPrefix: true })[`#color`]) : \"#000000\"));\r\n\tconst [metallic, setMetallic] = useState(Number(qs.parse(props.location.hash, { ignoreQueryPrefix: true })[`metal`]) || 0);\r\n\tconst [roughness, setRoughness] = useState(Number(qs.parse(props.location.hash, { ignoreQueryPrefix: true })[`rough`]) || 0);\r\n\tconst [car, setCar] = useState((qs.parse(props.location.hash, { ignoreQueryPrefix: true })[`car`] !== undefined ? String(qs.parse(props.location.hash, { ignoreQueryPrefix: true })[`car`]) : \"streetstock\"));\r\n\tconst [copied, setCopied] = useState(false);\r\n\tconst [c, setC] = useState(false);\r\n\tconst [link, setLink] = useState(`#color=${color}&metal=${metallic}&rough=${roughness}&car=${car}`);\r\n\tconst [carsList, setCarsList] = useState<CarImage[]>([]);\r\n\tconst [presets, setPresets] = useState<Preset[]>([\r\n\t\t{name: \"Flat\",metal: 0,rough: 80},\r\n\t\t{name: \"Matte\",metal: 0,rough: 50},\r\n\t\t{name: \"Satin\",metal: 0,rough: 20},\r\n\t\t{name: \"Gloss\",metal: 0,rough: 0},\r\n\t\t{name: \"Chrome\",metal: 100,rough: 0},\r\n\t\t{name: \"Metallic\",metal: 90,rough: 40},\r\n\t\t{name: \"Candy\",metal: 50,rough: 10},\r\n\t\t{name: \"Pearl\",metal: 60,rough: 20},\r\n\t\t{name: \"Velvet\",metal: 80,rough: 100},\r\n\t]);\r\n\r\n\tfunction drawCar(hexRGB: string, metalPct: number, roughPct: number) {\r\n\t\tvar rough = roughPct / 10;\r\n\t\tvar metal = metalPct / 10;\r\n\r\n\t\tif (hexRGB.substring(0, 1) === \"#\") {\r\n\t\t\thexRGB = hexRGB.substr(1);\r\n\t\t}\r\n\t\tvar r = parseInt(hexRGB.substr(0, 2), 16) / 255;\r\n\t\tvar g = parseInt(hexRGB.substr(2, 2), 16) / 255;\r\n\t\tvar b = parseInt(hexRGB.substr(4, 2), 16) / 255;\r\n\r\n\t\tvar black = document.getElementById(\"black\");\r\n\t\tvar red = document.getElementById(\"red\");\r\n\t\tvar green = document.getElementById(\"green\");\r\n\t\tvar blue = document.getElementById(\"blue\");\r\n\r\n\t\tvar ctx = (document.getElementById(\"canvas\") as HTMLCanvasElement)?.getContext('2d');\r\n\t\tctx?.clearRect(0, 0, (document.getElementById(\"canvas\") as HTMLCanvasElement)?.width, (document.getElementById(\"canvas\") as HTMLCanvasElement)?.height);\r\n\r\n\t\tif (ctx) {\r\n\t\t\tdrawImage(ctx, black, metal, rough);\r\n\t\t\tdrawImage(ctx, red, metal, rough, r, \"lighten\");\r\n\t\t\tdrawImage(ctx, green, metal, rough, g, \"lighten\");\r\n\t\t\tdrawImage(ctx, blue, metal, rough, b, \"lighten\");\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tdrawCar(color, metallic, roughness)\r\n\t\tsetLink(`#color=${color}&metal=${metallic}&rough=${roughness}&car=${car}`);\r\n\t}, [color, metallic, roughness, car])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchCars = async () => {\r\n\t\t\tconst res = await fetch(\"https://i.gabirmotors.com/carImages\");\r\n\t\t\tconst data = await res.json();\r\n\t\t\tvar cars = [];\r\n\r\n\t\t\tfor (var i = 0; i < data.children.length; i ++) {\r\n\t\t\t\tcars.push({\r\n\t\t\t\t\tpath: data.children[i].name,\r\n\t\t\t\t\tname: data.children[i].children[0].name.replace(\".txt\", \"\")\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tsetCarsList(cars);\r\n\t\t}\r\n\r\n\t\tfetchCars();\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tdrawCar(color, metallic, roughness)\r\n\t\t\t}, 1000)\r\n\t\t}, 2000)\r\n\t}, [])\r\n\r\n\tfunction drawImage(ctx: any, image: any, metal: number, rough: number, alpha = 1.0, mode = \"copy\") {\r\n\t\tctx.save();\r\n\t\tctx.globalAlpha = alpha;\r\n\t\tctx.globalCompositeOperation = mode;\r\n\r\n\t\tvar w = image.width / 11;\r\n\t\tvar h = image.height / 11;\r\n\r\n\t\tvar xOffset = w * rough;\r\n\t\tvar yOffset = h * metal;\r\n\r\n\t\tctx.drawImage(image, xOffset, yOffset, w, h, 0, 0, 600, 400);\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\tconst changeColor = (e: any) => setColor(e.target.value)\r\n\tconst changeMetal = (e: any) => setMetallic(e.target.value * 10)\r\n\tconst changeRough = (e: any) => setRoughness(e.target.value * 10)\r\n\tconst changePreset = (e: any) => {\r\n\t\tvar values = e.target.value.split('/');\r\n\t\tsetMetallic(values[0]);\r\n\t\tsetRoughness(values[1]);\r\n\t}\r\n\tconst changeCar = (e: any) => {\r\n\t\tsetCar(e.target.value)\r\n\t\tsetTimeout(() => {\r\n\t\t\tdrawCar(color, metallic, roughness)\r\n\t\t}, 2000)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header title=\"Gabir Motors | Spec Mapping\" />\r\n\t\t\t{loading && <Loading />}\r\n\t\t\t{\r\n\t\t\t\t!loading && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Area>\r\n\t\t\t\t\t\t\t{copied && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Notification icon=\"link\">\r\n\t\t\t\t\t\t\t\t\t\tLink Copied to Clipboard\r\n\t\t\t\t\t\t\t\t\t</Notification>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Area>\r\n\t\t\t\t\t\t<div className=\"uk-height-large uk-background-cover uk-light uk-background-cover uk-background-fixed\" style={{ backgroundImage: 'url(img/gabir_bg.jpg)', minHeight: '100vh', height: 'auto' }}>\r\n\t\t\t\t\t\t\t{/* <h1 className = \"uk-margin-auto uk-text-center\">Gabir Motors Spec Map Previsualization Tool</h1> */}\r\n\r\n\t\t\t\t\t\t\t<div className = {(c ? \"uk-hidden\" : \"uk-hidden@m\")}>\r\n\t\t\t\t\t\t\t\t<div className=\"uk-width-1-2@m uk-text-center uk-margin-auto uk-margin-auto-vertical uk-container uk-position-center\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"uk-margin uk-width-large uk-margin-auto uk-card uk-card-secondary uk-card-body uk-box-shadow-large\" style={{ maxHeight: '95vh' }}>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"uk-text-danger uk-text-bold\">This page is not designed for small screens</span><br /><br />\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"#continue\" onClick = {() => { setC(true) }} className=\"uk-button uk-button-danger\">Continue Anyways</a>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className={`${(c ? \"uk-visible\" : \"uk-visible@m\")} uk-text-left uk-position-center`}>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"uk-padding-small uk-animation-fade uk-margin uk-width-1-1 uk-margin-auto uk-card uk-card-secondary uk-card-body uk-flex uk-flex-wrap\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div className = \"uk-width-1-1@s uk-width-1-2@l\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h2 className = \"uk-display-inline\">Select Your Car &nbsp;&nbsp;</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t<div uk-form-custom=\"target: > * > span:first-child\" className = \"uk-margin-bottom uk-marign-left\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select onChange = {changeCar} value = {car}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{carsList.map(ca => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value = {ca.path}>{ ca.name }</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"uk-button uk-button-default\" type=\"button\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span uk-icon=\"icon: chevron-down\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = \"uk-width-1-1 uk-text-left uk-padding-remove\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"color\">Choose a Color:</label> <input type=\"color\" id=\"color\" value={color} onChange={changeColor} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"uk-margin-left uk-margin-bottom\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input className=\"uk-form-blank uk-text-primary uk-form-width-small uk-form-small color-input\" type=\"text\" placeholder=\"Color Hex\" value = {color} onChange={changeColor} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"metallic\">Metallic</label> <span id=\"metallic-container\"><input type=\"range\" min=\"0\" max=\"10\" value={metallic / 10} id=\"metallic\" onChange={changeMetal} /> {metallic}%</span><br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"rough\">Roughness</label> <span id=\"rough-container\"><input type=\"range\" min=\"0\" max=\"10\" value={roughness / 10} id=\"rough\" onChange={changeRough} /> {roughness}%</span><br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Spec Map Color: </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"uk-margin-left uk-margin-bottom\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input className=\"uk-form-blank uk-text-primary uk-form-width-small uk-form-small color-input\" type=\"text\" placeholder=\"Spec Map Hex\" value = {`#${(Math.ceil(metallic * 2.55).toString(16).toUpperCase() === \"0\" ? \"00\" : Math.ceil(metallic * 2.55).toString(16).toUpperCase()) + (Math.ceil(roughness * 2.55).toString(16).toUpperCase() === \"0\" ? \"00\" : Math.ceil(roughness * 2.55).toString(16).toUpperCase()) + \"00\"}`} disabled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h2 className = \"uk-display-inline\">Or Use a Preset &nbsp;&nbsp;</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div uk-form-custom=\"target: > * > span:first-child\" className = \"uk-margin-bottom uk-marign-left\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select onChange = {changePreset} className = \"uk-width-1-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"0/0\">Select One</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{presets.map(p => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value = {`${p.metal}/${p.rough}`}>{ p.name }</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"uk-button uk-button-default uk-width-1-1\" type=\"button\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span uk-icon=\"icon: chevron-down\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"uk-margin uk-width-1-1 uk-flex uk-flex-wrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = \"uk-width-1-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a uk-tooltip = \"Get a link to the configuration you've made. Save it or share it with others!\" className=\"uk-button uk-button-default uk-align-right uk-width-1-1 uk-margin-remove-bottom\" href={link} onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnavigator.clipboard.writeText(\"https://gabirmotors.com/specmapping\" + link)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCopied(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTimeout(() => { setCopied(false) }, 5000)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>Click to Share</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"uk-text-warning uk-text-left\"><span className = \"uk-text-bold\"><span uk-icon=\"icon: warning\"></span> Warning!</span> Some images may take a while to load</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"uk-text-success uk-text-left\">Thank you <a href=\"https://www.tradingpaints.com/profile/666793/Zach-C-Miller\" target = \"_new\" className = \"uk-text-bold\">Bracket (Zach M.)</a> for the code help and images!</p>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className = \"uk-padding-small uk-width-1-1@s uk-width-1-2@l\">\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<img id=\"black\" src = {`https://i.gabirmotors.com/siteimages/${car}/grid-black.jpg`} style={{ display: \"none\" }} alt=\"grid-black\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<img id=\"blue\" src = {`https://i.gabirmotors.com/siteimages/${car}/grid-blue.jpg`} style={{ display: \"none\" }} alt=\"grid-blue\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<img id=\"red\" src = {`https://i.gabirmotors.com/siteimages/${car}/grid-red.jpg`} style={{ display: \"none\" }} alt=\"grid-red\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<img id=\"green\" src = {`https://i.gabirmotors.com/siteimages/${car}/grid-green.jpg`} style={{ display: \"none\" }} alt=\"grid-green\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<canvas className=\"tools-canvas uk-box-shadow-small uk-margin-auto\" id=\"canvas\" width=\"600\" height=\"400\"></canvas>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SpecMap;","E:\\Projects\\GabirReact\\src\\Pages\\Main.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\QuoteForm.js",[],"E:\\Projects\\GabirReact\\src\\components\\HaikuForm.js",[],"E:\\Projects\\GabirReact\\src\\components\\Race.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\Footer.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\Alert\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\LoadingIcon\\Loading.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\Header.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\StandingsRow\\TeamRow.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\StandingsRow\\Row.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\Notification\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\ShareButton.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\RightTab\\RightTab.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\Decorations\\Fall.tsx",["137","138"],"import { useState, useEffect } from 'react'\r\nimport './style.scss'\r\n\r\nconst Fall = () => {\r\n\tconst makeLeaf = () => {\r\n\t\tvar x = Math.floor(Math.random() * window.innerWidth);;\r\n\t\tvar leaf = Math.floor(Math.random() * 3) + 1;\r\n\t\tvar animTime = Math.random() * 11\r\n\t\tvar zIndex = Math.round(Math.random());\r\n\t\tif (animTime < 6) animTime = 6;\r\n\r\n\t\tvar span = document.createElement('span');\r\n\t\tspan.className = \"fall-leaf\"\r\n\t\tvar img = document.createElement('img');\r\n\t\timg.src = `https://i.gabirmotors.com/assets/other/fall/leaf${leaf}.png`;\r\n\t\timg.style.left = x + \"px\";\r\n\t\timg.style.animationDuration = animTime + \"s\"\r\n\t\timg.style.zIndex = String(zIndex)\r\n\t\tspan.appendChild(img)\r\n\t\tvar leaves = document.getElementById(\"leaves\")\r\n\t\tleaves?.appendChild(span);\r\n\t\tvar innerLeaves = leaves?.getElementsByClassName(\"fall-leaf\")\r\n\t\tif ((innerLeaves ? innerLeaves.length : 0 ) > 20) {\r\n\t\t\tif (innerLeaves) innerLeaves[0].remove();\r\n\t\t}\r\n\r\n\t\tsetTimeout(makeLeaf, Math.random() * 5000)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tmakeLeaf();\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div id = \"leaves\">\r\n            \r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Fall;\r\n",{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":29,"column":18,"nodeType":"145","messageId":"146","endLine":29,"endColumn":28},{"ruleId":"147","severity":1,"message":"148","line":71,"column":5,"nodeType":"149","endLine":71,"endColumn":38,"suggestions":"150"},{"ruleId":"147","severity":1,"message":"151","line":97,"column":5,"nodeType":"149","endLine":97,"endColumn":7,"suggestions":"152"},{"ruleId":"143","severity":1,"message":"153","line":1,"column":10,"nodeType":"145","messageId":"146","endLine":1,"endColumn":18},{"ruleId":"147","severity":1,"message":"154","line":32,"column":5,"nodeType":"149","endLine":32,"endColumn":7,"suggestions":"155"},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"@typescript-eslint/no-unused-vars","'setPresets' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'drawCar'. Either include it or remove the dependency array.","ArrayExpression",["158"],"React Hook useEffect has missing dependencies: 'color', 'drawCar', 'metallic', and 'roughness'. Either include them or remove the dependency array.",["159"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'makeLeaf'. Either include it or remove the dependency array.",["160"],"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [color, metallic, roughness, car, drawCar]",{"range":"167","text":"168"},"Update the dependencies array to be: [color, drawCar, metallic, roughness]",{"range":"169","text":"170"},"Update the dependencies array to be: [makeLeaf]",{"range":"171","text":"172"},[3033,3066],"[color, metallic, roughness, car, drawCar]",[3624,3626],"[color, drawCar, metallic, roughness]",[1026,1028],"[makeLeaf]"]