[{"E:\\Projects\\GabirReact\\src\\index.js":"1","E:\\Projects\\GabirReact\\src\\serviceWorkerRegistration.js":"2","E:\\Projects\\GabirReact\\src\\App.js":"3","E:\\Projects\\GabirReact\\src\\Pages\\Main.tsx":"4","E:\\Projects\\GabirReact\\src\\Pages\\HaikuSubmit.tsx":"5","E:\\Projects\\GabirReact\\src\\Pages\\Showoff.tsx":"6","E:\\Projects\\GabirReact\\src\\Pages\\Timeline.tsx":"7","E:\\Projects\\GabirReact\\src\\Pages\\TeamsPage.tsx":"8","E:\\Projects\\GabirReact\\src\\Pages\\QuoteSubmit.tsx":"9","E:\\Projects\\GabirReact\\src\\Pages\\Tutorial.tsx":"10","E:\\Projects\\GabirReact\\src\\Pages\\Standings.tsx":"11","E:\\Projects\\GabirReact\\src\\Pages\\Driveroftheday.tsx":"12","E:\\Projects\\GabirReact\\src\\Pages\\MFT.tsx":"13","E:\\Projects\\GabirReact\\src\\Pages\\404.tsx":"14","E:\\Projects\\GabirReact\\src\\Pages\\Assets.tsx":"15","E:\\Projects\\GabirReact\\src\\Pages\\Calendar.tsx":"16","E:\\Projects\\GabirReact\\src\\Pages\\TeamPage.tsx":"17","E:\\Projects\\GabirReact\\src\\Pages\\Constructors.tsx":"18","E:\\Projects\\GabirReact\\src\\Pages\\TestingTemplates.tsx":"19","E:\\Projects\\GabirReact\\src\\Pages\\Tools\\SpecMapping.tsx":"20","E:\\Projects\\GabirReact\\src\\Pages\\Tools\\Toolbox.tsx":"21","E:\\Projects\\GabirReact\\src\\components\\Notification\\index.tsx":"22","E:\\Projects\\GabirReact\\src\\components\\Alert\\index.tsx":"23","E:\\Projects\\GabirReact\\src\\Templates\\CenterCard\\index.tsx":"24","E:\\Projects\\GabirReact\\src\\Templates\\Blank\\index.tsx":"25","E:\\Projects\\GabirReact\\src\\components\\DriverCard\\index.tsx":"26","E:\\Projects\\GabirReact\\src\\Pages\\Tools\\ColorTemplate.tsx":"27","E:\\Projects\\GabirReact\\src\\Pages\\Tools\\ColorTemplateDownload.tsx":"28","E:\\Projects\\GabirReact\\src\\Pages\\GabirTV.tsx":"29","E:\\Projects\\GabirReact\\src\\Pages\\Pacecar.tsx":"30","E:\\Projects\\GabirReact\\src\\Components\\Notification\\index.tsx":"31","E:\\Projects\\GabirReact\\src\\Components\\Alert\\index.tsx":"32","E:\\Projects\\GabirReact\\src\\Components\\DriverCard\\index.tsx":"33","E:\\Projects\\GabirReact\\src\\Components\\index.ts":"34","E:\\Projects\\GabirReact\\src\\Components\\StandingsRow\\index.ts":"35","E:\\Projects\\GabirReact\\src\\Components\\Decorations\\index.ts":"36","E:\\Projects\\GabirReact\\src\\Components\\LoadingIcon\\index.tsx":"37","E:\\Projects\\GabirReact\\src\\Components\\LoadingPage\\index.tsx":"38","E:\\Projects\\GabirReact\\src\\Components\\StandingsRow\\DriverRow\\index.tsx":"39","E:\\Projects\\GabirReact\\src\\Components\\Decorations\\Christmas\\index.tsx":"40","E:\\Projects\\GabirReact\\src\\Components\\StandingsRow\\TeamRow\\index.tsx":"41","E:\\Projects\\GabirReact\\src\\Components\\Decorations\\Fall\\index.tsx":"42","E:\\Projects\\GabirReact\\src\\Components\\Footer\\index.tsx":"43","E:\\Projects\\GabirReact\\src\\Components\\HaikuForm\\index.js":"44","E:\\Projects\\GabirReact\\src\\Components\\Header\\index.tsx":"45","E:\\Projects\\GabirReact\\src\\Components\\QuoteForm\\index.js":"46","E:\\Projects\\GabirReact\\src\\Components\\CalendarRow\\index.tsx":"47","E:\\Projects\\GabirReact\\src\\Components\\ShareButton\\index.tsx":"48"},{"size":350,"mtime":1634786986552,"results":"49","hashOfConfig":"50"},{"size":5201,"mtime":1634005114235,"results":"51","hashOfConfig":"50"},{"size":3461,"mtime":1643242816207,"results":"52","hashOfConfig":"50"},{"size":19611,"mtime":1643257529310,"results":"53","hashOfConfig":"50"},{"size":992,"mtime":1643257397614,"results":"54","hashOfConfig":"50"},{"size":2883,"mtime":1635384190395,"results":"55","hashOfConfig":"50"},{"size":4164,"mtime":1643257463865,"results":"56","hashOfConfig":"50"},{"size":3646,"mtime":1643257493115,"results":"57","hashOfConfig":"50"},{"size":994,"mtime":1643257640432,"results":"58","hashOfConfig":"50"},{"size":20070,"mtime":1643257442728,"results":"59","hashOfConfig":"50"},{"size":4586,"mtime":1643257430627,"results":"60","hashOfConfig":"50"},{"size":9725,"mtime":1643257408255,"results":"61","hashOfConfig":"50"},{"size":4188,"mtime":1643256782757,"results":"62","hashOfConfig":"50"},{"size":856,"mtime":1637116899004,"results":"63","hashOfConfig":"50"},{"size":6916,"mtime":1643256181172,"results":"64","hashOfConfig":"50"},{"size":2079,"mtime":1643257714715,"results":"65","hashOfConfig":"50"},{"size":2921,"mtime":1637116899017,"results":"66","hashOfConfig":"50"},{"size":3381,"mtime":1643257033478,"results":"67","hashOfConfig":"50"},{"size":172,"mtime":1637116899017,"results":"68","hashOfConfig":"50"},{"size":10652,"mtime":1643257572509,"results":"69","hashOfConfig":"50"},{"size":3308,"mtime":1643243483898,"results":"70","hashOfConfig":"50"},{"size":1709,"mtime":1635569644912,"results":"71","hashOfConfig":"50"},{"size":2000,"mtime":1634957182193,"results":"72","hashOfConfig":"50"},{"size":767,"mtime":1641276335628,"results":"73","hashOfConfig":"50"},{"size":1166,"mtime":1643257547638,"results":"74","hashOfConfig":"50"},{"size":1863,"mtime":1641356262437,"results":"75","hashOfConfig":"50"},{"size":12630,"mtime":1643256173209,"results":"76","hashOfConfig":"50"},{"size":5516,"mtime":1643256172232,"results":"77","hashOfConfig":"50"},{"size":562,"mtime":1642562916728,"results":"78","hashOfConfig":"50"},{"size":2211,"mtime":1643244141339,"results":"79","hashOfConfig":"50"},{"size":1709,"mtime":1635569644912,"results":"80","hashOfConfig":"50"},{"size":2000,"mtime":1634957182193,"results":"81","hashOfConfig":"50"},{"size":1863,"mtime":1641356262437,"results":"82","hashOfConfig":"50"},{"size":668,"mtime":1643257757538,"results":"83","hashOfConfig":"50"},{"size":116,"mtime":1643257017982,"results":"84","hashOfConfig":"50"},{"size":108,"mtime":1643256441349,"results":"85","hashOfConfig":"50"},{"size":951,"mtime":1643256623109,"results":"86","hashOfConfig":"50"},{"size":1257,"mtime":1643256626385,"results":"87","hashOfConfig":"50"},{"size":1850,"mtime":1643257066554,"results":"88","hashOfConfig":"50"},{"size":4650,"mtime":1643257834587,"results":"89","hashOfConfig":"50"},{"size":1164,"mtime":1643256938920,"results":"90","hashOfConfig":"50"},{"size":1652,"mtime":1643256396820,"results":"91","hashOfConfig":"50"},{"size":518,"mtime":1643257187071,"results":"92","hashOfConfig":"50"},{"size":4172,"mtime":1643257326748,"results":"93","hashOfConfig":"50"},{"size":6672,"mtime":1643257779965,"results":"94","hashOfConfig":"50"},{"size":2892,"mtime":1643257606315,"results":"95","hashOfConfig":"50"},{"size":3771,"mtime":1643257670970,"results":"96","hashOfConfig":"50"},{"size":891,"mtime":1643257745898,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"z2gb0o",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"100"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"112"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"112"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Projects\\GabirReact\\src\\index.js",[],["201","202"],"E:\\Projects\\GabirReact\\src\\serviceWorkerRegistration.js",[],"E:\\Projects\\GabirReact\\src\\App.js",["203","204"],"import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\n/*\r\n  Main Pages Imports\r\n*/\r\n\r\nimport fourBody from './Pages/404';\r\nimport MainIndex from './Pages/Main';\r\nimport MainCal from './Pages/Calendar';\r\nimport MainAssets from './Pages/Assets';\r\nimport TeamPage from './Pages/TeamPage';\r\nimport MainTeams from './Pages/TeamsPage';\r\nimport MainShowoff from \"./Pages/Showoff\";\r\nimport MainHaiku from './Pages/HaikuSubmit';\r\nimport MainQuote from './Pages/QuoteSubmit';\r\nimport MainTimeline from \"./Pages/Timeline\";\r\nimport MainTutorial from \"./Pages/Tutorial\";\r\nimport MainDOTD from './Pages/Driveroftheday';\r\nimport MainStandings from './Pages/Standings';\r\nimport MainConstructors from './Pages/Constructors';\r\nimport MainSpecMapping from './Pages/Tools/SpecMapping';\r\nimport MainColorTemplate from './Pages/Tools/ColorTemplate';\r\nimport MainColorTemplateDownload from './Pages/Tools/ColorTemplateDownload';\r\nimport MainToolbox from './Pages/Tools/Toolbox';\r\nimport MainMFT from './Pages/MFT';\r\nimport MainGabirTV from './Pages/GabirTV';\r\nimport MainPacecar from './Pages/Pacecar';\r\n\r\nimport MainTest from './Pages/TestingTemplates';\r\n\r\nimport './index.scss'\r\n\r\nvar channelOrder = [\r\n  {\r\n      url: \"https://www.twitch.tv/skiggity242\",\r\n      id: \"71778837\",\r\n      name: \"Skiggity242\"\r\n  },\r\n  {\r\n      url: \"https://www.twitch.tv/pennyarcade\",\r\n      id: \"7443503\",\r\n      name: \"Penny Arcade\"\r\n  }\r\n]\r\n\r\nconst getViewers = async (user) => {\r\n  var res = await fetch(`https://api.twitch.tv/helix/streams?user_id=${user.id}`, {\r\n      headers: new Headers({\r\n          'Client-ID': 'v354nab7jsgctl2zww4ic69tc4l3hf',\r\n          'Authorization': 'Bearer jkmoj86ctljekpx3xl7ix28iwmzyen'\r\n      })\r\n  })\r\n\r\n  var data = await res.json();\r\n  if (data.data.length) {\r\n      console.log(`${user.url} is Online!`)\r\n      window.location.href = user.url\r\n  }\r\n}\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path='/' exact component = {MainIndex} />\r\n        <Route path='/calendar' exact component = {MainCal} />\r\n        <Route path='/haikus' exact component = {MainHaiku} />\r\n        <Route path='/quotes' exact component = {MainQuote} />\r\n        <Route path='/teams' exact component = {MainTeams} />\r\n        <Route path='/teams/:t' component = {TeamPage} />\r\n        <Route path='/assets' component = {MainAssets} />\r\n        <Route path='/standings' component = {MainStandings} />\r\n        <Route path='/showoff' component = {MainShowoff} />\r\n        <Route path='/tutorial' component = {MainTutorial} />\r\n        <Route path='/timeline' exact component = {MainTimeline} />\r\n        <Route path='/vote' component = {MainDOTD} />\r\n        <Route path='/live' component = {MainGabirTV} />\r\n        <Route path ='/constructors' exact component = {MainConstructors} />\r\n        <Route path ='/specmapping' exact component = {MainSpecMapping} />\r\n        <Route path ='/colortemplate' exact component = {MainColorTemplate} />\r\n        <Route path ='/colortemplate/download' exact component = {MainColorTemplateDownload} />\r\n        <Route path ='/toolbox' exact component = {MainToolbox} />\r\n        <Route path ='/mft' exact component = {MainMFT} />\r\n        <Route path ='/test' exact component = {MainTest} />\r\n        <Route path ='/regulations/pacecar' exact component = {MainPacecar} />\r\n        <Route path = \"*\" component = {fourBody} />\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","E:\\Projects\\GabirReact\\src\\Pages\\Main.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\HaikuSubmit.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Showoff.tsx",[],["205","206"],"E:\\Projects\\GabirReact\\src\\Pages\\Timeline.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\TeamsPage.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\QuoteSubmit.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Tutorial.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Standings.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Driveroftheday.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\MFT.tsx",["207","208","209"],"E:\\Projects\\GabirReact\\src\\Pages\\404.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Assets.tsx",["210"],"import React from 'react'\r\nimport { useState, useEffect } from \"react\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport Alert from '../Components/Alert/index'\r\nimport { \r\n    GetFile,\r\n    GetFolder\r\n} from '../interfaces';\r\nimport Blank from '../Templates/Blank/index';\r\n\r\ninterface FileTypes {\r\n    path:      string;\r\n    name:      string;\r\n    ext:       string;\r\n    size:      number;\r\n}\r\n\r\ninterface FolderTypes {\r\n    name:      string;\r\n    children:  (GetFile | GetFolder)[];\r\n}\r\n\r\nconst Assets = () => {\r\n    const [assets, setAssets] = useState({children: []});\r\n    const [darkTheme, setDarkTheme] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchAssets = async () => {\r\n            const res = await fetch(`https://i.gabirmotors.com/assetsList`)\r\n            const data = await res.json()\r\n            \r\n            console.log(data)\r\n    \r\n            return setAssets(data);\r\n        }\r\n\r\n        fetchAssets();\r\n    }, [])\r\n\r\n    const changeTheme = () => { \r\n        var doChange = true;\r\n        if (darkTheme) doChange = window.confirm(\"Are you sure? The screen will be very bright\");\r\n        if (doChange) setDarkTheme(!darkTheme) \r\n    }\r\n\r\n    const Image = ({ name, path, ext, size }:FileTypes) => {\r\n        var tag = path;\r\n        var tags = tag.replace(\"public/assets/\", \"\").substring(0,tag.replace(\"public/assets/\", \"\").lastIndexOf('/')).split('/');\r\n        var classes = \"tag-all\";\r\n        tags.forEach(t => {\r\n            classes += \" tag-\"+t\r\n        })\r\n\r\n\r\n        return (\r\n            <div style = {{ marginTop: \"20px\", padding: \"20px\" }} className = {classes}>\r\n                <div className=\"uk-flex uk-flex-center uk-flex-middle\">\r\n                    <a href = {`https://i.gabirmotors.com${path.replace('public', '')}`} target = \"_new\" uk-tooltip={`${name} | ${((size / 1000) / 1000).toFixed(2)}MB`}><img src={`https://i.gabirmotors.com${path.replace('public', '')}`} alt=\"\" style = {{ maxHeight: \"150px\" }} uk-img = \"true\"/></a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const Folder = ({ name, children }:FolderTypes) => {\r\n        return  (\r\n            <>\r\n                { children.map((child:GetFile | GetFolder) => {\r\n                    if (\"children\" in child) {\r\n                        return <Folder name = {child.name} children = {child?.children}/>\r\n                    } else {\r\n                        return <Image name = {child.name} path = {child.path} ext = {child.extension} size = {child.size} />  \r\n                    }\r\n                })}\r\n            </>\r\n        )\r\n    }\r\n\r\n    var bg = (darkTheme ? 'gabir_bg.jpg' : 'bg-inverted.png');\r\n\r\n    // Stop looking through my code >:|\r\n\r\n    return (\r\n        <>\r\n           <div uk-sticky = \"true\" uk-scrollspy=\"cls: uk-animation-slide-right; target: .toggle-theme; delay: 250; repeat: true\">\r\n                {/* eslint-disable-next-line */}\r\n                <a uk-tooltip = \"Toggle Theme\" className=\"toggle-theme uk-margin-small-right uk-position-top-right uk-button uk-button-link\" href = \"#\" onClick = {changeTheme} style = {{ color: `${darkTheme ? 'white' : 'black'}` }}>Change to { darkTheme ? 'Light Theme' : 'Dark Theme' }</a>\r\n            </div>\r\n\r\n            <Blank title=\"Assets\" loading={false}>\r\n                <Alert id = \"newassets\" title = \"New Assets Page\" text = \"Welcome to the new Gabir Motors Assets Page! Here you will be able to find images you might want for any of your League based projects. Use the tags at the top to filter the images, and click on any of the images to open it\" />\r\n                <Alert id = \"freetouse\" type = \"info\" title = \"Tip:\" text = \"All of the assets below are free for you to use on all of your PA League related projects!\" />\r\n                \r\n                <div className=\"uk-width-2-3@m uk-text-center uk-margin-auto uk-container\" uk-filter=\"target: .assets-filter; animation: fade\">\r\n                    <div style = {{ marginTop: \"5vh\" }}>\r\n                        <ul className=\"uk-subnav uk-subnav-pill\">\r\n                            <li uk-filter-control=\".tag-all\"><a href=\"#All\">All</a></li>\r\n                            <li>\r\n                                <a href = \"#Teams\">Teams</a>\r\n                                <div uk-dropdown=\"mode: click; pos: bottom-justify\">\r\n                                    <ul className=\"uk-list uk-subnav uk-subnav-pill\">\r\n                                        <li uk-filter-control=\".tag-teams\"><a href=\"#ALL\">All Teams</a></li>\r\n                                        <li uk-filter-control=\".tag-GM\"><a href=\"#GM\">GM</a></li>\r\n                                        <li uk-filter-control=\".tag-ASS\"><a href=\"#ASS\">ASS</a></li>\r\n                                        <li uk-filter-control=\".tag-JM\"><a href=\"#JM\">JM</a></li>\r\n                                        <li uk-filter-control=\".tag-SENDIT\"><a href=\"#SENDIT\">SENDIT</a></li>\r\n                                        <li uk-filter-control=\".tag-HMA\"><a href=\"#HMA\">HMA</a></li>\r\n                                        <li uk-filter-control=\".tag-LWP\"><a href=\"#LWP\">LWP</a></li>\r\n                                        <li uk-filter-control=\".tag-FWC\"><a href=\"#FWC\">FWC</a></li>\r\n                                        <li uk-filter-control=\".tag-CT\"><a href=\"#CT\">CT</a></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </li>\r\n                            <li uk-filter-control=\".tag-endurance\"><a href=\"#Endurance\">Endurance Racing</a></li>\r\n                            <li uk-filter-control=\".tag-league\"><a href=\"#League\">League</a></li>\r\n                            <li uk-filter-control=\".tag-characters\"><a href=\"#Characters\">Characters</a></li>\r\n                            <li uk-filter-control=\".tag-inverted\"><a href=\"#Inverted\">Inverted</a></li>\r\n                            <li uk-filter-control=\".tag-other\"><a href=\"#Other\">Other</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className = \"uk-child-width-1-3@s uk-child-width-1-3@m assets-filter\" uk-grid=\"masonry: true; 50\">\r\n                        { assets.children.map((child:GetFile | GetFolder) => {\r\n                            if (\"children\" in child) {\r\n                                return (\r\n                                    <Folder name = {child.name} children = {child?.children}/>\r\n                                )\r\n                            } else {\r\n                                return (\r\n                                    <Image name = {child.name} path = {child.path} ext = {child.extension} size = {child.size} /> \r\n                                )  \r\n                            }\r\n                        })}\r\n                    </div>\r\n                </div>        \r\n            </Blank>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Assets)\r\n","E:\\Projects\\GabirReact\\src\\Pages\\Calendar.tsx",["211"],"E:\\Projects\\GabirReact\\src\\Pages\\TeamPage.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Constructors.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\TestingTemplates.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Tools\\SpecMapping.tsx",["212","213"],"E:\\Projects\\GabirReact\\src\\Pages\\Tools\\Toolbox.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\Notification\\index.tsx",[],["214","215"],"E:\\Projects\\GabirReact\\src\\components\\Alert\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Templates\\CenterCard\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Templates\\Blank\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\DriverCard\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Tools\\ColorTemplate.tsx",["216","217","218","219","220","221"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { useState, useEffect } from 'react'\r\nimport qs from 'qs';\r\nimport { Notification, Area } from '../../Components/Notification/index'\r\nimport Blank from '../../Templates/Blank/index';\r\nimport Modal from 'react-modal';\r\n\r\ntype Car = {\r\n\tname: string;\r\n\tid: string;\r\n\timages: Image[];\r\n}\r\n\r\ntype Image = {\r\n\tname: string;\r\n\tpath: string;\r\n}\r\n\r\nconst ColorTemplate = (props: any) => {\r\n\t// The inputs, either from the url or the ui\r\n\tconst urlParams = qs.parse(props.location.hash, { ignoreQueryPrefix: true })\r\n\tconst [color1, setColor1] = useState((urlParams[`#color1`] !== undefined ? String(urlParams[`#color1`]) : \"#FF0000\"));\r\n\tconst [color2, setColor2] = useState((urlParams[`color2`] !== undefined ? String(urlParams[`color2`]) : \"#00FF00\"));\r\n\tconst [color3, setColor3] = useState((urlParams[`color3`] !== undefined ? String(urlParams[`color3`]) : \"#0000FF\"));\r\n\tconst [car, setCar] = useState((urlParams[`car`] !== undefined ? String(urlParams[`car`]) : \"mazdamx52016\"));\r\n\tconst [template, setTemplate] = useState((urlParams[`template`] !== undefined ? String(urlParams[`template`]) : \"001\"));\r\n\t\r\n\t// controls the \"link copied\" pop up\r\n\tconst [copied, setCopied] = useState(false);\r\n\r\n\t// If the user should continue to the tool on a smaller screen\r\n\tconst [c, setC] = useState(false);\r\n\r\n\t// The link to copy\r\n\tconst [link, setLink] = useState(`#color1=${color1}&color2=${color2}&color3=${color3}&car=${car}&template=${template}`);\r\n\r\n\t// this will be filled with the list of car images\r\n\tconst [carsList, setCarsList] = useState<Car[]>([]);\r\n\r\n\t// Size of the canvas\r\n\tconst [size, setSize] = useState(600);\r\n\r\n\t// Array of available templates\r\n\tconst [templates, setTemplates] = useState<Image[]>([]);\r\n\r\n \tconst [modalIsOpen, setIsOpen] = useState(false);\r\n\r\n\tconst customStyles = {\r\n\t\tcontent: {\r\n\t\t\ttop: '50%',\r\n\t\t\tleft: '50%',\r\n\t\t\tright: 'auto',\r\n\t\t\tbottom: 'auto',\r\n\t\t\tmarginRight: '-50%',\r\n\t\t\ttransform: 'translate(-50%, -50%)',\r\n\t\t\tbackgroundColor: \"#222222\",\r\n\t\t\twidth: \"50vw\",\r\n\t\t\tmaxWidth: \"780px\",\r\n\t\t\tborder: \"0px\",\r\n\t\t\tborderRadius: \"0px\",\r\n\t\t},\r\n\t\toverlay: {\r\n\t\t\tbackgroundColor: \"rgba(0,0,0,0.5)\"\r\n\t\t}\r\n\t};\r\n\r\n\tfunction openModal() {\r\n\t\tsetIsOpen(true);\r\n\t}\r\n\r\n\tfunction closeModal() {\r\n\t\tsetIsOpen(false);\r\n\t}\r\n\r\n\tfunction parseColor(colorHex: string) {\r\n\t\tif(colorHex.substring(0,1) === \"#\") {\r\n\t\t\tcolorHex = colorHex.substring(1);\r\n\t\t}\r\n\t\t\r\n\t\tlet r = parseInt(colorHex.substr(0,2),16);\r\n\t\tlet g = parseInt(colorHex.substr(2,2), 16);\r\n\t\tlet b = parseInt(colorHex.substr(4,2), 16);\r\n\t\t\r\n\t\treturn {\r\n\t\t\tr: r/255,\r\n\t\t\tg: g/255,\r\n\t\t\tb: b/255\r\n\t\t};\r\n\t}\r\n\r\n\tfunction drawTemplateCustomBlend(templateUrl: string, color1: string, color2: string, color3: string) {\r\n\t\tlet img = document.getElementById('template') as HTMLImageElement;\r\n\t\t\r\n\t\tif (!img) return;\r\n\r\n\t\timg.crossOrigin = \"anonymous\";\r\n\t\timg.onload = function() {\r\n\t\t\tlet c1 = parseColor(color1);\r\n\t\t\tlet c2 = parseColor(color2);\r\n\t\t\tlet c3 = parseColor(color3);\r\n\t\t\t\r\n\t\t\tlet canvas = document.getElementById('canv') as HTMLCanvasElement;\r\n\t\t\tif (!canvas) return;\r\n\t\t\tlet ctx = canvas.getContext('2d');\r\n\t\t\tif (!ctx) return;\r\n\t\t\tctx.save();\r\n\r\n\t\t\t// draw the image onto the canvas first\r\n\t\t\tctx.drawImage(img, 0, 0, size, size);\r\n\t\t\t\r\n\t\t\t// for each pixel, multiply our colors by the red/green/blue content of the pixel appropriately, then clamp it to 0/255\r\n\t\t\tlet imageData = ctx.getImageData(0,0,size,size);\r\n\t\t\tfor(let x=0; x<size; ++x)\t{\r\n\t\t\t\tfor(let y=0; y<size; ++y) {\r\n\t\t\t\t\tlet pixelIndex = y * (size*4) + x*4;\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet pR = imageData.data[pixelIndex];\r\n\t\t\t\t\tlet pG = imageData.data[pixelIndex+1];\r\n\t\t\t\t\tlet pB = imageData.data[pixelIndex+2];\r\n\t\t\t\t\tlet pA = imageData.data[pixelIndex+3];\r\n\t\r\n\t\t\t\t\tlet r = pR * c1.r + pG * c2.r + pB * c3.r;\r\n\t\t\t\t\tlet g = pR * c1.g + pG * c2.g + pB * c3.g;\r\n\t\t\t\t\tlet b = pR * c1.b + pG * c2.b + pB * c3.b;\r\n\t\r\n\t\t\t\t\tlet max = Math.max(r,g,b);\r\n\t\t\t\t\tif(max > 255) {\r\n\t\t\t\t\t\tr = r * (255/max);\r\n\t\t\t\t\t\tg = g * (255/max);\r\n\t\t\t\t\t\tb = b * (255/max);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\timageData.data[pixelIndex] = r|0;\r\n\t\t\t\t\timageData.data[pixelIndex+1] = g|0;\r\n\t\t\t\t\timageData.data[pixelIndex+2] = b|0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tctx.putImageData(imageData,0,0);\r\n\t\t\tctx.restore();\r\n\t\t};\t\r\n\t\tif(templateUrl) {\r\n\t\t\timg.src = templateUrl;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction download(){\r\n\t\tvar canvas = document.getElementById(\"canv\") as HTMLCanvasElement;\r\n\t\tvar url = canvas?.toDataURL(\"image/png\");\r\n\t\tvar link = document.createElement('a');\r\n\t\tlink.download = car + '_template.png';\r\n\t\tlink.href = url;\r\n\t\tlink.click();\r\n\t  }\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchCars = async () => {\r\n\t\t\tconst res = await fetch(\"https://i.gabirmotors.com/templates\");\r\n\t\t\tconst data = await res.json();\r\n\t\t\tvar cars = [];\r\n\r\n\t\t\tfor (var i = 0; i < data.children.length; i ++) {\r\n\t\t\t\tconsole.log(data.children[i])\r\n\t\t\t\tcars.push({\r\n\t\t\t\t\tname: data.children[i].children[0].name.replace(\".txt\", \"\"),\r\n\t\t\t\t\tid: data.children[i].name,\r\n\t\t\t\t\timages: data.children[i].children.splice(1).map((i:any) => { return { name: i.name.replace(/\\D/g,''), path: i.path } })\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tsetCarsList(cars);\r\n\t\t}\r\n\r\n\t\tfetchCars();\r\n\t\tsetTimeout(() => {\r\n\t\t\tdrawTemplateCustomBlend(`https://i.gabirmotors.com/templates/${car}/car_pattern_${template}.tga.PNG`, color1, color2, color3);\r\n\t\t\tfor (var i = 0; i < carsList.length; i ++) {\r\n\t\t\t\tif (carsList[i].id === car) {\r\n\t\t\t\t\tsetTemplates(carsList[i].images);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, 3000)\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tdrawTemplateCustomBlend(`https://i.gabirmotors.com/templates/${car}/car_pattern_${template}.tga.PNG`, color1, color2, color3);\r\n\t\tsetLink(`#color1=${color1}&color2=${color2}&color3=${color3}&car=${car}&template=${template}`);\r\n\t}, [car, color1, color2, color3, template])\r\n\r\n\tuseEffect(() => {\r\n\t\tfor (var i = 0; i < carsList.length; i ++) {\r\n\t\t\tif (carsList[i].id === car) {\r\n\t\t\t\tsetTemplates(carsList[i].images);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [car, carsList])\r\n\r\n\tconst changeCar = (e: any) => { setCar(e.target.value); }\r\n\tconst changeColor1 = (e: any) => { setColor1(e.target.value); }\r\n\tconst changeColor2 = (e: any) => { setColor2(e.target.value); }\r\n\tconst changeColor3 = (e: any) => { setColor3(e.target.value); }\r\n\tconst changeTemplateThumbnail = (e: any) => { setTemplate(e);}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Area>\r\n\t\t\t\t{copied && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Notification icon=\"link\">\r\n\t\t\t\t\t\t\tLink Copied to Clipboard\r\n\t\t\t\t\t\t</Notification>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Area>\r\n\t\t\t<Blank title=\"Color Templates\">\r\n\t\t\t\t{/* <h1 className = \"uk-margin-auto uk-text-center\">Gabir Motors Spec Map Previsualization Tool</h1> */}\r\n\r\n\t\t\t\t<div className = {(c ? \"uk-hidden\" : \"uk-hidden@m\")}>\r\n\t\t\t\t\t<div className=\"uk-width-1-2@m uk-text-center uk-margin-auto uk-margin-auto-vertical uk-container uk-position-center\">\r\n\t\t\t\t\t\t<div className=\"uk-margin uk-width-large uk-margin-auto uk-card uk-card-secondary uk-card-body uk-box-shadow-large\" style={{ maxHeight: '95vh' }}>\r\n\t\t\t\t\t\t\t<span className=\"uk-text-danger uk-text-bold\">This page is not designed for small screens</span><br /><br />\r\n\t\t\t\t\t\t\t<a href=\"#continue\" onClick = {() => { setC(true) }} className=\"uk-button uk-button-danger\">Continue Anyways</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tisOpen={modalIsOpen}\r\n\t\t\t\t\tonRequestClose={closeModal}\r\n\t\t\t\t\tstyle={customStyles}\r\n\t\t\t\t\tcontentLabel=\"Example Modal\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<h1 style = {{ fontSize: '3em', color: \"white\" }}>Select a Template</h1>\r\n\t\t\t\t\t<div uk-grid = \"true\" className = \"uk-width-1-1\">\r\n\t\t\t\t\t\t{templates.map(i => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div key = {i.name}>\r\n\t\t\t\t\t\t\t\t\t<a href = \"#\" onClick = {() => { \r\n\t\t\t\t\t\t\t\t\t\tchangeTemplateThumbnail(i.name)\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<img src={`https://i.gabirmotors.com/templates/${car}/car_pattern_${i.name}.tga.PNG`} alt=\"\" className = \"template-image\" style = {{ width: '6vw', border: `${template === i.name ? \"3px solid white\" : \"0px\"}` }} />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<a href=\"#\" onClick = {closeModal} className = \"uk-button uk-button-danger uk-float-right\">Close</a>\r\n\t\t\t\t</Modal>\r\n\r\n\t\t\t\t<div className={`${(c ? \"uk-visible\" : \"uk-visible@m\")} uk-text-left uk-position-center`}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"uk-padding-small uk-animation-fade uk-margin uk-width-1-1 uk-margin-auto uk-card uk-card-secondary uk-card-body uk-flex uk-flex-wrap\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className = \"uk-width-1-1@s uk-width-1-2@l\">\r\n\t\t\t\t\t\t\t\t<h2 className = \"uk-display-inline\">Select Your Car &nbsp;&nbsp;</h2>\r\n\t\t\t\t\t\t\t\t<div uk-form-custom=\"target: > * > span:first-child\" className = \"uk-margin-bottom uk-marign-left\">\r\n\t\t\t\t\t\t\t\t\t<select onChange = {changeCar} value = {car}>\r\n\t\t\t\t\t\t\t\t\t\t{carsList.map(i => (\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = {i.id}>{ i.name }</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<button className=\"uk-button uk-button-default\" type=\"button\">\r\n\t\t\t\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t\t\t\t\t<span className = \"uk-margin-small-left\" uk-icon=\"icon: chevron-down\"></span>\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"uk-margin-small-top\" />\r\n\t\t\t\t\t\t\t\t<button onClick={openModal} className=\"uk-button uk-button-default\" type=\"button\">\r\n\t\t\t\t\t\t\t\t\t<span>Select a Template</span>\r\n\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<div className=\"uk-margin-small-top\" />\r\n\t\t\t\t\t\t\t\t<h2 className = \"uk-display-inline uk-margin-medium-top\">Choose Your Colors &nbsp;&nbsp;</h2>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<div className = \"uk-width-1-1 uk-flex\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"color\" id=\"color\" value={color1} onChange={changeColor1} />\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"uk-margin-bottom\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input className=\"uk-form-blank uk-text-primary uk-form-width-small uk-form-small color-input\" type=\"text\" placeholder=\"Color Hex\" value = {color1} onChange={changeColor1} />\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"color\" id=\"color\" value={color2} onChange={changeColor2} />\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"uk-margin-bottom\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input className=\"uk-form-blank uk-text-primary uk-form-width-small uk-form-small color-input\" type=\"text\" placeholder=\"Color Hex\" value = {color2} onChange={changeColor2} />\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"color\" id=\"color\" value={color3} onChange={changeColor3} />\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"uk-margin-bottom\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input className=\"uk-form-blank uk-text-primary uk-form-width-small uk-form-small color-input\" type=\"text\" placeholder=\"Color Hex\" value = {color3} onChange={changeColor3} />\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<hr />\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"uk-margin uk-width-1-1 uk-flex uk-flex-wrap\">\r\n\t\t\t\t\t\t\t\t\t<div className = \"uk-width-1-2\">\r\n\t\t\t\t\t\t\t\t\t\t<a uk-tooltip = \"Get a link to the configuration you've made. Save it or share it with others!\" className=\"uk-button uk-button-default uk-align-right uk-width-1-1 uk-margin-remove-bottom\" href={link} onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tnavigator.clipboard.writeText(\"https://gabirmotors.com/colortemplate\" + link)\r\n\t\t\t\t\t\t\t\t\t\t\tsetCopied(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetTimeout(() => { setCopied(false) }, 5000)\r\n\t\t\t\t\t\t\t\t\t\t}}>Click to Share</a>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className = \"uk-width-1-2 \">\r\n\t\t\t\t\t\t\t\t\t\t<a uk-tooltip = \"Download your new livery!\" className=\"uk-button uk-button-default uk-align-right uk-width-1-1 uk-margin-remove-bottom\" href={`/colortemplate/download` + link}>Download</a>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<p className=\"uk-text-warning uk-text-left\"><span className = \"uk-text-bold\"><span uk-icon=\"icon: warning\"></span> Warning!</span> Some images may take a while to load</p>\r\n\t\t\t\t\t\t\t\t<p className=\"uk-text-success uk-text-left\">Thank you <a href=\"https://www.tradingpaints.com/profile/666793/Zach-C-Miller\" target = \"_new\" className = \"uk-text-bold\">Bracket (Zach M.)</a> for the code help and images!</p>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className = \"uk-padding-small uk-width-1-1@s uk-width-1-2@l\">\t\t\t\t\r\n\t\t\t\t\t\t\t\t<img id=\"template\" style={{display: \"none\"}} width = {size + \"px\"} height = {size + \"px\"}/>\r\n\t\t\t\t\t\t\t\t<svg width=\"0\" height=\"0\">\r\n\t\t\t\t\t\t\t\t<filter id=\"cmatrix\">\r\n\t\t\t\t\t\t\t\t\t<feColorMatrix id=\"cmatrix_params\"\r\n\t\t\t\t\t\t\t\t\tin=\"SourceGraphic\"\r\n\t\t\t\t\t\t\t\t\ttype=\"matrix\" \r\n\t\t\t\t\t\t\t\t\tvalues=\"0 1 0 0 0\r\n\t\t\t\t\t\t\t\t\t\t\t0 0 1 0 0\r\n\t\t\t\t\t\t\t\t\t\t\t1 0 0 0 0\r\n\t\t\t\t\t\t\t\t\t\t\t0 0 0 1 0\" />\r\n\t\t\t\t\t\t\t\t</filter>\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t<canvas id=\"canv\" width = {size + \"px\"} height = {size + \"px\"} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Blank>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ColorTemplate;","E:\\Projects\\GabirReact\\src\\Pages\\Tools\\ColorTemplateDownload.tsx",["222","223","224","225","226","227","228","229","230","231","232","233","234"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { useState, useEffect } from 'react'\r\nimport qs from 'qs';\r\nimport { Notification, Area } from '../../Components/Notification/index'\r\nimport Blank from '../../Templates/Blank/index';\r\nimport Modal from 'react-modal';\r\n\r\ntype Car = {\r\n\tname: string;\r\n\tid: string;\r\n\timages: Image[];\r\n}\r\n\r\ntype Image = {\r\n\tname: string;\r\n\tpath: string;\r\n}\r\n\r\nconst ColorTemplateDownload = (props: any) => {\r\n\t// The inputs, either from the url or the ui\r\n\tconst urlParams = qs.parse(props.location.hash, { ignoreQueryPrefix: true })\r\n\tconst [color1, setColor1] = useState((urlParams[`#color1`] !== undefined ? String(urlParams[`#color1`]) : \"#FF0000\"));\r\n\tconst [color2, setColor2] = useState((urlParams[`color2`] !== undefined ? String(urlParams[`color2`]) : \"#00FF00\"));\r\n\tconst [color3, setColor3] = useState((urlParams[`color3`] !== undefined ? String(urlParams[`color3`]) : \"#0000FF\"));\r\n\tconst [car, setCar] = useState((urlParams[`car`] !== undefined ? String(urlParams[`car`]) : \"mx5\"));\r\n\tconst [template, setTemplate] = useState((urlParams[`template`] !== undefined ? String(urlParams[`template`]) : \"001\"));\r\n\tconst [carsList, setCarsList] = useState<Car[]>([]);\r\n\tconst [size, setSize] = useState(2048);\r\n\tconst [templates, setTemplates] = useState<Image[]>([]);\r\n\r\n\tfunction parseColor(colorHex: string) {\r\n\t\tif(colorHex.substring(0,1) === \"#\") {\r\n\t\t\tcolorHex = colorHex.substring(1);\r\n\t\t}\r\n\t\t\r\n\t\tlet r = parseInt(colorHex.substr(0,2),16);\r\n\t\tlet g = parseInt(colorHex.substr(2,2), 16);\r\n\t\tlet b = parseInt(colorHex.substr(4,2), 16);\r\n\t\t\r\n\t\treturn {\r\n\t\t\tr: r/255,\r\n\t\t\tg: g/255,\r\n\t\t\tb: b/255\r\n\t\t};\r\n\t}\r\n\r\n\tfunction drawTemplateCustomBlend(templateUrl: string, color1: string, color2: string, color3: string) {\r\n\t\tlet img = document.getElementById('template') as HTMLImageElement;\r\n\t\t\r\n\t\tif (!img) return false;\r\n\r\n\t\timg.crossOrigin = \"anonymous\";\r\n\t\timg.onload = function() {\r\n\t\t\tlet c1 = parseColor(color1);\r\n\t\t\tlet c2 = parseColor(color2);\r\n\t\t\tlet c3 = parseColor(color3);\r\n\t\t\t\r\n\t\t\tlet canvas = document.getElementById('canv') as HTMLCanvasElement;\r\n\t\t\tif (!canvas) return false;\r\n\t\t\tlet ctx = canvas.getContext('2d');\r\n\t\t\tif (!ctx) return false;\r\n\t\t\tctx.save();\r\n\r\n\t\t\t// draw the image onto the canvas first\r\n\t\t\tctx.drawImage(img, 0, 0, size, size);\r\n\t\t\t\r\n\t\t\t// for each pixel, multiply our colors by the red/green/blue content of the pixel appropriately, then clamp it to 0/255\r\n\t\t\tlet imageData = ctx.getImageData(0,0,size,size);\r\n\t\t\tfor(let x=0; x<size; ++x)\t{\r\n\t\t\t\tfor(let y=0; y<size; ++y) {\r\n\t\t\t\t\tlet pixelIndex = y * (size*4) + x*4;\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet pR = imageData.data[pixelIndex];\r\n\t\t\t\t\tlet pG = imageData.data[pixelIndex+1];\r\n\t\t\t\t\tlet pB = imageData.data[pixelIndex+2];\r\n\t\t\t\t\tlet pA = imageData.data[pixelIndex+3];\r\n\t\r\n\t\t\t\t\tlet r = pR * c1.r + pG * c2.r + pB * c3.r;\r\n\t\t\t\t\tlet g = pR * c1.g + pG * c2.g + pB * c3.g;\r\n\t\t\t\t\tlet b = pR * c1.b + pG * c2.b + pB * c3.b;\r\n\t\r\n\t\t\t\t\tlet max = Math.max(r,g,b);\r\n\t\t\t\t\tif(max > 255) {\r\n\t\t\t\t\t\tr = r * (255/max);\r\n\t\t\t\t\t\tg = g * (255/max);\r\n\t\t\t\t\t\tb = b * (255/max);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\timageData.data[pixelIndex] = r|0;\r\n\t\t\t\t\timageData.data[pixelIndex+1] = g|0;\r\n\t\t\t\t\timageData.data[pixelIndex+2] = b|0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tctx.putImageData(imageData,0,0);\r\n\t\t\tctx.restore();\r\n            download();\r\n            window.location.href = `/colortemplate#color1=${color1}&color2=${color2}&color3=${color3}&car=${car}&template=${template}`;\r\n\t\t};\t\r\n\t\tif(templateUrl) {\r\n\t\t\timg.src = templateUrl;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction download(){\r\n\t\tvar canvas = document.getElementById(\"canv\") as HTMLCanvasElement;\r\n\t\tvar url = canvas?.toDataURL(\"image/png\");\r\n\t\tvar link = document.createElement('a');\r\n\t\tlink.download = car + '_template.png';\r\n\t\tlink.href = url;\r\n\t\tlink.click();\r\n    }\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchCars = async () => {\r\n\t\t\tconst res = await fetch(\"https://i.gabirmotors.com/templates\");\r\n\t\t\tconst data = await res.json();\r\n\t\t\tvar cars = [];\r\n\r\n\t\t\tfor (var i = 0; i < data.children.length; i ++) {\r\n\t\t\t\tcars.push({\r\n\t\t\t\t\tname: data.children[i].children[0].name.replace(\".txt\", \"\"),\r\n\t\t\t\t\tid: data.children[i].name,\r\n\t\t\t\t\timages: data.children[i].children.splice(1).map((i:any) => { return { name: i.name.replace(/\\D/g,''), path: i.path } })\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tsetCarsList(cars);\r\n\t\t}\r\n\r\n\t\tfetchCars();\r\n        setTimeout(() => {\r\n            drawTemplateCustomBlend(`https://i.gabirmotors.com/templates/${car}/car_pattern_${template}.tga.PNG`, color1, color2, color3);\r\n        }, 2500)\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tfor (var i = 0; i < carsList.length; i ++) {\r\n\t\t\tif (carsList[i].id === car) {\r\n\t\t\t\tsetTemplates(carsList[i].images);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [car, carsList])\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Blank title=\"Color Templates\">\r\n                <h1>Downloading Your livery... Please Wait</h1>\r\n                <img id=\"template\" style={{display: \"none\"}} width = {size + \"px\"} height = {size + \"px\"}/>\r\n                <svg width=\"0\" height=\"0\">\r\n                <filter id=\"cmatrix\">\r\n                    <feColorMatrix id=\"cmatrix_params\"\r\n                    in=\"SourceGraphic\"\r\n                    type=\"matrix\" \r\n                    values=\"0 1 0 0 0\r\n                            0 0 1 0 0\r\n                            1 0 0 0 0\r\n                            0 0 0 1 0\" />\r\n                </filter>\r\n                </svg>\r\n                <canvas id=\"canv\" width = {size + \"px\"} height = {size + \"px\"} style = {{ display: \"none\" }}/>\r\n\t\t\t</Blank>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ColorTemplateDownload;","E:\\Projects\\GabirReact\\src\\Pages\\GabirTV.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Pacecar.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\Notification\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\Alert\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\DriverCard\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\index.ts",[],"E:\\Projects\\GabirReact\\src\\Components\\StandingsRow\\index.ts",[],"E:\\Projects\\GabirReact\\src\\Components\\Decorations\\index.ts",[],"E:\\Projects\\GabirReact\\src\\Components\\LoadingIcon\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\LoadingPage\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\StandingsRow\\DriverRow\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\Decorations\\Christmas\\index.tsx",["235"],"E:\\Projects\\GabirReact\\src\\Components\\StandingsRow\\TeamRow\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\Decorations\\Fall\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\Footer\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\HaikuForm\\index.js",[],"E:\\Projects\\GabirReact\\src\\Components\\Header\\index.tsx",["236","237","238"],"E:\\Projects\\GabirReact\\src\\Components\\QuoteForm\\index.js",[],"E:\\Projects\\GabirReact\\src\\Components\\CalendarRow\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\ShareButton\\index.tsx",[],{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":33,"column":5,"nodeType":"245","messageId":"246","endLine":33,"endColumn":17},{"ruleId":"243","severity":1,"message":"247","line":46,"column":7,"nodeType":"245","messageId":"246","endLine":46,"endColumn":17},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"248","severity":1,"message":"249","line":66,"column":29,"nodeType":"250","endLine":66,"endColumn":76},{"ruleId":"251","severity":1,"message":"252","line":67,"column":33,"nodeType":"250","endLine":67,"endColumn":126},{"ruleId":"251","severity":1,"message":"252","line":69,"column":33,"nodeType":"250","endLine":69,"endColumn":118},{"ruleId":"253","severity":1,"message":"254","line":78,"column":9,"nodeType":"245","messageId":"246","endLine":78,"endColumn":11},{"ruleId":"253","severity":1,"message":"255","line":8,"column":9,"nodeType":"245","messageId":"246","endLine":8,"endColumn":15},{"ruleId":"256","severity":1,"message":"257","line":80,"column":5,"nodeType":"258","endLine":80,"endColumn":38,"suggestions":"259"},{"ruleId":"256","severity":1,"message":"260","line":103,"column":5,"nodeType":"258","endLine":103,"endColumn":7,"suggestions":"261"},{"ruleId":"239","replacedBy":"262"},{"ruleId":"241","replacedBy":"263"},{"ruleId":"253","severity":1,"message":"264","line":41,"column":15,"nodeType":"245","messageId":"246","endLine":41,"endColumn":22},{"ruleId":"253","severity":1,"message":"265","line":120,"column":10,"nodeType":"245","messageId":"246","endLine":120,"endColumn":12},{"ruleId":"253","severity":1,"message":"266","line":147,"column":11,"nodeType":"245","messageId":"246","endLine":147,"endColumn":19},{"ruleId":"256","severity":1,"message":"267","line":183,"column":5,"nodeType":"258","endLine":183,"endColumn":7,"suggestions":"268"},{"ruleId":"256","severity":1,"message":"269","line":188,"column":5,"nodeType":"258","endLine":188,"endColumn":44,"suggestions":"270"},{"ruleId":"251","severity":1,"message":"252","line":328,"column":9,"nodeType":"250","endLine":328,"endColumn":100},{"ruleId":"253","severity":1,"message":"271","line":4,"column":10,"nodeType":"245","messageId":"246","endLine":4,"endColumn":22},{"ruleId":"253","severity":1,"message":"272","line":4,"column":24,"nodeType":"245","messageId":"246","endLine":4,"endColumn":28},{"ruleId":"253","severity":1,"message":"273","line":6,"column":8,"nodeType":"245","messageId":"246","endLine":6,"endColumn":13},{"ruleId":"253","severity":1,"message":"274","line":22,"column":17,"nodeType":"245","messageId":"246","endLine":22,"endColumn":26},{"ruleId":"253","severity":1,"message":"275","line":23,"column":17,"nodeType":"245","messageId":"246","endLine":23,"endColumn":26},{"ruleId":"253","severity":1,"message":"276","line":24,"column":17,"nodeType":"245","messageId":"246","endLine":24,"endColumn":26},{"ruleId":"253","severity":1,"message":"277","line":25,"column":14,"nodeType":"245","messageId":"246","endLine":25,"endColumn":20},{"ruleId":"253","severity":1,"message":"278","line":26,"column":19,"nodeType":"245","messageId":"246","endLine":26,"endColumn":30},{"ruleId":"253","severity":1,"message":"264","line":28,"column":15,"nodeType":"245","messageId":"246","endLine":28,"endColumn":22},{"ruleId":"253","severity":1,"message":"279","line":29,"column":9,"nodeType":"245","messageId":"246","endLine":29,"endColumn":18},{"ruleId":"253","severity":1,"message":"265","line":76,"column":10,"nodeType":"245","messageId":"246","endLine":76,"endColumn":12},{"ruleId":"256","severity":1,"message":"280","line":135,"column":5,"nodeType":"258","endLine":135,"endColumn":7,"suggestions":"281"},{"ruleId":"251","severity":1,"message":"252","line":150,"column":17,"nodeType":"250","endLine":150,"endColumn":108},{"ruleId":"256","severity":1,"message":"282","line":58,"column":5,"nodeType":"258","endLine":58,"endColumn":7,"suggestions":"283"},{"ruleId":"248","severity":1,"message":"284","line":55,"column":15,"nodeType":"250","endLine":55,"endColumn":72},{"ruleId":"248","severity":1,"message":"284","line":63,"column":15,"nodeType":"250","endLine":63,"endColumn":72},{"ruleId":"248","severity":1,"message":"284","line":70,"column":15,"nodeType":"250","endLine":70,"endColumn":72},"no-native-reassign",["285"],"no-negated-in-lhs",["286"],"no-unused-vars","'channelOrder' is assigned a value but never used.","Identifier","unusedVar","'getViewers' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","@typescript-eslint/no-unused-vars","'bg' is assigned a value but never used.","'season' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'drawCar'. Either include it or remove the dependency array.","ArrayExpression",["287"],"React Hook useEffect has missing dependencies: 'color', 'drawCar', 'metallic', and 'roughness'. Either include them or remove the dependency array.",["288"],["285"],["286"],"'setSize' is assigned a value but never used.","'pA' is assigned a value but never used.","'download' is defined but never used.","React Hook useEffect has missing dependencies: 'car', 'carsList', 'color1', 'color2', 'color3', 'drawTemplateCustomBlend', and 'template'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTemplates' needs the current value of 'carsList'.",["289"],"React Hook useEffect has a missing dependency: 'drawTemplateCustomBlend'. Either include it or remove the dependency array.",["290"],"'Notification' is defined but never used.","'Area' is defined but never used.","'Modal' is defined but never used.","'setColor1' is assigned a value but never used.","'setColor2' is assigned a value but never used.","'setColor3' is assigned a value but never used.","'setCar' is assigned a value but never used.","'setTemplate' is assigned a value but never used.","'templates' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'car', 'color1', 'color2', 'color3', 'drawTemplateCustomBlend', and 'template'. Either include them or remove the dependency array.",["291"],"React Hook useEffect has a missing dependency: 'makeLeaf'. Either include it or remove the dependency array.",["292"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"299","fix":"301"},{"desc":"302","fix":"303"},"Update the dependencies array to be: [color, metallic, roughness, car, drawCar]",{"range":"304","text":"305"},"Update the dependencies array to be: [color, drawCar, metallic, roughness]",{"range":"306","text":"307"},"Update the dependencies array to be: [car, carsList, color1, color2, color3, drawTemplateCustomBlend, template]",{"range":"308","text":"309"},"Update the dependencies array to be: [car, color1, color2, color3, drawTemplateCustomBlend, template]",{"range":"310","text":"311"},{"range":"312","text":"311"},"Update the dependencies array to be: [makeLeaf]",{"range":"313","text":"314"},[3196,3229],"[color, metallic, roughness, car, drawCar]",[3727,3729],"[color, drawCar, metallic, roughness]",[5451,5453],"[car, carsList, color1, color2, color3, drawTemplateCustomBlend, template]",[5711,5750],"[car, color1, color2, color3, drawTemplateCustomBlend, template]",[4500,4502],[2420,2422],"[makeLeaf]"]