[{"E:\\Projects\\GabirReact\\src\\index.js":"1","E:\\Projects\\GabirReact\\src\\App.js":"2","E:\\Projects\\GabirReact\\src\\serviceWorkerRegistration.js":"3","E:\\Projects\\GabirReact\\src\\Pages\\Assets.tsx":"4","E:\\Projects\\GabirReact\\src\\Pages\\TeamPage.tsx":"5","E:\\Projects\\GabirReact\\src\\Pages\\Calendar.tsx":"6","E:\\Projects\\GabirReact\\src\\Pages\\TeamsPage.tsx":"7","E:\\Projects\\GabirReact\\src\\Pages\\404.tsx":"8","E:\\Projects\\GabirReact\\src\\Pages\\QuoteSubmit.tsx":"9","E:\\Projects\\GabirReact\\src\\Pages\\Tutorial.tsx":"10","E:\\Projects\\GabirReact\\src\\Pages\\Showoff.tsx":"11","E:\\Projects\\GabirReact\\src\\Pages\\Timeline.tsx":"12","E:\\Projects\\GabirReact\\src\\Pages\\HaikuSubmit.tsx":"13","E:\\Projects\\GabirReact\\src\\Pages\\Driveroftheday.tsx":"14","E:\\Projects\\GabirReact\\src\\Pages\\Constructors.tsx":"15","E:\\Projects\\GabirReact\\src\\Pages\\Standings.tsx":"16","E:\\Projects\\GabirReact\\src\\Pages\\Tools\\SpecMapping.tsx":"17","E:\\Projects\\GabirReact\\src\\Pages\\Main.tsx":"18","E:\\Projects\\GabirReact\\src\\components\\QuoteForm.js":"19","E:\\Projects\\GabirReact\\src\\components\\HaikuForm.js":"20","E:\\Projects\\GabirReact\\src\\components\\Race.tsx":"21","E:\\Projects\\GabirReact\\src\\components\\Footer.tsx":"22","E:\\Projects\\GabirReact\\src\\components\\Alert\\index.tsx":"23","E:\\Projects\\GabirReact\\src\\components\\LoadingIcon\\Loading.tsx":"24","E:\\Projects\\GabirReact\\src\\components\\Header.tsx":"25","E:\\Projects\\GabirReact\\src\\components\\StandingsRow\\TeamRow.tsx":"26","E:\\Projects\\GabirReact\\src\\components\\StandingsRow\\Row.tsx":"27","E:\\Projects\\GabirReact\\src\\components\\Notification\\index.tsx":"28","E:\\Projects\\GabirReact\\src\\components\\ShareButton.tsx":"29","E:\\Projects\\GabirReact\\src\\components\\RightTab\\RightTab.tsx":"30","E:\\Projects\\GabirReact\\src\\components\\Decorations\\Fall.tsx":"31","E:\\Projects\\GabirReact\\src\\Pages\\Tools\\Toolbox.tsx":"32","E:\\Projects\\GabirReact\\src\\components\\DriverCard\\index.tsx":"33","E:\\Projects\\GabirReact\\src\\Templates\\Blank\\index.tsx":"34","E:\\Projects\\GabirReact\\src\\Pages\\MFT.tsx":"35"},{"size":350,"mtime":1634786986552,"results":"36","hashOfConfig":"37"},{"size":3060,"mtime":1637023514642,"results":"38","hashOfConfig":"37"},{"size":5201,"mtime":1634005114235,"results":"39","hashOfConfig":"37"},{"size":7178,"mtime":1634957182191,"results":"40","hashOfConfig":"37"},{"size":4787,"mtime":1635384190887,"results":"41","hashOfConfig":"37"},{"size":2821,"mtime":1634355682564,"results":"42","hashOfConfig":"37"},{"size":3739,"mtime":1635384190946,"results":"43","hashOfConfig":"37"},{"size":1250,"mtime":1634005113824,"results":"44","hashOfConfig":"37"},{"size":1070,"mtime":1635384190360,"results":"45","hashOfConfig":"37"},{"size":20073,"mtime":1634005114022,"results":"46","hashOfConfig":"37"},{"size":2883,"mtime":1635384190395,"results":"47","hashOfConfig":"37"},{"size":4103,"mtime":1635384191016,"results":"48","hashOfConfig":"37"},{"size":1068,"mtime":1635384190359,"results":"49","hashOfConfig":"37"},{"size":9763,"mtime":1634005113889,"results":"50","hashOfConfig":"37"},{"size":4441,"mtime":1635384190229,"results":"51","hashOfConfig":"37"},{"size":4617,"mtime":1635384190832,"results":"52","hashOfConfig":"37"},{"size":11026,"mtime":1635994305875,"results":"53","hashOfConfig":"37"},{"size":19648,"mtime":1635990902190,"results":"54","hashOfConfig":"37"},{"size":2892,"mtime":1634005114177,"results":"55","hashOfConfig":"37"},{"size":4172,"mtime":1634005114137,"results":"56","hashOfConfig":"37"},{"size":4510,"mtime":1636945542117,"results":"57","hashOfConfig":"37"},{"size":518,"mtime":1634005114112,"results":"58","hashOfConfig":"37"},{"size":2000,"mtime":1634957182193,"results":"59","hashOfConfig":"37"},{"size":1251,"mtime":1634355682569,"results":"60","hashOfConfig":"37"},{"size":6342,"mtime":1637028649008,"results":"61","hashOfConfig":"37"},{"size":1161,"mtime":1634005591076,"results":"62","hashOfConfig":"37"},{"size":1847,"mtime":1634005591084,"results":"63","hashOfConfig":"37"},{"size":1709,"mtime":1635569644912,"results":"64","hashOfConfig":"37"},{"size":891,"mtime":1634005114198,"results":"65","hashOfConfig":"37"},{"size":350,"mtime":1634355682569,"results":"66","hashOfConfig":"37"},{"size":1665,"mtime":1636783194150,"results":"67","hashOfConfig":"37"},{"size":3210,"mtime":1636955596886,"results":"68","hashOfConfig":"37"},{"size":1784,"mtime":1636951050391,"results":"69","hashOfConfig":"37"},{"size":1029,"mtime":1637024006093,"results":"70","hashOfConfig":"37"},{"size":4196,"mtime":1637031620720,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"z2gb0o",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"81"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"81"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"81"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"81"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"81"},"E:\\Projects\\GabirReact\\src\\index.js",[],["150","151"],"E:\\Projects\\GabirReact\\src\\App.js",[],"E:\\Projects\\GabirReact\\src\\serviceWorkerRegistration.js",[],"E:\\Projects\\GabirReact\\src\\Pages\\Assets.tsx",[],["152","153"],"E:\\Projects\\GabirReact\\src\\Pages\\TeamPage.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Calendar.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\TeamsPage.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\404.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\QuoteSubmit.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Tutorial.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Showoff.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Timeline.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\HaikuSubmit.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Driveroftheday.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Constructors.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Standings.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Tools\\SpecMapping.tsx",["154","155","156"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { useState, useEffect } from 'react'\r\nimport Header from '../../components/Header'\r\nimport Loading from \"../../components/LoadingIcon/Loading\";\r\nimport qs from 'qs';\r\nimport { Notification, Area } from '../../components/Notification/index'\r\n\r\ntype CarImage = {\r\n\tpath: string;\r\n\tname: string;\r\n}\r\n\r\ntype Preset = {\r\n\tname: string;\r\n\tmetal: number;\r\n\trough: number;\r\n}\r\n\r\nconst SpecMap = (props: any) => {\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [color, setColor] = useState((qs.parse(props.location.hash, { ignoreQueryPrefix: true })[`#color`] !== undefined ? String(qs.parse(props.location.hash, { ignoreQueryPrefix: true })[`#color`]) : \"#000000\"));\r\n\tconst [metallic, setMetallic] = useState(Number(qs.parse(props.location.hash, { ignoreQueryPrefix: true })[`metal`]) || 0);\r\n\tconst [roughness, setRoughness] = useState(Number(qs.parse(props.location.hash, { ignoreQueryPrefix: true })[`rough`]) || 0);\r\n\tconst [car, setCar] = useState((qs.parse(props.location.hash, { ignoreQueryPrefix: true })[`car`] !== undefined ? String(qs.parse(props.location.hash, { ignoreQueryPrefix: true })[`car`]) : \"streetstock\"));\r\n\tconst [copied, setCopied] = useState(false);\r\n\tconst [c, setC] = useState(false);\r\n\tconst [link, setLink] = useState(`#color=${color}&metal=${metallic}&rough=${roughness}&car=${car}`);\r\n\tconst [carsList, setCarsList] = useState<CarImage[]>([]);\r\n\tconst [presets, setPresets] = useState<Preset[]>([\r\n\t\t{name: \"Flat\",metal: 0,rough: 80},\r\n\t\t{name: \"Matte\",metal: 0,rough: 50},\r\n\t\t{name: \"Satin\",metal: 0,rough: 20},\r\n\t\t{name: \"Gloss\",metal: 0,rough: 0},\r\n\t\t{name: \"Chrome\",metal: 100,rough: 0},\r\n\t\t{name: \"Metallic\",metal: 90,rough: 40},\r\n\t\t{name: \"Candy\",metal: 50,rough: 10},\r\n\t\t{name: \"Pearl\",metal: 60,rough: 20},\r\n\t\t{name: \"Velvet\",metal: 80,rough: 100},\r\n\t]);\r\n\r\n\tfunction drawCar(hexRGB: string, metalPct: number, roughPct: number) {\r\n\t\tvar rough = roughPct / 10;\r\n\t\tvar metal = metalPct / 10;\r\n\r\n\t\tif (hexRGB.substring(0, 1) === \"#\") {\r\n\t\t\thexRGB = hexRGB.substr(1);\r\n\t\t}\r\n\t\tvar r = parseInt(hexRGB.substr(0, 2), 16) / 255;\r\n\t\tvar g = parseInt(hexRGB.substr(2, 2), 16) / 255;\r\n\t\tvar b = parseInt(hexRGB.substr(4, 2), 16) / 255;\r\n\r\n\t\tvar black = document.getElementById(\"black\");\r\n\t\tvar red = document.getElementById(\"red\");\r\n\t\tvar green = document.getElementById(\"green\");\r\n\t\tvar blue = document.getElementById(\"blue\");\r\n\r\n\t\tvar ctx = (document.getElementById(\"canvas\") as HTMLCanvasElement)?.getContext('2d');\r\n\t\tctx?.clearRect(0, 0, (document.getElementById(\"canvas\") as HTMLCanvasElement)?.width, (document.getElementById(\"canvas\") as HTMLCanvasElement)?.height);\r\n\r\n\t\tif (ctx) {\r\n\t\t\tdrawImage(ctx, black, metal, rough);\r\n\t\t\tdrawImage(ctx, red, metal, rough, r, \"lighten\");\r\n\t\t\tdrawImage(ctx, green, metal, rough, g, \"lighten\");\r\n\t\t\tdrawImage(ctx, blue, metal, rough, b, \"lighten\");\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tdrawCar(color, metallic, roughness)\r\n\t\tsetLink(`#color=${color}&metal=${metallic}&rough=${roughness}&car=${car}`);\r\n\t}, [color, metallic, roughness, car])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchCars = async () => {\r\n\t\t\tconst res = await fetch(\"https://i.gabirmotors.com/carImages\");\r\n\t\t\tconst data = await res.json();\r\n\t\t\tvar cars = [];\r\n\r\n\t\t\tfor (var i = 0; i < data.children.length; i ++) {\r\n\t\t\t\tcars.push({\r\n\t\t\t\t\tpath: data.children[i].name,\r\n\t\t\t\t\tname: data.children[i].children[0].name.replace(\".txt\", \"\")\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tsetCarsList(cars);\r\n\t\t}\r\n\r\n\t\tfetchCars();\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tdrawCar(color, metallic, roughness)\r\n\t\t\t}, 1000)\r\n\t\t}, 2000)\r\n\t}, [])\r\n\r\n\tfunction drawImage(ctx: any, image: any, metal: number, rough: number, alpha = 1.0, mode = \"copy\") {\r\n\t\tctx.save();\r\n\t\tctx.globalAlpha = alpha;\r\n\t\tctx.globalCompositeOperation = mode;\r\n\r\n\t\tvar w = image.width / 11;\r\n\t\tvar h = image.height / 11;\r\n\r\n\t\tvar xOffset = w * rough;\r\n\t\tvar yOffset = h * metal;\r\n\r\n\t\tctx.drawImage(image, xOffset, yOffset, w, h, 0, 0, 600, 400);\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\tconst changeColor = (e: any) => setColor(e.target.value)\r\n\tconst changeMetal = (e: any) => setMetallic(e.target.value * 10)\r\n\tconst changeRough = (e: any) => setRoughness(e.target.value * 10)\r\n\tconst changePreset = (e: any) => {\r\n\t\tvar values = e.target.value.split('/');\r\n\t\tsetMetallic(values[0]);\r\n\t\tsetRoughness(values[1]);\r\n\t}\r\n\tconst changeCar = (e: any) => {\r\n\t\tsetCar(e.target.value)\r\n\t\tsetTimeout(() => {\r\n\t\t\tdrawCar(color, metallic, roughness)\r\n\t\t}, 2000)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header title=\"Gabir Motors | Spec Mapping\" />\r\n\t\t\t{loading && <Loading />}\r\n\t\t\t{\r\n\t\t\t\t!loading && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Area>\r\n\t\t\t\t\t\t\t{copied && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Notification icon=\"link\">\r\n\t\t\t\t\t\t\t\t\t\tLink Copied to Clipboard\r\n\t\t\t\t\t\t\t\t\t</Notification>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Area>\r\n\t\t\t\t\t\t<div className=\"uk-height-large uk-background-cover uk-light uk-background-cover uk-background-fixed\" style={{ backgroundImage: 'url(img/gabir_bg.jpg)', minHeight: '100vh', height: 'auto' }}>\r\n\t\t\t\t\t\t\t{/* <h1 className = \"uk-margin-auto uk-text-center\">Gabir Motors Spec Map Previsualization Tool</h1> */}\r\n\r\n\t\t\t\t\t\t\t<div className = {(c ? \"uk-hidden\" : \"uk-hidden@m\")}>\r\n\t\t\t\t\t\t\t\t<div className=\"uk-width-1-2@m uk-text-center uk-margin-auto uk-margin-auto-vertical uk-container uk-position-center\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"uk-margin uk-width-large uk-margin-auto uk-card uk-card-secondary uk-card-body uk-box-shadow-large\" style={{ maxHeight: '95vh' }}>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"uk-text-danger uk-text-bold\">This page is not designed for small screens</span><br /><br />\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"#continue\" onClick = {() => { setC(true) }} className=\"uk-button uk-button-danger\">Continue Anyways</a>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className={`${(c ? \"uk-visible\" : \"uk-visible@m\")} uk-text-left uk-position-center`}>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"uk-padding-small uk-animation-fade uk-margin uk-width-1-1 uk-margin-auto uk-card uk-card-secondary uk-card-body uk-flex uk-flex-wrap\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div className = \"uk-width-1-1@s uk-width-1-2@l\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h2 className = \"uk-display-inline\">Select Your Car &nbsp;&nbsp;</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t<div uk-form-custom=\"target: > * > span:first-child\" className = \"uk-margin-bottom uk-marign-left\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select onChange = {changeCar} value = {car}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{carsList.map(ca => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value = {ca.path}>{ ca.name }</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"uk-button uk-button-default\" type=\"button\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span uk-icon=\"icon: chevron-down\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = \"uk-width-1-1 uk-text-left uk-padding-remove\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"color\">Choose a Color:</label> <input type=\"color\" id=\"color\" value={color} onChange={changeColor} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"uk-margin-left uk-margin-bottom\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input className=\"uk-form-blank uk-text-primary uk-form-width-small uk-form-small color-input\" type=\"text\" placeholder=\"Color Hex\" value = {color} onChange={changeColor} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"metallic\">Metallic</label> <span id=\"metallic-container\"><input type=\"range\" min=\"0\" max=\"10\" value={metallic / 10} id=\"metallic\" onChange={changeMetal} /> {metallic}%</span><br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"rough\">Roughness</label> <span id=\"rough-container\"><input type=\"range\" min=\"0\" max=\"10\" value={roughness / 10} id=\"rough\" onChange={changeRough} /> {roughness}%</span><br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Spec Map Color: </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"uk-margin-left uk-margin-bottom\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input className=\"uk-form-blank uk-text-primary uk-form-width-small uk-form-small color-input\" type=\"text\" placeholder=\"Spec Map Hex\" value = {`#${(Math.ceil(metallic * 2.55).toString(16).toUpperCase() === \"0\" ? \"00\" : Math.ceil(metallic * 2.55).toString(16).toUpperCase()) + (Math.ceil(roughness * 2.55).toString(16).toUpperCase() === \"0\" ? \"00\" : Math.ceil(roughness * 2.55).toString(16).toUpperCase()) + \"00\"}`} disabled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h2 className = \"uk-display-inline\">Or Use a Preset &nbsp;&nbsp;</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div uk-form-custom=\"target: > * > span:first-child\" className = \"uk-margin-bottom uk-marign-left\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select onChange = {changePreset} className = \"uk-width-1-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"0/0\">Select One</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{presets.map(p => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value = {`${p.metal}/${p.rough}`}>{ p.name }</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"uk-button uk-button-default uk-width-1-1\" type=\"button\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span uk-icon=\"icon: chevron-down\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"uk-margin uk-width-1-1 uk-flex uk-flex-wrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = \"uk-width-1-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a uk-tooltip = \"Get a link to the configuration you've made. Save it or share it with others!\" className=\"uk-button uk-button-default uk-align-right uk-width-1-1 uk-margin-remove-bottom\" href={link} onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnavigator.clipboard.writeText(\"https://gabirmotors.com/specmapping\" + link)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCopied(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTimeout(() => { setCopied(false) }, 5000)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>Click to Share</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"uk-text-warning uk-text-left\"><span className = \"uk-text-bold\"><span uk-icon=\"icon: warning\"></span> Warning!</span> Some images may take a while to load</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"uk-text-success uk-text-left\">Thank you <a href=\"https://www.tradingpaints.com/profile/666793/Zach-C-Miller\" target = \"_new\" className = \"uk-text-bold\">Bracket (Zach M.)</a> for the code help and images!</p>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className = \"uk-padding-small uk-width-1-1@s uk-width-1-2@l\">\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<img id=\"black\" src = {`https://i.gabirmotors.com/siteimages/${car}/grid-black.jpg`} style={{ display: \"none\" }} alt=\"grid-black\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<img id=\"blue\" src = {`https://i.gabirmotors.com/siteimages/${car}/grid-blue.jpg`} style={{ display: \"none\" }} alt=\"grid-blue\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<img id=\"red\" src = {`https://i.gabirmotors.com/siteimages/${car}/grid-red.jpg`} style={{ display: \"none\" }} alt=\"grid-red\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<img id=\"green\" src = {`https://i.gabirmotors.com/siteimages/${car}/grid-green.jpg`} style={{ display: \"none\" }} alt=\"grid-green\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<canvas className=\"tools-canvas uk-box-shadow-small uk-margin-auto\" id=\"canvas\" width=\"600\" height=\"400\"></canvas>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SpecMap;","E:\\Projects\\GabirReact\\src\\Pages\\Main.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\QuoteForm.js",[],"E:\\Projects\\GabirReact\\src\\components\\HaikuForm.js",[],"E:\\Projects\\GabirReact\\src\\components\\Race.tsx",["157","158"],"import { Race as RaceTypes, Driver } from '../interfaces';\r\nimport { FC, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport DriverCard from './DriverCard/index';\r\n\r\ninterface Props {\r\n  race: RaceTypes;\r\n}\r\n\r\nconst Race:FC<Props> = ({ race }) => {\r\n  // The Driver Object of the winner, or null if no number is provided\r\n  const [driver, setDriver] = useState<Driver | null>(null);\r\n\r\n  // Get the current time, this is to determine which races are completed\r\n  var time = Date.now();\r\n  // Change to seconds instead of milliseconds\r\n  time = Number(time.toString().slice(0, -3));\r\n\r\n  // Add tags to each race, will be used for filtering in the future\r\n  var classes = \"uk-text-large tag-race\";\r\n  race.tags.tags.forEach((tag) => {\r\n    classes += ` tag-${tag.trim()}`;\r\n  });\r\n\r\n  if (time < race.timestamp + 25200) classes += \" tag-uncomplete\";\r\n  if (!race.tags.paid.car.length && !race.tags.paid.track) classes += \" tag-free\";\r\n\r\n  useEffect(() => {\r\n    // Check if a car number is provided, if so then fetch the driver object\r\n    if (race.tags.winnerNumber !== null) {\r\n      (async () => {\r\n        var res = await fetch(`https://api.gabirmotors.com/driver/${race.tags.winnerNumber}`);\r\n        var data = await res.json();\r\n        setDriver(data[0]);\r\n      })()\r\n    } else {\r\n      setDriver({\r\n        \"car_number\": \"N/A\",\r\n        \"name\": race.tags.winner ? race.tags.winner : \"N/A\",\r\n      })\r\n    }\r\n  }, [race.tags.winner, race.tags.winnerNumber])\r\n\r\n  const DateSlot = () => {\r\n    return (\r\n      <td className=\"uk-text-bold\">\r\n        <span className=\"uk-text-emphasis\">{race.date}</span>{\" \"}\r\n        {time > race.timestamp + 25200 ? (\r\n          <i className=\"uk-text-muted\">COMPLETED</i>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </td>\r\n    )\r\n  }\r\n\r\n  const TrackSlot = () => {\r\n    return (\r\n      <td className=\"uk-text-emphasis\">\r\n        {race.tags.paid.track ? <b style={{ color: \"#35fc6a\" }}>$</b> : \"\"}{\" \"}\r\n        {race.track}\r\n      </td>\r\n    )\r\n  }\r\n\r\n  const CarSlot = () => {\r\n    return (\r\n      <td>\r\n        {race.car.length ? (\r\n          <span className=\"uk-text-emphasis\">\r\n            {race.car.map((car, i) =>\r\n              race.tags.paid.car.length &&\r\n              race.tags.paid.car.includes(String(i + 1)) ? (\r\n                <>\r\n                  {\" \"}\r\n                  <b style={{ color: \"#35fc6a\" }}>$</b>{\" \"}\r\n                  <span>\r\n                    {race.car[i] + (i < race.car.length - 1 ? \",\" : \"\")}\r\n                  </span>{\" \"}\r\n                </>\r\n              ) : (\r\n                \"\" + race.car[i] + (i < race.car.length - 1 ? \",\" : \"\")\r\n              )\r\n            )}\r\n          </span>\r\n        ) : (\r\n          <i className=\"uk-text-muted\">N/A</i>\r\n        )}\r\n      </td>\r\n    )\r\n  } \r\n\r\n  const NoteSlot = () => {\r\n    return (\r\n      <td className=\"uk-text-emphasis\">\r\n        {race.tags.notes != null ? (\r\n          <span className=\"uk-text-emphasis\">\r\n            <span className=\"uk-hidden@m uk-text-uppercase uk-text-bolder\">\r\n              Notes:\r\n            </span>{\" \"}\r\n            {race.tags.notes}\r\n          </span>\r\n        ) : (\r\n          <i className=\"uk-text-muted\">No notes for this race</i>\r\n        )}\r\n      </td>\r\n    )\r\n  }\r\n\r\n  const WinnerSlot = () => {\r\n    return (\r\n      <td className=\"uk-text-success\">\r\n        {race.tags.winner != null ? (\r\n          /* uk-tooltip = {`Team - Jabir Motors <br />#10`} */\r\n          <DriverCard number = {Number(race.tags.winnerNumber)} name = {race.tags.winner}>\r\n            <span className=\"uk-text-success\">\r\n              <span className=\"uk-hidden@m uk-text-uppercase uk-text-bolder\"> Winner: {\" \"} </span> {\" \"} {race.tags.winner}\r\n            </span> \r\n          </DriverCard>\r\n        ) : (\r\n          <i className=\"uk-text-muted\">N/A</i>\r\n        )}\r\n      </td>\r\n    )\r\n  }\r\n\r\n  const ThemeSlot = () => {\r\n    return (\r\n      <td>\r\n        {race.tags.theme != null ? (\r\n          <span className=\"uk-text-warning\">\r\n            <span className=\"uk-hidden@m uk-text-uppercase uk-text-bolder\">\r\n              Theme:{\" \"}\r\n            </span>{\" \"}\r\n            {race.tags.theme}\r\n          </span>\r\n        ) : (\r\n          <i className=\"uk-text-muted\">N/A</i>\r\n        )}\r\n      </td>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <tr className={classes}>\r\n      <DateSlot />\r\n      <TrackSlot />\r\n      <CarSlot />\r\n      <NoteSlot />\r\n      <WinnerSlot />\r\n      <ThemeSlot />\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Race;","E:\\Projects\\GabirReact\\src\\components\\Footer.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\Alert\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\LoadingIcon\\Loading.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\Header.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\StandingsRow\\TeamRow.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\StandingsRow\\Row.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\Notification\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\ShareButton.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\RightTab\\RightTab.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\Decorations\\Fall.tsx",["159","160"],"import { useState, useEffect } from 'react'\r\nimport './style.scss'\r\n\r\nconst Fall = () => {\r\n\tconst makeLeaf = () => {\r\n\t\tvar x = Math.floor(Math.random() * window.innerWidth);;\r\n\t\tvar leaf = Math.floor(Math.random() * 3) + 1;\r\n\t\tvar animTime = Math.random() * 11\r\n\t\tvar zIndex = Math.round(Math.random());\r\n\t\tif (animTime < 6) animTime = 6;\r\n\r\n\t\tvar span = document.createElement('span');\r\n\t\tspan.className = \"fall-leaf\"\r\n\t\tvar img = document.createElement('img');\r\n\t\timg.src = `https://i.gabirmotors.com/assets/other/fall/leaf${leaf}.png`;\r\n\t\timg.style.left = x + \"px\";\r\n\t\timg.style.animationDuration = animTime + \"s\"\r\n\t\timg.style.zIndex = String(zIndex)\r\n\t\timg.style.setProperty(\"--rotate1\", String(Math.floor(Math.random() *61) - 30) + \"deg\");\r\n\t\timg.style.setProperty(\"--rotate2\", String(Math.floor(Math.random() *61) - 30) + \"deg\");\r\n\t\timg.style.setProperty(\"--rotate3\", String(Math.floor(Math.random() *61) - 30) + \"deg\");\r\n\t\timg.style.setProperty(\"--wobble1\", String(Math.floor(Math.random() *61) - 30) + \"px\");\r\n\t\timg.style.setProperty(\"--wobble2\", String(Math.floor(Math.random() *61) - 30) + \"px\");\r\n\t\timg.style.setProperty(\"--wobble3\", String(Math.floor(Math.random() *61) - 30) + \"px\");\r\n\t\tspan.appendChild(img)\r\n\t\tvar leaves = document.getElementById(\"leaves\")\r\n\t\tleaves?.appendChild(span);\r\n\t\tvar innerLeaves = leaves?.getElementsByClassName(\"fall-leaf\")\r\n\t\tif ((innerLeaves ? innerLeaves.length : 0 ) > 20) {\r\n\t\t\tif (innerLeaves) innerLeaves[0].remove();\r\n\t\t}\r\n\r\n\t\tsetTimeout(makeLeaf, Math.random() * 5000)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tmakeLeaf();\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div id = \"leaves\">\r\n            \r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Fall;\r\n","E:\\Projects\\GabirReact\\src\\Pages\\Tools\\Toolbox.tsx",["161"],"import Header from \"../../components/Header\";\r\nimport { SocialMediaLink } from '../../interfaces';\r\nimport Blank from '../../Templates/Blank';\r\n\r\ntype CardProps = {\r\n    image: string;\r\n    title: string;\r\n    children?: any;\r\n    link: string;\r\n    target?: string;\r\n    credit?: {\r\n        links?: SocialMediaLink[];\r\n    };\r\n}\r\n\r\nconst Toolbox = () => {\r\n    const Card = (props: CardProps) => {\r\n        return (\r\n            <div className = \"uk-padding-medium\" style = {{ marginTop: \"20px\" }}>\r\n                <div className=\"uk-flex uk-flex-center uk-flex-middle\">\r\n                    <a href = {props.link} target = {props.target ? props.target : \"_new\"} className=\"uk-display-block uk-card uk-card-secondary uk-link-toggle uk-card-hover\">\r\n                        <div className=\"uk-card-media-top\">\r\n                            <img src={props.image} alt=\"\" style = {{ width: '1000px' }} className = \"uk-box-shadow-large\" />\r\n                        </div>\r\n                        <div className=\"uk-card-body\">\r\n                            <h1 style = {{ letterSpacing: \"0.6px\", fontSize: \"36px\"}} className=\"uk-card-title\">{props.title}</h1>\r\n                            {props?.children}\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Blank title = \"Toolbox\">\r\n            <div className = \"uk-child-width-1-1@s uk-child-width-1-3@m\" style = {{ padding: \"40px\"}} uk-grid=\"masonry: true;\">\r\n                <Card \r\n                    link = \"https://www.tradingpaints.com/collections/view/76489/Penny-Arcade-Liveries\" \r\n                    image = \"https://i.gabirmotors.com/downloads/b7c1c51a-dc4e-4e22-8ebd-3fb1787a83e8.png\"\r\n                    title = \"Gabir Motors / PA League Liveries\"\r\n                >\r\n                    <p>Spruce up your car and represent the best pretend motorports company!</p>\r\n                    \r\n                </Card>\r\n\r\n                <Card \r\n                    link = \"/specmapping\" \r\n                    image = \"img/specmapdemo.png\"\r\n                    title = \"Gabir Motors Spec Map Previsualization Tool\"\r\n                    target = \"_self\"\r\n                >\r\n                    <p>The tool that started it all, the Spec Mapping tool helps you refine those tricky numbers that nobody <i>really</i> understands</p>\r\n                </Card>\r\n\r\n                <Card \r\n                    link = \"/assets\" \r\n                    image = \"https://i.gabirmotors.com/assets/teams/GM/chrome.jpg\"\r\n                    title = \"Gabir Motors Assets\"\r\n                    target = \"_self\"\r\n                >\r\n                    <p>THE place to go for PA League or Gabir Motors related images, want a big Gabir logo for the hood of your Mazda? Go here! Want to represent your endurance team? Grab their logo!</p>\r\n                </Card>\r\n\r\n                {/* <Card \r\n                    link = \"#\" \r\n                    image = \"img/Gabir_Colors.png\"\r\n                    title = \"The Colors of Gabir Motors\"\r\n                    target = \"_self\"\r\n                ></Card> */}\r\n            </div>\r\n        </Blank>\r\n    )\r\n}\r\n\r\nexport default Toolbox\r\n","E:\\Projects\\GabirReact\\src\\components\\DriverCard\\index.tsx",["162"],"import { Driver } from '../../interfaces';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.scss'\r\nimport { SocialMediaLink } from '../../interfaces'\r\n\r\ntype Props = {\r\n    number: number;\r\n    name: string;\r\n    children: any;\r\n    links?: SocialMediaLink[];\r\n}\r\n\r\nexport default function DriverCard(props: Props) {\r\n    const { number, name, links } = props;\r\n\r\n    // The Driver Object of the winner\r\n    const [driver, setDriver] = useState<Driver | null>(null);\r\n\r\n    useEffect(() => {\r\n        // Check if a car number is provided, if so then fetch the driver object\r\n        if (number !== null) {\r\n          (async () => {\r\n            var res = await fetch(`https://api.gabirmotors.com/driver/${number}`);\r\n            var data = await res.json();\r\n            setDriver(data[0]);\r\n          })()\r\n        } else {\r\n          setDriver({\r\n            \"car_number\": \"N/A\",\r\n            \"name\": name ? name : \"N/A\",\r\n          })\r\n        }\r\n      }, [number, name])\r\n\r\n    return (\r\n        <div className=\"uk-inline\">\r\n            <button className=\"uk-button uk-button-text\" type=\"button\">\r\n              { props.children }\r\n            </button>\r\n            {number != null && (\r\n              <div uk-dropdown = \"pos: top-center\" className = \"driver-card\">\r\n                    {driver?.team && <Link to = {`/teams${driver?.team?.abbr !== \"LWP\" ? '/'+driver?.team?.abbr : ''}?from=calendar`}><img alt = {`${driver?.team?.name} logo`} className = \"standings-logo\" src = {`https://i.gabirmotors.com/assets/teams/${driver?.team?.abbr}/main.png`} /></Link> } <br /> #{driver?.car_number} {driver?.name} {driver?.username ? `(${driver.username})` : ''}\r\n              </div>\r\n            )} \r\n          </div>\r\n    )\r\n}","E:\\Projects\\GabirReact\\src\\Templates\\Blank\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\MFT.tsx",["163","164","165"],"import { useState, useEffect } from \"react\";\r\nimport Loading from \"../components/LoadingIcon/Loading\";\r\nimport { Helmet } from 'react-helmet';\r\n\r\ntype Props = {\r\n    number: number;\r\n}\r\n\r\nconst MFT = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [numOfMFTS, setNumOfMFTS] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const getNum = async() => {\r\n\t\t\tconst res = await fetch(\"https://i.gabirmotors.com/mfts\");\r\n\t\t\tconst data = await res.json();\r\n\r\n\t\t\tsetNumOfMFTS(data.children.length)\r\n\t\t}\r\n\r\n\t\tgetNum();\r\n\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 1500)\r\n    }, [])\r\n\r\n    const MFTCard = (props: Props) => {\r\n        var image = `https://i.gabirmotors.com/MFTs/images/mft${props.number}.jpg`\r\n        return (\r\n            <div className = \"uk-padding-medium\" style = {{ marginTop: \"20px\" }}>\r\n                <div className=\"uk-flex uk-flex-center uk-flex-middle\">\r\n                    <div className=\"uk-display-block uk-card uk-card-secondary uk-link-toggle uk-card-hover\">\r\n                        <div className=\"uk-card-media-top\">\r\n                            <img src={image} alt=\"\" style = {{ width: '1000px' }} className = \"uk-box-shadow-large\" />\r\n                        </div>\r\n                        <div className=\"uk-card-body\">\r\n                            <h1 style = {{ letterSpacing: \"0.6px\", fontSize: \"36px\"}} className=\"uk-card-title\">Merch MFT #{props.number}</h1>\r\n                            <span className=\"uk-text-primary uk-text-bold\">Price:</span> <span className=\"uk-icon uk-icon-image\" style={{backgroundImage: \"url(img/small_logo.png)\" }}></span> {(Math.random() * 100).toFixed(2)}\r\n                            <br />\r\n                            <a href={image} target = \"_new\" className = \"uk-button uk-button-default uk-margin-small mft_buy\"><span uk-icon=\"icon: cart;\"></span> Buy Now</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{`Gabir Motors X MFT`}</title>\r\n                <meta name = \"description\" content = \"Gabir Motors has partnered with MFTs to bring you the world's FIRST MFT marketplace!\" />\r\n                <meta content=\"Gabir Motors X MFT\" property=\"og:title\" />\r\n                <meta content=\"Gabir Motors has partnered with MFTs to bring you the world's FIRST MFT marketplace!\" property=\"og:description\" />\r\n                <meta name=\"Gabir Motors X MFT\" content=\"Gabir Motors\" />\r\n                <meta name=\"twitter:description\" content=\"Gabir Motors has partnered with MFTs to bring you the world's FIRST MFT marketplace!\" />\r\n            </Helmet>\r\n\r\n            {loading && <Loading />}\r\n\r\n            {!loading && (\r\n                <>\r\n                    <nav className=\"uk-navbar-container\" uk-navbar = \"true\" style = {{ backgroundColor: \"#222222\", color: \"white\", padding: \"20px\" }}>\r\n                        <div className=\"uk-navbar-center\">\r\n                            <a className=\"uk-navbar-item uk-logo\" href=\"#\">\r\n                                <img src=\"https://i.gabirmotors.com/assets/teams/GM/main.png\" style = {{ height: \"4rem\" }} />\r\n                                <span uk-icon=\"icon: close; ratio: 2.5\" style = {{ color: \"white\", fontWeight: \"bolder\" }}></span>\r\n                                <img src=\"https://i.gabirmotors.com/MFTs/mftlogo.png\" style = {{ height: \"4rem\" }} />\r\n                            </a>\r\n                        </div>\r\n                    </nav>\r\n                    <div className=\"uk-height-large uk-background-cover uk-light uk-flex uk-background-cover uk-background-fixed\" style={{ backgroundImage: 'url(img/gabir_bg.jpg)', height: 'auto', paddingBottom: \"5vh\", minHeight: \"100vh\" }}>\r\n                        <div className = \"uk-child-width-1-1@s uk-child-width-1-5@m\" style = {{ padding: \"40px\"}} uk-grid=\"true\">\r\n                            {Array(numOfMFTS).fill(\" \").map((h, i) => <MFTCard number = {i + 1} />)}\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MFT\r\n",{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":29,"column":18,"nodeType":"172","messageId":"173","endLine":29,"endColumn":28},{"ruleId":"174","severity":1,"message":"175","line":71,"column":5,"nodeType":"176","endLine":71,"endColumn":38,"suggestions":"177"},{"ruleId":"174","severity":1,"message":"178","line":97,"column":5,"nodeType":"176","endLine":97,"endColumn":7,"suggestions":"179"},{"ruleId":"170","severity":1,"message":"180","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":14},{"ruleId":"170","severity":1,"message":"181","line":12,"column":10,"nodeType":"172","messageId":"173","endLine":12,"endColumn":16},{"ruleId":"170","severity":1,"message":"182","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":18},{"ruleId":"174","severity":1,"message":"183","line":38,"column":5,"nodeType":"176","endLine":38,"endColumn":7,"suggestions":"184"},{"ruleId":"170","severity":1,"message":"185","line":1,"column":8,"nodeType":"172","messageId":"173","endLine":1,"endColumn":14},{"ruleId":"170","severity":1,"message":"186","line":15,"column":27,"nodeType":"172","messageId":"173","endLine":15,"endColumn":32},{"ruleId":"187","severity":1,"message":"188","line":66,"column":29,"nodeType":"189","endLine":66,"endColumn":76},{"ruleId":"190","severity":1,"message":"191","line":67,"column":33,"nodeType":"189","endLine":67,"endColumn":126},{"ruleId":"190","severity":1,"message":"191","line":69,"column":33,"nodeType":"189","endLine":69,"endColumn":118},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"@typescript-eslint/no-unused-vars","'setPresets' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'drawCar'. Either include it or remove the dependency array.","ArrayExpression",["194"],"React Hook useEffect has missing dependencies: 'color', 'drawCar', 'metallic', and 'roughness'. Either include them or remove the dependency array.",["195"],"'Link' is defined but never used.","'driver' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'makeLeaf'. Either include it or remove the dependency array.",["196"],"'Header' is defined but never used.","'links' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [color, metallic, roughness, car, drawCar]",{"range":"203","text":"204"},"Update the dependencies array to be: [color, drawCar, metallic, roughness]",{"range":"205","text":"206"},"Update the dependencies array to be: [makeLeaf]",{"range":"207","text":"208"},[3033,3066],"[color, metallic, roughness, car, drawCar]",[3624,3626],"[color, drawCar, metallic, roughness]",[1569,1571],"[makeLeaf]"]