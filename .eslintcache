[{"E:\\Projects\\GabirReact\\src\\index.js":"1","E:\\Projects\\GabirReact\\src\\App.js":"2","E:\\Projects\\GabirReact\\src\\serviceWorkerRegistration.js":"3","E:\\Projects\\GabirReact\\src\\Pages\\MFT.tsx":"4","E:\\Projects\\GabirReact\\src\\Pages\\404.tsx":"5","E:\\Projects\\GabirReact\\src\\Pages\\Calendar.tsx":"6","E:\\Projects\\GabirReact\\src\\Pages\\TeamPage.tsx":"7","E:\\Projects\\GabirReact\\src\\Pages\\TeamsPage.tsx":"8","E:\\Projects\\GabirReact\\src\\Pages\\Assets.tsx":"9","E:\\Projects\\GabirReact\\src\\Pages\\QuoteSubmit.tsx":"10","E:\\Projects\\GabirReact\\src\\Pages\\HaikuSubmit.tsx":"11","E:\\Projects\\GabirReact\\src\\Pages\\Timeline.tsx":"12","E:\\Projects\\GabirReact\\src\\Pages\\Driveroftheday.tsx":"13","E:\\Projects\\GabirReact\\src\\Pages\\Tutorial.tsx":"14","E:\\Projects\\GabirReact\\src\\Pages\\Standings.tsx":"15","E:\\Projects\\GabirReact\\src\\Pages\\Gabirdle.tsx":"16","E:\\Projects\\GabirReact\\src\\Pages\\TestingTemplates.tsx":"17","E:\\Projects\\GabirReact\\src\\Pages\\Constructors.tsx":"18","E:\\Projects\\GabirReact\\src\\Pages\\Tools\\ColorTemplate.tsx":"19","E:\\Projects\\GabirReact\\src\\Pages\\Tools\\ColorTemplateDownload.tsx":"20","E:\\Projects\\GabirReact\\src\\Pages\\Tools\\DownforceGuide.tsx":"21","E:\\Projects\\GabirReact\\src\\Pages\\Main.tsx":"22","E:\\Projects\\GabirReact\\src\\Pages\\Tools\\SpecMapping.tsx":"23","E:\\Projects\\GabirReact\\src\\utils\\gabirdleWords.js":"24","E:\\Projects\\GabirReact\\src\\utils\\useKeypress.js":"25","E:\\Projects\\GabirReact\\src\\utils\\allwords.js":"26","E:\\Projects\\GabirReact\\src\\Components\\Notification\\index.tsx":"27","E:\\Projects\\GabirReact\\src\\Components\\Alert\\index.tsx":"28","E:\\Projects\\GabirReact\\src\\Templates\\Blank\\index.tsx":"29","E:\\Projects\\GabirReact\\src\\Templates\\CenterCard\\index.tsx":"30","E:\\Projects\\GabirReact\\src\\utils\\shimKeyboardEvent.js":"31","E:\\Projects\\GabirReact\\src\\Components\\index.ts":"32","E:\\Projects\\GabirReact\\src\\Components\\StandingsRow\\index.ts":"33","E:\\Projects\\GabirReact\\src\\Components\\Decorations\\index.ts":"34","E:\\Projects\\GabirReact\\src\\Components\\QuoteForm\\index.js":"35","E:\\Projects\\GabirReact\\src\\Components\\HaikuForm\\index.js":"36","E:\\Projects\\GabirReact\\src\\Components\\DriverCard\\index.tsx":"37","E:\\Projects\\GabirReact\\src\\Components\\LoadingIcon\\index.tsx":"38","E:\\Projects\\GabirReact\\src\\Components\\Footer\\index.tsx":"39","E:\\Projects\\GabirReact\\src\\Components\\LoadingPage\\index.tsx":"40","E:\\Projects\\GabirReact\\src\\Components\\CalendarRow\\index.tsx":"41","E:\\Projects\\GabirReact\\src\\Components\\CarFrame\\index.tsx":"42","E:\\Projects\\GabirReact\\src\\Components\\ShareButton\\index.tsx":"43","E:\\Projects\\GabirReact\\src\\Components\\Header\\index.tsx":"44","E:\\Projects\\GabirReact\\src\\Components\\StandingsRow\\DriverRow\\index.tsx":"45","E:\\Projects\\GabirReact\\src\\Components\\StandingsRow\\TeamRow\\index.tsx":"46","E:\\Projects\\GabirReact\\src\\Components\\Decorations\\Christmas\\index.tsx":"47","E:\\Projects\\GabirReact\\src\\Components\\Decorations\\Fall\\index.tsx":"48","E:\\Projects\\GabirReact\\src\\Pages\\Schedule.tsx":"49","E:\\Projects\\GabirReact\\src\\utils\\channelchooser.ts":"50","E:\\Projects\\GabirReact\\src\\Pages\\channelchooser\\ChannelChooser.tsx":"51","E:\\Projects\\GabirReact\\src\\utils\\schedule.ts":"52"},{"size":350,"mtime":1634786986552,"results":"53","hashOfConfig":"54"},{"size":2848,"mtime":1678643913782,"results":"55","hashOfConfig":"54"},{"size":5201,"mtime":1634005114235,"results":"56","hashOfConfig":"54"},{"size":4358,"mtime":1645169159641,"results":"57","hashOfConfig":"54"},{"size":774,"mtime":1678643362548,"results":"58","hashOfConfig":"54"},{"size":2106,"mtime":1678643439291,"results":"59","hashOfConfig":"54"},{"size":2938,"mtime":1678643952566,"results":"60","hashOfConfig":"54"},{"size":3701,"mtime":1678643970254,"results":"61","hashOfConfig":"54"},{"size":5585,"mtime":1678643406526,"results":"62","hashOfConfig":"54"},{"size":1016,"mtime":1678643896989,"results":"63","hashOfConfig":"54"},{"size":999,"mtime":1678643886942,"results":"64","hashOfConfig":"54"},{"size":4164,"mtime":1645169159702,"results":"65","hashOfConfig":"54"},{"size":9725,"mtime":1645169159626,"results":"66","hashOfConfig":"54"},{"size":20070,"mtime":1645169159770,"results":"67","hashOfConfig":"54"},{"size":4586,"mtime":1645169159669,"results":"68","hashOfConfig":"54"},{"size":18722,"mtime":1678643640775,"results":"69","hashOfConfig":"54"},{"size":172,"mtime":1645169159693,"results":"70","hashOfConfig":"54"},{"size":3381,"mtime":1645169159613,"results":"71","hashOfConfig":"54"},{"size":12450,"mtime":1645169159713,"results":"72","hashOfConfig":"54"},{"size":4562,"mtime":1645169159727,"results":"73","hashOfConfig":"54"},{"size":1414,"mtime":1645169159728,"results":"74","hashOfConfig":"54"},{"size":19666,"mtime":1678643818347,"results":"75","hashOfConfig":"54"},{"size":9501,"mtime":1678643280104,"results":"76","hashOfConfig":"54"},{"size":521,"mtime":1671310778943,"results":"77","hashOfConfig":"54"},{"size":1279,"mtime":1645169159892,"results":"78","hashOfConfig":"54"},{"size":159231,"mtime":1645169159890,"results":"79","hashOfConfig":"54"},{"size":1709,"mtime":1671159652507,"results":"80","hashOfConfig":"54"},{"size":2000,"mtime":1671159652446,"results":"81","hashOfConfig":"54"},{"size":1234,"mtime":1678656800192,"results":"82","hashOfConfig":"54"},{"size":767,"mtime":1645169159773,"results":"83","hashOfConfig":"54"},{"size":934,"mtime":1645169159891,"results":"84","hashOfConfig":"54"},{"size":679,"mtime":1671159652510,"results":"85","hashOfConfig":"54"},{"size":116,"mtime":1671159652510,"results":"86","hashOfConfig":"54"},{"size":108,"mtime":1671159652467,"results":"87","hashOfConfig":"54"},{"size":2892,"mtime":1671159652508,"results":"88","hashOfConfig":"54"},{"size":4172,"mtime":1671159652486,"results":"89","hashOfConfig":"54"},{"size":1863,"mtime":1671159652485,"results":"90","hashOfConfig":"54"},{"size":951,"mtime":1671159652487,"results":"91","hashOfConfig":"54"},{"size":518,"mtime":1671159652486,"results":"92","hashOfConfig":"54"},{"size":1257,"mtime":1671159652488,"results":"93","hashOfConfig":"54"},{"size":3771,"mtime":1671159652465,"results":"94","hashOfConfig":"54"},{"size":6131,"mtime":1671159652465,"results":"95","hashOfConfig":"54"},{"size":891,"mtime":1671159652508,"results":"96","hashOfConfig":"54"},{"size":6670,"mtime":1678643393364,"results":"97","hashOfConfig":"54"},{"size":1850,"mtime":1671159652508,"results":"98","hashOfConfig":"54"},{"size":1164,"mtime":1671159652509,"results":"99","hashOfConfig":"54"},{"size":2220,"mtime":1671159652466,"results":"100","hashOfConfig":"54"},{"size":1652,"mtime":1671159652466,"results":"101","hashOfConfig":"54"},{"size":1161,"mtime":1678648022346,"results":"102","hashOfConfig":"54"},{"size":4711,"mtime":1678645008860,"results":"103","hashOfConfig":"54"},{"size":4445,"mtime":1678658343138,"results":"104","hashOfConfig":"54"},{"size":3047,"mtime":1678647908312,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"x6p0n7",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"115"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"115"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"115"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"115"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"115"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"115"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"115"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"115"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Projects\\GabirReact\\src\\index.js",[],["220","221"],"E:\\Projects\\GabirReact\\src\\App.js",[],"E:\\Projects\\GabirReact\\src\\serviceWorkerRegistration.js",[],"E:\\Projects\\GabirReact\\src\\Pages\\MFT.tsx",[],["222","223"],"E:\\Projects\\GabirReact\\src\\Pages\\404.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Calendar.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\TeamPage.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\TeamsPage.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Assets.tsx",["224"],"import React from 'react'\r\nimport { useState, useEffect } from \"react\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport Alert from '../Components/Alert/index'\r\nimport { \r\n    GetFile,\r\n    GetFolder\r\n} from '../interfaces';\r\nimport Blank from '../Templates/Blank/index';\r\n\r\ninterface FileTypes {\r\n    path:      string;\r\n    name:      string;\r\n    ext:       string;\r\n    size:      number;\r\n}\r\n\r\ninterface FolderTypes {\r\n    name:      string;\r\n    children:  (GetFile | GetFolder)[];\r\n}\r\n\r\nconst Assets = () => {\r\n    const [assets, setAssets] = useState({children: []});\r\n\r\n    useEffect(() => {\r\n        const fetchAssets = async () => {\r\n            const res = await fetch(`https://i.gabirmotors.com/assetsList`)\r\n            const data = await res.json()\r\n            \r\n            console.log(data)\r\n    \r\n            return setAssets(data);\r\n        }\r\n\r\n        fetchAssets();\r\n    }, [])\r\n\r\n    const Image = ({ name, path, ext, size }:FileTypes) => {\r\n        var tag = path;\r\n        var tags = tag.replace(\"public/assets/\", \"\").substring(0,tag.replace(\"public/assets/\", \"\").lastIndexOf('/')).split('/');\r\n        var classes = \"tag-all\";\r\n        tags.forEach(t => {\r\n            classes += \" tag-\"+t\r\n        })\r\n\r\n\r\n        return (\r\n            <div style = {{ marginTop: \"20px\", padding: \"20px\" }} className = {classes}>\r\n                <div className=\"uk-flex uk-flex-center uk-flex-middle\">\r\n                    <a href = {`https://i.gabirmotors.com${path.replace('public', '')}`} target = \"_new\" uk-tooltip={`${name} | ${((size / 1000) / 1000).toFixed(2)}MB`}><img src={`https://i.gabirmotors.com${path.replace('public', '')}`} alt=\"\" style = {{ maxHeight: \"150px\" }} uk-img = \"true\"/></a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const Folder = ({ name, children }:FolderTypes) => {\r\n        return  (\r\n            <>\r\n                { children.map((child:GetFile | GetFolder) => {\r\n                    if (\"children\" in child) {\r\n                        return <Folder name = {child.name} children = {child?.children}/>\r\n                    } else {\r\n                        return <Image name = {child.name} path = {child.path} ext = {child.extension} size = {child.size} />  \r\n                    }\r\n                })}\r\n            </>\r\n        )\r\n    }\r\n\r\n    // Stop looking through my code >:|\r\n\r\n    return (\r\n        <>\r\n            <Blank title=\"Assets\" loading={false}>\r\n                <div className=\"uk-width-2-3@m uk-text-center uk-margin-auto uk-container\" uk-filter=\"target: .assets-filter; animation: fade\">\r\n                    <div style = {{ marginTop: \"5vh\" }}>\r\n                        <ul className=\"uk-subnav uk-subnav-pill\">\r\n                            <li uk-filter-control=\".tag-all\"><a href=\"#All\">All</a></li>\r\n                            <li>\r\n                                <a href = \"#Teams\">Teams</a>\r\n                                <div uk-dropdown=\"mode: click; pos: bottom-justify\">\r\n                                    <ul className=\"uk-list uk-subnav uk-subnav-pill\">\r\n                                        <li uk-filter-control=\".tag-teams\"><a href=\"#ALL\">All Teams</a></li>\r\n                                        <li uk-filter-control=\".tag-GM\"><a href=\"#GM\">GM</a></li>\r\n                                        <li uk-filter-control=\".tag-ASS\"><a href=\"#ASS\">ASS</a></li>\r\n                                        <li uk-filter-control=\".tag-JM\"><a href=\"#JM\">JM</a></li>\r\n                                        <li uk-filter-control=\".tag-SENDIT\"><a href=\"#SENDIT\">SENDIT</a></li>\r\n                                        <li uk-filter-control=\".tag-HMA\"><a href=\"#HMA\">HMA</a></li>\r\n                                        <li uk-filter-control=\".tag-LWP\"><a href=\"#LWP\">LWP</a></li>\r\n                                        <li uk-filter-control=\".tag-FWC\"><a href=\"#FWC\">FWC</a></li>\r\n                                        <li uk-filter-control=\".tag-CT\"><a href=\"#CT\">CT</a></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </li>\r\n                            <li uk-filter-control=\".tag-endurance\"><a href=\"#Endurance\">Endurance Racing</a></li>\r\n                            <li uk-filter-control=\".tag-league\"><a href=\"#League\">League</a></li>\r\n                            <li uk-filter-control=\".tag-characters\"><a href=\"#Characters\">Characters</a></li>\r\n                            <li uk-filter-control=\".tag-inverted\"><a href=\"#Inverted\">Inverted</a></li>\r\n                            <li uk-filter-control=\".tag-other\"><a href=\"#Other\">Other</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className = \"uk-child-width-1-3@s uk-child-width-1-3@m assets-filter\" uk-grid=\"masonry: true; 50\">\r\n                        { assets.children.map((child:GetFile | GetFolder) => {\r\n                            if (\"children\" in child) {\r\n                                return (\r\n                                    <Folder name = {child.name} children = {child?.children}/>\r\n                                )\r\n                            } else {\r\n                                return (\r\n                                    <Image name = {child.name} path = {child.path} ext = {child.extension} size = {child.size} /> \r\n                                )  \r\n                            }\r\n                        })}\r\n                    </div>\r\n                </div>        \r\n            </Blank>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Assets)\r\n","E:\\Projects\\GabirReact\\src\\Pages\\QuoteSubmit.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\HaikuSubmit.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Timeline.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Driveroftheday.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Tutorial.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Standings.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Gabirdle.tsx",["225","226","227","228","229","230","231","232","233"],"import Blank from '../Templates/Blank/index';\r\nimport { useState, useEffect } from 'react';\r\nimport allWords from '../utils/allwords';\r\nimport words from '../utils/gabirdleWords';\r\nimport useKeypress from '../utils/useKeypress';\r\n\r\nconst startTime = 1671177600 * 1000;\r\n\r\ninterface GameState {\r\n\tguessRow: \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\";\r\n\trows: {\r\n\t\t\"0\": string[];\r\n\t\t\"1\": string[];\r\n\t\t\"2\": string[];\r\n\t\t\"3\": string[];\r\n\t\t\"4\": string[];\r\n\t\t\"5\": string[];\r\n\t};\r\n\tinSpot: string[];\r\n\tinWord: string[];\r\n\tnotInWord: string[];\r\n}\r\n\r\ninterface Streak {\r\n\tguesses: {\r\n\t\t\"1\": number;\r\n\t\t\"2\": number;\r\n\t\t\"3\": number;\r\n\t\t\"4\": number;\r\n\t\t\"5\": number;\r\n\t\t\"6\": number;\r\n\t};\r\n\tplayed: number; \r\n\twon: number;\r\n\tstreak: number;\r\n\tmax_streak: number;\r\n}\r\n\r\nconst Gabirdle = () => {\r\n\tconst [gameState, setGameState] = useState<GameState>({\r\n\t\tguessRow: \"0\",\r\n\t\trows: {\r\n\t\t\t\"0\": [\"\", \"\", \"\", \"\", \"\"],\r\n\t\t\t\"1\": [\"\", \"\", \"\", \"\", \"\"],\r\n\t\t\t\"2\": [\"\", \"\", \"\", \"\", \"\"],\r\n\t\t\t\"3\": [\"\", \"\", \"\", \"\", \"\"],\r\n\t\t\t\"4\": [\"\", \"\", \"\", \"\", \"\"],\r\n\t\t\t\"5\": [\"\", \"\", \"\", \"\", \"\"]\r\n\t\t},\r\n\t\tinSpot: [],\r\n\t\tinWord: [],\r\n\t\tnotInWord: []\r\n\t})\r\n\r\n\t/*\r\n\t\tc - Correct / in spot\r\n\t\ti - in word\r\n\t\tn - not in word\r\n\t*/\r\n\tconst [evaluations,setEvaluations] = useState<string[][]>([\r\n\t\t[],\r\n\t\t[],\r\n\t\t[],\r\n\t\t[],\r\n\t\t[],\r\n\t\t[]\r\n\t]);\r\n\t\r\n\tconst [keysRow1, setKeysRow1] = useState([\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"])\r\n\tconst [keysRow2, setKeysRow2] = useState([\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"])\r\n\tconst [keysRow3, setKeysRow3] = useState([\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"])\r\n\tconst [state, setState] = useState(\"PLAYING\");\r\n    const [message, setMessage] = useState<string | null>(null);\r\n    const [shareMessage, setShareMessage] = useState(\"\");\r\n    const [shareButton, setShareButton] = useState(\"SHARE\");\r\n    const [nextTime, setNextTime] = useState(startTime);\r\n\tconst [timeAddSteps, setTimeAddSteps] = useState(0);\r\n\r\n\tconst [streak, setStreak] = useState<Streak>({\r\n\t\tguesses: {\r\n\t\t\t\"1\": 0,\r\n\t\t\t\"2\": 0,\r\n\t\t\t\"3\": 0,\r\n\t\t\t\"4\": 0,\r\n\t\t\t\"5\": 0,\r\n\t\t\t\"6\": 0\r\n\t\t},\r\n\t\tplayed: 0, \r\n\t\twon: 0,\r\n\t\tstreak: 0,\r\n\t\tmax_streak: 0\r\n\t})\r\n\r\n\tuseKeypress(['Enter', 'Backspace', ...keysRow1, ...keysRow2, ...keysRow3], (event: { key: string }) => {\r\n\t\tif (event.key === \"Backspace\") pressButton(\"del\");\r\n\t\telse if (event.key === \"Enter\") pressButton(\"enter\");\r\n\t\telse if (keysRow1.includes(event.key.toUpperCase()) || keysRow2.includes(event.key.toUpperCase()) || keysRow3.includes(event.key.toUpperCase())) {\r\n\t\t\tpressButton(event.key.toUpperCase())\r\n\t\t}\r\n\t});\r\n\r\n\tconst [wordToGuess, setWordToGuess] = useState(words[0])\r\n\r\n\tconst endMessages = [\r\n\t\t[\r\n\t\t\t\"Genius!\",\r\n\t\t\t\"Suspiciously Good!\",\r\n\t\t\t\"That's Amazing!\",\r\n\t\t\t\"Rivaling the Speeds of Mike Racecar\"\r\n\t\t],\r\n\t\t[\r\n\t\t\t\"I Can't Believe you Did That...\",\r\n\t\t\t\"That's Impressive!\"\r\n\t\t],\r\n\t\t[\r\n\t\t\t\"A Very Good Game\",\r\n\t\t\t\"Wow!\",\r\n\t\t\t\"Nice!\"\r\n\t\t],\r\n\t\t[\r\n\t\t\t\"A Very Respectable Score\",\r\n\t\t\t\"Great Job!\"\r\n\t\t],\r\n\t\t[\r\n\t\t\t\"That was cutting it close!\",\r\n\t\t\t\"Good Save!\"\r\n\t\t],\r\n\t\t[\r\n\t\t\t\"I was starting to get worried!\"\r\n\t\t]\r\n\t]\r\n\r\n    function timeConverter(UNIX_timestamp:number){\r\n        var a = new Date(UNIX_timestamp);;\r\n        var year = a.getFullYear();\r\n        var month = a.getMonth() + 1 < 10 ? \"0\" + String(a.getMonth() + 1) : String(a.getMonth() + 1);\r\n        var date = \"0\" + a.getDate();\r\n        var hour = \"0\" + a.getHours();\r\n        var min = \"0\" + a.getMinutes();\r\n        var sec = \"0\" + a.getSeconds();\r\n        let _tz = new Date()!.toString()!.match(/([-\\+][0-9]+)\\s/)![1]\r\n        var s = `${year}-${month}-${date.substr(-2)}T${hour.substr(-2)}:${min.substr(-2)}:${sec.substr(-2)}${_tz}`\r\n        return s\r\n    }\r\n\r\n\tconst pressButton = (btn: string) => {\r\n\t\tif (state !== \"PLAYING\") return;\r\n        setMessage(null);\r\n\r\n\t\tif (btn !== \"enter\" && btn !== \"del\") {\r\n\t\t\tif (gameState.rows[gameState.guessRow].length < 6) {\r\n\t\t\t\tlet _temp = gameState.rows[gameState.guessRow]\r\n\t\t\t\tlet foundEmptySpace = null;\r\n\t\t\t\tfor (var i = 0; i < gameState.rows[gameState.guessRow].length; i++) {\r\n\t\t\t\t\tif (gameState.rows[gameState.guessRow][i] === \"\" && foundEmptySpace === null) {\r\n\t\t\t\t\t\tfoundEmptySpace = i;\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (foundEmptySpace === null) { return }\r\n\r\n\t\t\t\t_temp[foundEmptySpace] = btn;\r\n\t\t\t\tsetGameState({ ...gameState, rows: { ...gameState.rows, [gameState.guessRow]: _temp } })\r\n\t\t\t}\r\n\t\t} else if (btn === \"del\") {\r\n\t\t\tif (gameState.rows[gameState.guessRow].length > 0) {\r\n\t\t\t\tlet _temp = gameState.rows[gameState.guessRow]\r\n\t\t\t\tlet foundEmptySpace = 5;\r\n\t\t\t\tfor (var i = 0; i < gameState.rows[gameState.guessRow].length; i++) {\r\n\t\t\t\t\tif (gameState.rows[gameState.guessRow][i] === \"\" && foundEmptySpace === 5) {\r\n\t\t\t\t\t\tfoundEmptySpace = i;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_temp[foundEmptySpace - 1] = \"\";\r\n\t\t\t\tsetGameState({ ...gameState, rows: { ...gameState.rows, [gameState.guessRow]: _temp } })\r\n\t\t\t}\r\n\t\t} else if (btn === \"enter\") {\r\n\t\t\t// Enter Guess\r\n\t\t\tlet userGuess = gameState.rows[gameState.guessRow].join(\"\").toLowerCase();\r\n\t\t\tif (userGuess.length !== 5) return setMessage(\"Guess Must be 5 Letters\");\r\n\t\t\tif (!(allWords.includes(userGuess) || words.includes(userGuess))) {\r\n\t\t\t\treturn setMessage(\"That is Not a Valid Word\")\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"Guessing: \" + userGuess);\r\n\r\n\t\t\t\tlet _split = gameState.rows[gameState.guessRow];\r\n\t\t\t\tfor (var letter in _split) {\r\n\t\t\t\t\tlet _l = _split[letter];\r\n\t\t\t\t\tif (_l.toLowerCase() === wordToGuess.toLowerCase()[letter]) {\r\n\t\t\t\t\t\t//In Spot\r\n\t\t\t\t\t\tlet _temp = gameState.inSpot;\r\n\t\t\t\t\t\tif (!_temp.includes(_l)) {\r\n\t\t\t\t\t\t\t_temp.push(_l)\r\n\t\t\t\t\t\t\tsetGameState({ ...gameState, inSpot: _temp })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (wordToGuess.toLowerCase().split(\"\").includes(_l.toLowerCase())) {\r\n\t\t\t\t\t\t// In Word\r\n\t\t\t\t\t\tlet _temp = gameState.inWord;\r\n\t\t\t\t\t\tif (!_temp.includes(_l)) {\r\n\t\t\t\t\t\t\t_temp.push(_l)\r\n\t\t\t\t\t\t\tsetGameState({ ...gameState, inWord: _temp })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (_l) {\r\n\t\t\t\t\t\t// None\r\n\t\t\t\t\t\tlet _temp = gameState.notInWord;\r\n\t\t\t\t\t\tif (!_temp.includes(_l)) {\r\n\t\t\t\t\t\t\t_temp.push(_l)\r\n\t\t\t\t\t\t\tsetGameState({ ...gameState, notInWord: _temp })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet _t = evaluations\r\n\t\t\t\tlet _toAdd = [\"n\", \"n\", \"n\", \"n\", \"n\"];\r\n\t\t\t\tlet _splitWord = wordToGuess.toUpperCase().split(\"\");\r\n\t\t\t\tlet _userGuess = [...gameState.rows[gameState.guessRow]];\r\n\r\n\t\t\t\t// Check for letter in the correct spot\r\n\t\t\t\tconsole.log(\"Looking for letters in the right spot\")\r\n\t\t\t\tfor (var i = 0; i < _splitWord.length; i ++) {\r\n\t\t\t\t\tif (_splitWord[i] === _userGuess[i]) {\r\n\t\t\t\t\t\t_splitWord[i] = \"_\";\r\n                        _userGuess[i] = \"-\";\r\n\t\t\t\t\t\t_toAdd[i] = \"c\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t// Check for letters in the word\t\r\n\t\t\t\tconsole.log(\"Looking for letters in the word\")\r\n\t\t\t\tfor (var i = 0; i < _userGuess.length; i ++) {\r\n\t\t\t\t\tif (_splitWord.includes(_userGuess[i])) {\r\n\t\t\t\t\t\t_splitWord[_splitWord.indexOf(_userGuess[i])] = \"_\";\r\n                        _userGuess[i] = \"-\";\r\n\t\t\t\t\t\t_toAdd[i] = \"i\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t_t[Number(gameState.guessRow)] = _toAdd;\r\n\t\t\t\tsetEvaluations(_t)\r\n                let _lw = true\r\n\r\n                if (userGuess === wordToGuess) {\r\n\t\t\t\t\tsetState(\"WIN\")\r\n\t\t\t\t\tsetMessage(endMessages[Number(gameState.guessRow)][Math.floor(Math.random() * endMessages[Number(gameState.guessRow)].length)])\r\n\t\t\t\t} else {\r\n                    switch (gameState.guessRow) {\r\n                        case \"0\": setGameState({ ...gameState, guessRow: \"1\" }); break;\r\n                        case \"1\": setGameState({ ...gameState, guessRow: \"2\" }); break;\r\n                        case \"2\": setGameState({ ...gameState, guessRow: \"3\" }); break;\r\n                        case \"3\": setGameState({ ...gameState, guessRow: \"4\" }); break;\r\n                        case \"4\": setGameState({ ...gameState, guessRow: \"5\" }); break;\r\n                        case \"5\":\r\n                            if (userGuess !== wordToGuess) {\r\n                                setMessage(\"The word was: \" + wordToGuess.toUpperCase())\r\n                                setState(\"LOSE\")\r\n                                _lw = false;\r\n                                break;\r\n                            }\r\n                    }\r\n                }\r\n\r\n                if (userGuess === wordToGuess || gameState.guessRow === \"5\") {\r\n\t\t\t\t\tconsole.log(\"Making Share Message...\")\r\n                    var _tempMessage = `Gabirdle ${timeAddSteps + 1} ${!_lw ? \"X\" : Number(gameState.guessRow) + 1}/6`;\r\n                    Object.values(gameState.rows).map((row, j) => {\r\n                        if (row[0] !== \"\") _tempMessage += '\\n';\r\n                        row.map((letter, i) => {\r\n                            if (j < Number(gameState.guessRow) + 1) {\r\n                                if (letter.toLowerCase() === wordToGuess.toLowerCase()[i]) {\r\n                                    return _tempMessage += '🟩';\r\n                                } else if (wordToGuess.toLowerCase().split(\"\").includes(letter.toLowerCase())) {\r\n                                    return _tempMessage += '🟨';\r\n                                } else {\r\n                                    return _tempMessage += '⬛';\r\n                                }\r\n                            }\r\n                        })\r\n                    })\r\n                    setShareMessage(_tempMessage);\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet _tempStreakData = streak;\r\n\t\t\t\t\t_tempStreakData.played ++;\r\n\r\n\t\t\t\t\tif (userGuess === wordToGuess) { \r\n\t\t\t\t\t\t_tempStreakData.won ++;\r\n\t\t\t\t\t\t_tempStreakData.streak ++;\r\n\t\t\t\t\t\tif (_tempStreakData.streak > _tempStreakData.max_streak) _tempStreakData.max_streak = _tempStreakData.streak;\r\n\t\t\t\t\t\tswitch (gameState.guessRow) {\r\n\t\t\t\t\t\t\tcase \"0\": _tempStreakData.guesses[\"1\"] ++; break;\r\n\t\t\t\t\t\t\tcase \"1\": _tempStreakData.guesses[\"2\"] ++; break;\r\n\t\t\t\t\t\t\tcase \"2\": _tempStreakData.guesses[\"3\"] ++; break;\r\n\t\t\t\t\t\t\tcase \"3\": _tempStreakData.guesses[\"4\"] ++; break;\r\n\t\t\t\t\t\t\tcase \"4\": _tempStreakData.guesses[\"5\"] ++; break;\r\n\t\t\t\t\t\t\tcase \"5\": _tempStreakData.guesses[\"6\"] ++; break;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (_tempStreakData.streak > _tempStreakData.max_streak) _tempStreakData.max_streak = _tempStreakData.streak;\r\n\t\t\t\t\t\t_tempStreakData.streak = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tsetStreak(_tempStreakData)\r\n\r\n                    let menuButton = document.getElementById(\"menuButton\") as HTMLButtonElement;\r\n                    menuButton.click();\r\n\r\n\t\t\t\t\tconsole.log(\"Setting Local Storage...\")\r\n\t\t\t\t\tlocalStorage.setItem(\"lastGame\", JSON.stringify({\r\n\t\t\t\t\t\tgameState,\r\n\t\t\t\t\t\tevaluations,\r\n\t\t\t\t\t\tstate: (userGuess === wordToGuess ? \"WIN\" : \"LOSE\"),\r\n\t\t\t\t\t\twordToGuess,\r\n\t\t\t\t\t\tshareMessage: _tempMessage\r\n\t\t\t\t\t}))\r\n\r\n\t\t\t\t\tlocalStorage.setItem(\"streak\", JSON.stringify(streak))\r\n                }\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n    useEffect(() => {\r\n\t\tvar currentTime = Date.now();\r\n\t\tlet c = startTime;\r\n\t\tlet oneDay = 24 * 60 * 60 * 1000;\r\n\t\tlet steps = 0;\r\n\r\n\t\twhile (c < currentTime) {\r\n\t\t\tc += oneDay;\r\n\t\t\tsteps ++;\r\n\t\t}\r\n\r\n\t\tsetNextTime(c);\r\n\t\tsetTimeAddSteps(steps);\r\n\t\tsetWordToGuess(words[steps % words.length])\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"Looking for gamedata in local storage\")\r\n\t\tlet _dataFromLocalStorage = localStorage.getItem(\"lastGame\");\r\n\t\tif (_dataFromLocalStorage !== null) { \r\n\t\t\tlet _d = JSON.parse(_dataFromLocalStorage)\r\n\t\t\tconsole.log(\"found gamedata in local storage\")\r\n\t\t\tconsole.log(_d.wordToGuess, wordToGuess)\r\n\t\t\tif (_d.wordToGuess === wordToGuess) {\r\n\t\t\t\tsetGameState(_d!.gameState);\r\n\t\t\t\tsetEvaluations(_d!.evaluations);\r\n\t\t\t\tsetState(_d!.state);\r\n\t\t\t\tsetShareMessage(_d!.shareMessage);\r\n\t\t\t} else {\r\n\t\t\t\tsetGameState({\r\n\t\t\t\t\tguessRow: \"0\",\r\n\t\t\t\t\trows: {\r\n\t\t\t\t\t\t\"0\": [\"\", \"\", \"\", \"\", \"\"],\r\n\t\t\t\t\t\t\"1\": [\"\", \"\", \"\", \"\", \"\"],\r\n\t\t\t\t\t\t\"2\": [\"\", \"\", \"\", \"\", \"\"],\r\n\t\t\t\t\t\t\"3\": [\"\", \"\", \"\", \"\", \"\"],\r\n\t\t\t\t\t\t\"4\": [\"\", \"\", \"\", \"\", \"\"],\r\n\t\t\t\t\t\t\"5\": [\"\", \"\", \"\", \"\", \"\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tinSpot: [],\r\n\t\t\t\t\tinWord: [],\r\n\t\t\t\t\tnotInWord: []\r\n\t\t\t\t});\r\n\t\t\t\tsetEvaluations([[],[],[],[],[],[]]);\r\n\t\t\t\tsetState(\"PLAYING\");\r\n\t\t\t\tsetShareMessage(\"\");\r\n\t\t\t}\r\n\t\t}\t\r\n\r\n\t\tconsole.log(\"Looking for streak data in local storage\")\r\n\t\t_dataFromLocalStorage = localStorage.getItem(\"streak\");\r\n\t\tif (_dataFromLocalStorage !== null) {\r\n\t\t\tlet _d = JSON.parse(_dataFromLocalStorage)\r\n\t\t\tconsole.log(\"found streak data in local storage\")\r\n\t\t\tsetStreak(_d);\r\n\t\t}\r\n\t}, [wordToGuess])\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"State: \" + state)\r\n\t}, [state])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Blank title=\"Gabirdle\" loading={false}>\r\n\t\t\t\t<div id=\"shareMenu\" uk-offcanvas=\"flip: true; overlay: true\">\r\n\t\t\t\t\t<div className=\"uk-offcanvas-bar\">\r\n\r\n\t\t\t\t\t\t<button className=\"uk-offcanvas-close\" type=\"button\" uk-close=\"true\"></button>\r\n                        \r\n                        <div className=\"uk-child-width-1-4 uk-text-center\" uk-grid = \"true\" uk-scrollspy=\"cls: uk-animation-slide-top-medium; target: .fade-cd; delay: 100; repeat: false\" uk-countdown={`date: ` + timeConverter(nextTime)} uk-parallax=\"blur: 15;\">\r\n                            <div className = \"uk-width-1-1\">\r\n                                <h1 className = \"fade-cd uk-text-center uk-display-block\">NEXT WORD IN</h1>\r\n                            </div>\r\n                            <div className = \"fade-cd\">\r\n                                <span className=\"acumin uk-countdown-number uk-countdown-days\"></span>\r\n                                <div className=\"acumin uk-countdown-label\">Days</div>\r\n                            </div>\r\n                            <div className = \"fade-cd\">\r\n                                <span className=\"acumin uk-countdown-number uk-countdown-hours\"></span>\r\n                                <div className=\"acumin uk-countdown-label\">Hours</div>\r\n                            </div>\r\n                            <div className = \"fade-cd\">\r\n                                <span className=\"acumin uk-countdown-number uk-countdown-minutes\"></span>\r\n                                <div className=\"acumin uk-countdown-label\">Minutes</div>\r\n                            </div>\r\n                            <div className = \"fade-cd\">\r\n                                <span className=\"acumin uk-countdown-number uk-countdown-seconds\"></span>\r\n                                <div className=\"acumin uk-countdown-label\">Seconds</div>\r\n                            </div>\r\n                        </div>\r\n\r\n\t\t\t\t\t\t{state === \"PLAYING\" ? <h2 className = \"text-4xl\">Finish Your Game to Share</h2> : (\r\n\t\t\t\t\t\t\t<div style={{whiteSpace: \"pre-wrap\"}}>\r\n\t\t\t\t\t\t\t\t{shareMessage}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<br />\r\n                        {state !== \"PLAYING\" ? <a id = \"share\" onClick = {() => {\r\n                            navigator.clipboard.writeText(shareMessage);\r\n                            setShareButton(\"COPIED\");\r\n                        }} uk-tooltip = \"Share\" className = \"uk-button uk-button-default\" href = \"#share\">{ shareButton }</a> : \"\"}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<h2 className = \"notop text-4xl\">Games Played: <strong>{ streak.played }</strong></h2>\r\n\t\t\t\t\t\t<h2 className = \"notop text-4xl\">Games Won: <strong>{ streak.won } ({ Math.floor((streak.won / streak.played) * 100) }%)</strong></h2>\r\n\t\t\t\t\t\t<h2 className = \"notop text-4xl\">Win Streak: <strong>{ streak.streak }</strong></h2>\r\n\t\t\t\t\t\t<h2 className = \"notop text-4xl\">Max Streak: <strong>{ streak.max_streak }</strong></h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div id=\"game\">\r\n                    { message !== null ? (\r\n                        <span id = \"message\">{ message }</span>\r\n                    ) : \"\"}\r\n\t\t\t\t\t<div id=\"guesses\">\r\n\t\t\t\t\t\t{/* <button className=\"uk-button uk-button-default\" uk-toggle=\"target: #shareMenu\">Menu</button> */}\r\n                        <div id = \"header\">\r\n                            <img id = \"logo\" src=\"https://i.gabirmotors.com/assets/other/gabirdle_logo.png\" alt=\"Gabirdle Logo\"/>\r\n                            <button className=\"menuButton\" id = \"menuButton\" uk-toggle=\"target: #shareMenu\"><span uk-icon=\"icon: cog; ratio: 2.5\"></span></button>\r\n                        </div>\r\n\t\t\t\t\t\t{Object.values(gameState.rows).map((row, j) => {\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div id={`row${j + 1}`} className=\"row\" uk-scrollspy={`cls: ${((Number(gameState.guessRow) > j || (state === \"WIN\" && Number(gameState.guessRow) + 1 > j)) ? \" uk-animation-scale-up\" : \"uk-animation-slide-top-small\")}; target: .square,.in-spot,.in-word; delay: ${(Number(gameState.guessRow) > j ? \"100\" : \"50\")};; repeat: true`}>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t{row.map((letter, i) => {\r\n\t\t\t\t\t\t\t\t\t\tlet _classes = \"square \"\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (evaluations[j] !== null) {\r\n\t\t\t\t\t\t\t\t\t\t \tif (evaluations[j][i] === \"c\") {\r\n\t\t\t\t\t\t\t\t\t\t\t\t_classes += \" in-spot\"\r\n\t\t\t\t\t\t\t\t\t\t\t} else if (evaluations[j][i] === \"i\") {\r\n\t\t\t\t\t\t\t\t\t\t\t\t_classes += \" in-word\"\r\n\t\t\t\t\t\t\t\t\t\t\t} else if (evaluations[j][i] === \"n\") {\r\n\t\t\t\t\t\t\t\t\t\t\t\t_classes += \" not-in-word\"\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div id={`square${i + 1}`} className={_classes}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{letter}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div id=\"keyboard\" className=\"\">\r\n\t\t\t\t\t\t<div id=\"row1\" className=\"row\">\r\n\t\t\t\t\t\t\t{keysRow1.map((key, i) => {\r\n\t\t\t\t\t\t\t\tlet _classes = \"\";\r\n\t\t\t\t\t\t\t\tif (gameState.inSpot.includes(key)) _classes += \"in-spot\";\r\n\t\t\t\t\t\t\t\telse if (gameState.inWord.includes(key)) _classes += \"in-word\";\r\n\t\t\t\t\t\t\t\telse if (gameState.notInWord.includes(key)) _classes += \"not-in-word\";\r\n\t\t\t\t\t\t\t\treturn <button onClick={() => { pressButton(key) }} className={_classes}>{key}</button>\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div id=\"row2\" className=\"row\">\r\n\t\t\t\t\t\t\t{keysRow2.map((key, i) => {\r\n\t\t\t\t\t\t\t\tlet _classes = \"\";\r\n\t\t\t\t\t\t\t\tif (gameState.inSpot.includes(key)) _classes += \"in-spot\";\r\n\t\t\t\t\t\t\t\telse if (gameState.inWord.includes(key)) _classes += \"in-word\";\r\n\t\t\t\t\t\t\t\telse if (gameState.notInWord.includes(key)) _classes += \"not-in-word\";\r\n\t\t\t\t\t\t\t\treturn <button onClick={() => { pressButton(key) }} className={_classes}>{key}</button>\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div id=\"row3\" className=\"row\">\r\n\t\t\t\t\t\t\t<button className=\"big\" onClick={() => { pressButton(\"enter\") }}><span uk-icon=\"icon: check; ratio: 2\"></span></button>\r\n\t\t\t\t\t\t\t{keysRow3.map((key, i) => {\r\n\t\t\t\t\t\t\t\tlet _classes = \"\";\r\n\t\t\t\t\t\t\t\tif (gameState.inSpot.includes(key)) _classes += \"in-spot\";\r\n\t\t\t\t\t\t\t\telse if (gameState.inWord.includes(key)) _classes += \"in-word\";\r\n\t\t\t\t\t\t\t\telse if (gameState.notInWord.includes(key)) _classes += \"not-in-word\";\r\n\t\t\t\t\t\t\t\treturn <button onClick={() => { pressButton(key) }} className={_classes}>{key}</button>\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t<button className=\"big\" onClick={() => { pressButton(\"del\") }}><span uk-icon=\"icon: arrow-left; ratio: 2\"></span></button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Blank>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Gabirdle;","E:\\Projects\\GabirReact\\src\\Pages\\TestingTemplates.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Constructors.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Tools\\ColorTemplate.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Tools\\ColorTemplateDownload.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Tools\\DownforceGuide.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Main.tsx",["234","235","236"],"import { useState, useEffect } from \"react\";\r\nimport { Race } from '../interfaces';\r\nimport { Alert } from '../Components';\r\nimport qs from 'qs';\r\nimport { Christmas } from '../Components/Decorations';\r\nimport { LoadingPage, Footer, Header, Notification, NotificationArea as Area } from \"../Components\";\r\n\r\nconst MainBody = (props: any) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [isLive, setIsLive] = useState(false);\r\n  // eslint-disable-next-line\r\n  const [urlQuery, setUrlQuery] = useState(qs.parse(props.location.search, { ignoreQueryPrefix: true }));\r\n  const [next, setNext] = useState<Race>({\r\n    \"tags\": {\r\n      \"paid\": {\r\n        \"track\": false,\r\n        \"car\": []\r\n      },\r\n      \"tags\": [\r\n        \"note\"\r\n      ],\r\n      \"notes\": null,\r\n      \"winnerNumber\": null,\r\n      \"winner\": null,\r\n      \"theme\": null\r\n    },\r\n    \"car\": [\r\n      \"N/A\"\r\n    ],\r\n    \"date\": \"\",\r\n    \"timestamp\": 0,\r\n    \"track\": \"\",\r\n    \"id\": \"0\",\r\n  });\r\n\r\n\t\r\n\r\n  const codes = [\"RACECAR\", \"NOTLAST\", \"PODIUM\", \"COLDTIRES\", \"GABIR\"];\r\n\r\n  function timeConverter(UNIX_timestamp:number){\r\n    var a = new Date(UNIX_timestamp * 1000);;\r\n    var year = a.getFullYear();\r\n    var month = a.getMonth() + 1 < 10 ? \"0\" + String(a.getMonth() + 1) : String(a.getMonth() + 1);\r\n    var date = \"0\" + a.getDate();\r\n    var hour = \"0\" + a.getHours();\r\n    var min = \"0\" + a.getMinutes();\r\n    var sec = \"0\" + a.getSeconds();\r\n    var s = `${year}-${month}-${date.substr(-2)}T${hour.substr(-2)}:${min.substr(-2)}:${sec.substr(-2)}-07:00`\r\n    return s\r\n  }\r\n\r\n  const fetchCal = async () => {\r\n    const res = await fetch(`https://api.gabirmotors.com/calendar`)\r\n    const data:Race[] = await res.json()\r\n    \r\n    return data.sort((a:Race, b:Race) => { return a.timestamp - b.timestamp })\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      var cal = await fetchCal();\r\n      var done = false;\r\n\r\n      for (var i = 0; i < cal.length; i ++) {\r\n        console.log(cal[i].timestamp * 1000 + \" > \" + Date.now() + \" = \" + (cal[i].timestamp * 1000 > Date.now()))\r\n        if (cal[i].timestamp * 1000 > Date.now() && !done) {\r\n          done = true;\r\n\t\t\t\t\tconsole.log(\"Setting Time...\")\r\n          setNext(cal[i]);\r\n        }\r\n      }\r\n    })()\r\n\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1500)\r\n\r\n    var startTime = '19:30:00';\r\n    var endTime = '21:30:00';\r\n\r\n    var currentDate = new Date()   \r\n\r\n    var startDate = new Date(currentDate.getTime());\r\n    startDate.setHours(Number(startTime.split(\":\")[0]));\r\n    startDate.setMinutes(Number(startTime.split(\":\")[1]));\r\n    startDate.setSeconds(Number(startTime.split(\":\")[2]));\r\n\r\n    var endDate = new Date(currentDate.getTime());\r\n    endDate.setHours(Number(endTime.split(\":\")[0]));\r\n    endDate.setMinutes(Number(endTime.split(\":\")[1]));\r\n    endDate.setSeconds(Number(endTime.split(\":\")[2]));\r\n\r\n    setIsLive(startDate < currentDate && endDate > currentDate && currentDate.getDay() === 4);\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"Gabir Motors | Home\" />\r\n\r\n      {loading && <LoadingPage />}\r\n\r\n      {!loading && (\r\n        <>\r\n          {/* This is where I put the holiday related images */}\r\n\t\t\t\t\t{/* <Fall /> */}\r\n          {\r\n            urlQuery?.error && urlQuery.error === \"noteam\" && (\r\n              <Alert type = \"danger\" title = \"Error!\" text = \"Error with retrieving the given team\" />\r\n            )\r\n          }\r\n\r\n          {\r\n            urlQuery?.success && urlQuery.success === \"quotesubmit\" && (\r\n              <Alert type = \"success\" title = \"Success!\" text = \"Your quote has been recieved, thank you!\" />\r\n            )\r\n          }\r\n\r\n          {\r\n            urlQuery?.success && urlQuery.success === \"haikusubmit\" && (\r\n              <Alert type = \"success\" title = \"Success!\" text = \"Your haiku has been recieved, thank you!\" />\r\n            )\r\n          }        \r\n\r\n          {/* <Area>\r\n            {isLive && (\r\n              <>\r\n                <Notification icon = \"twitch\" link = \"https://gabirmotors.com/live\">\r\n                  The League is Live RIGHT NOW!!! Click to watch\r\n                </Notification>\r\n              </>\r\n            )}\r\n          </Area> */}\r\n\r\n          <div id=\"offcanvas-flip\" uk-offcanvas=\"flip: true; overlay: true\">\r\n            <div className=\"uk-offcanvas-bar\">\r\n              <img src=\"img/NorthernHarbor.png\" alt=\"Northern Harbor Logo\" />\r\n              <h2>\r\n                Get <strong>20%</strong> off your next order at Northern Harbor\r\n              </h2>\r\n              <h4>\r\n                Use code{\" \"}\r\n                <code>{codes[Math.floor(Math.random() * codes.length)]}</code>{\" \"}\r\n                for 20% off any of Northern Harbor's beef based seafood\r\n                products!\r\n              </h4>\r\n              <blockquote>\r\n                <p className=\"uk-text-muted\">\r\n                  Northern Harbor is the world's premier provider of meat-based\r\n                  fish substitutes. With mouth-watering favorites like our\r\n                  Bone-In Fysh Wyngz, our succulent Fishey Mignon, and our new\r\n                  You'll Swear It's Beef line of Shramp and Crobb crostini,\r\n                  we've got something for every person who wants to ask for fish\r\n                  but actually get beef.{\" \"}\r\n                </p>\r\n                <footer>Northern Harbor</footer>\r\n              </blockquote>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"uk-height-large uk-background-fixed uk-light uk-flex uk-background-cover\"\r\n            style={{\r\n              backgroundImage: \"url(img/gabir_bg.jpg)\",\r\n              height: \"100vh\",\r\n            }}\r\n          >\r\n            <Christmas />\r\n            <div className=\"uk-child-width-1-4 uk-text-center uk-position-top-center\" uk-grid = \"true\" uk-scrollspy=\"cls: uk-animation-slide-top-medium; target: .fade-cd; delay: 400;\" uk-countdown={`date: ` + timeConverter(next.timestamp)} uk-parallax=\"blur: 15;\">\r\n              <div className = \"uk-width-1-1\">\r\n                <h1 className = \"fade-cd uk-text-center uk-display-block\">NEXT RACE IN</h1>\r\n              </div>\r\n              <div className = \"fade-cd\">\r\n                <span className=\"acumin uk-countdown-number uk-countdown-days\"></span>\r\n                <div className=\"acumin uk-countdown-label\">Days</div>\r\n              </div>\r\n              <div className = \"fade-cd\">\r\n                <span className=\"acumin uk-countdown-number uk-countdown-hours\"></span>\r\n                <div className=\"acumin uk-countdown-label\">Hours</div>\r\n              </div>\r\n              <div className = \"fade-cd\">\r\n                <span className=\"acumin uk-countdown-number uk-countdown-minutes\"></span>\r\n                <div className=\"acumin uk-countdown-label\">Minutes</div>\r\n              </div>\r\n              <div className = \"fade-cd\">\r\n                <span className=\"acumin uk-countdown-number uk-countdown-seconds\"></span>\r\n                <div className=\"acumin uk-countdown-label\">Seconds</div>\r\n              </div>\r\n            </div>\r\n            <h1\r\n              className=\"uk-width-1-2@m uk-text-center uk-margin-auto uk-margin-auto-vertical uk-animation-slide-top-small uk-container uk-display-block\"\r\n              uk-parallax=\"blur: 15;\"\r\n            >\r\n              <img\r\n                uk-toggle=\"target: #offcanvas-flip\"\r\n                alt=\"Gabir Motors Logo\"\r\n                src=\"img/newgabirtext.png\"\r\n                uk-parallax=\"scale:1.2\"\r\n                style = {{ zIndex: 2 }}\r\n              />\r\n            </h1>\r\n            <div uk-scrollspy=\"target: > div; cls: uk-animation-fade; delay: 1800\">\r\n              <div\r\n                className=\"uk-position-center\"\r\n                style={{ top: \"75vh\" }}\r\n                uk-parallax=\"blur: 7;\"\r\n              >\r\n                <h3>\r\n                  <a href=\"#mike\" className=\"uk-button uk-button-default\">\r\n                    Meet the team\r\n                  </a>\r\n                  {/* <Button type = \"success\" /> */}\r\n                </h3>\r\n              </div>\r\n            </div>\r\n            <Footer />\r\n          </div>\r\n\r\n          <div\r\n            className=\"uk-height-large uk-background-cover uk-light uk-flex uk-background-cover uk-background-fixed text-shadow\"\r\n            style={{ backgroundImage: \"url(img/image.jpg)\", height: \"auto\" }}\r\n          >\r\n            <div\r\n              className=\"uk-child-width-auto uk-margin uk-child-width-1-1@m\"\r\n              uk-grid\r\n            >\r\n              <div>\r\n                <br />\r\n                <div\r\n                  id=\"mike\"\r\n                  className=\"uk-child-width-expand@m uk-text-center uk-grid-match text-shadow\"\r\n                  uk-grid=\"parallax: 100\"\r\n                  uk-scrollspy=\"cls: uk-animation-slide-left-small; target: .fade-p2; delay: 100\"\r\n                >\r\n                  <div>\r\n                    <div\r\n                      className=\"uk-grid-margin\"\r\n                      style={{ height: \"55vh\", width: \"50vw\" }}\r\n                    >\r\n                      <img\r\n                        className=\"fade-p2 mx-auto\"\r\n                        src=\"img/MikeRacecar.png\"\r\n                        alt=\"Mike Racecar\"\r\n                        style={{ height: \"55vh\", width: \"auto\" }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div style={{ width: \"45vw\" }}>\r\n                      <h2 className=\"fade-p2 text-4xl\">Mike Racecar</h2>\r\n                      <p className=\"fade-p2 bio-p uk-text-left\">\r\n                        His momma was a V6 and his daddy is the track.\r\n                        Metaphorically speaking. But he was born in the backseat\r\n                        of a stock car, that much we know for certain, because\r\n                        that car is now in a museum - the Mike Racecar Museum.\r\n                        In 2007, he fell asleep during a race and still won. He\r\n                        can't read nothing but the road, and the only number he\r\n                        can count to is \"1st.\"\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <blockquote cite=\"#\" className=\"fade-p2\">\r\n                        <p className=\"uk-margin-small-bottom\">\r\n                          The tallest flowers get cut, don't try to be good at\r\n                          anything.\r\n                        </p>\r\n                        <footer>\r\n                          <cite>\r\n                            <a\r\n                              target=\"_new\"\r\n                              href=\"https://twitter.com/cwgabriel\"\r\n                            >\r\n                              Mike Racecar\r\n                            </a>\r\n                          </cite>\r\n                        </footer>\r\n                      </blockquote>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <br />\r\n                <div\r\n                  id=\"jerry\"\r\n                  className=\"uk-child-width-expand@m uk-text-center uk-grid-match text-shadow\"\r\n                  uk-grid=\"parallax: 100\"\r\n                  uk-scrollspy=\"cls: uk-animation-slide-right-small; target: .fade-p3; delay: 100;\"\r\n                >\r\n                  {/*Not Visible except on mobile (To make it easier to read)*/}\r\n                  <div className=\"uk-hidden@m\">\r\n                    <div\r\n                      className=\"uk-grid-margin\"\r\n                      style={{ height: \"55vh\", width: \"50vw\" }}\r\n                    >\r\n                      <img\r\n                        className=\"fade-p3 mx-auto\"\r\n                        src=\"img/intro.png\"\r\n                        alt=\"Carson Bolt\"\r\n                        style={{ height: \"55vh\", width: \"auto\" }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div style={{ width: \"45vw\" }}>\r\n                      <h2 className=\"fade-p3 text-4xl\">Carson Bolt</h2>\r\n                      <p className=\"fade-p3 bio-p uk-text-left\">\r\n                        It's said the man eats rubber and drinks gasoline, just\r\n                        like the cars he loves so well. A driver himself until\r\n                        an accident at the KFC Lunch buffet twenty years ago,\r\n                        he's since become a second father to many - and a first\r\n                        father to some. Topped up on his signature \"Goose\r\n                        Juice,\" the recipe for which is best left unsaid, he\r\n                        rules the race from his roost in the spotter tower -\r\n                        giving Mr. Racecar the edge he needs.\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <blockquote cite=\"#\" className=\"fade-p3\">\r\n                        <p className=\"uk-margin-small-bottom\">\r\n                          Sometimes your worst nights, are your best nights.\r\n                        </p>\r\n                        <footer>\r\n                          <cite>\r\n                            <a\r\n                              target=\"_new\"\r\n                              href=\"https://twitter.com/TychoBrahe\"\r\n                            >\r\n                              Carson Bolt\r\n                            </a>\r\n                          </cite>\r\n                        </footer>\r\n                      </blockquote>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div\r\n                      className=\"uk-grid-margin uk-visible@m\"\r\n                      style={{ height: \"55vh\", width: \"50vw\" }}\r\n                    >\r\n                      <img\r\n                        className=\"fade-p3 mx-auto\"\r\n                        src=\"img/intro.png\"\r\n                        alt=\"Carson Bolt\"\r\n                        style={{ height: \"55vh\", width: \"auto\" }}\r\n                        uk-img\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <br />\r\n                <div\r\n                  id=\"kara\"\r\n                  className=\"uk-child-width-expand@m uk-text-center uk-grid-match text-shadow\"\r\n                  uk-grid=\"parallax: 100\"\r\n                  uk-scrollspy=\"cls: uk-animation-slide-left-small; target: .fade-p4; delay: 100;\"\r\n                >\r\n                  <div>\r\n                    <div\r\n                      className=\"uk-grid-margin\"\r\n                      style={{ height: \"55vh\", width: \"50vw\" }}\r\n                    >\r\n                      <img\r\n                        className=\"fade-p4 mx-auto\"\r\n                        src=\"img/kara.png\"\r\n                        alt=\"Kara\"\r\n                        style={{ height: \"55vh\", width: \"auto\" }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div style={{ width: \"45vw\" }}>\r\n                      <h2 className=\"fade-p4 text-4xl\">Kara</h2>\r\n                      <p className=\"fade-p4 bio-p uk-text-left\">\r\n                        Kara is many things. Wife to one, Mother to some and\r\n                        loved by all, she is the prettiest spotter in racing!\r\n                        Trust me, when you're riding one of these 3,200 pound\r\n                        steel beasts out of turn four at Daytona and you don't\r\n                        even know your own name anymore much less what the hell\r\n                        is going on outside your 200 MPH coffin, well, she's\r\n                        that calm voice in your ear like an angel of God calling\r\n                        you home to the finish line.{\" \"}\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <blockquote cite=\"#\" className=\"fade-p4\">\r\n                        <p className=\"uk-margin-small-bottom\">\r\n                          What?! You're insane!\r\n                        </p>\r\n                        <footer>\r\n                          <cite>\r\n                            <a\r\n                              target=\"_new\"\r\n                              href=\"https://twitter.com/karajanae\"\r\n                            >\r\n                              Kara\r\n                            </a>\r\n                          </cite>\r\n                        </footer>\r\n                      </blockquote>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <br />\r\n                <div\r\n                  id=\"gabe\"\r\n                  className=\"uk-child-width-expand@m uk-text-center uk-grid-match text-shadow\"\r\n                  uk-grid=\"parallax: 100\"\r\n                  uk-scrollspy=\"cls: uk-animation-slide-right-small; target: .fade-p5; delay: 100;\"\r\n                >\r\n                  {/*Not Visible except on mobile (To make it easier to read)*/}\r\n                  <div className=\"uk-hidden@m\">\r\n                    <div\r\n                      className=\"uk-grid-margin\"\r\n                      style={{ height: \"55vh\", width: \"50vw\" }}\r\n                    >\r\n                      <img\r\n                        className=\"fade-p5 mx-auto\"\r\n                        src=\"img/gabe.png\"\r\n                        alt='Gabe \"The Younger\"'\r\n                        style={{ height: \"55vh\", width: \"auto\" }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div style={{ width: \"45vw\" }}>\r\n                      <h2 className=\"fade-p5 text-4xl\">Gabe \"The Younger\"</h2>\r\n                      <p className=\"fade-p5 bio-p uk-text-left\">\r\n                        Gabe The Younger leapt fully-formed from the trunk of a\r\n                        moving 1969 Pontiac GTO and he's been going fast ever\r\n                        since. Catch the heir to the Gabir Motors family\r\n                        business in front of - and, crucially - behind the\r\n                        scenes, making websites like this one and spotting live\r\n                        on streams.\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <blockquote cite=\"#\" className=\"fade-p5\">\r\n                        <p className=\"uk-margin-small-bottom\">\r\n                          I don't promise anything.\r\n                        </p>\r\n                        <footer>\r\n                          <cite>\r\n                            <a\r\n                              target=\"_new\"\r\n                              href=\"https://twitter.com/gabekrahulik\"\r\n                            >\r\n                              Gabe \"The Younger\"\r\n                            </a>\r\n                          </cite>\r\n                        </footer>\r\n                      </blockquote>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div\r\n                      className=\"uk-grid-margin uk-visible@m\"\r\n                      style={{ height: \"55vh\", width: \"50vw\" }}\r\n                    >\r\n                      <img\r\n                        className=\"fade-p5 mx-auto\"\r\n                        src=\"img/gabe.png\"\r\n                        alt='Gabe \"The Younger\"'\r\n                        style={{ height: \"55vh\", width: \"auto\" }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainBody;\r\n","E:\\Projects\\GabirReact\\src\\Pages\\Tools\\SpecMapping.tsx",["237","238"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { useState, useEffect } from 'react'\r\nimport qs from 'qs';\r\nimport { Notification, NotificationArea as Area, CarFrame } from '../../Components'\r\nimport Blank from '../../Templates/Blank/index';\r\n\r\nconst links = [\r\n\t{ name: \"GR86\", link: \"https://spec-mapping-images.gabekrahulik.repl.co\"},\r\n\t{ name: \"Porsche 911\", link: \"https://carontrack.gabekrahulik.repl.co\" },\r\n]\r\n\r\nvar updateTimeout = setTimeout(() => { }, 999999);\r\n\r\ntype Preset = {\r\n\tname: string;\r\n\tmetal: number;\r\n\trough: number;\r\n\tclearcoat: number;\r\n}\r\n\r\nconst toHex = (value: number) => { return value.toString(16).padStart(2,\"0\") }\r\n\r\nconst SpecMap = (props: any) => {\r\n\t// The inputs, either from the url or the ui\r\n\tconst [color, setColor] = useState(\"#242fb3\");\r\n\tconst [metal, setMetal] = useState(0);\r\n\tconst [roughness, setRoughness] = useState(0);\r\n\tconst [clearcoat, setClearcoat] = useState(0);\r\n\tconst [carImagesLink, setCarImagesLink] = useState(links[0]);\r\n\r\n\t// controls the \"link copied\" pop up\r\n\tconst [copied, setCopied] = useState(false);\r\n\r\n\t// If the user should continue to the tool on a smaller screen\r\n\tconst [continueWithSmallScreen, setContinueWithSmallScreen] = useState(false);\r\n\r\n\t// The link to copy\r\n\tconst [link, setLink] = useState(`#color=${color}&metal=${metal}&rough=${roughness}&clearcoat=${clearcoat}`);\r\n\r\n\t// eslint-disable-next-line\r\n\tconst [presets, setPresets] = useState<Preset[]>([\r\n\t\t{ name: \"Flat\", metal: 0, rough: 80, clearcoat: 0 },\r\n\t\t{ name: \"Matte\", metal: 0, rough: 50, clearcoat: 0 },\r\n\t\t{ name: \"Satin\", metal: 0, rough: 20, clearcoat: 0 },\r\n\t\t{ name: \"Gloss\", metal: 0, rough: 0, clearcoat: 0 },\r\n\t\t{ name: \"Chrome\", metal: 100, rough: 0, clearcoat: 0 },\r\n\t\t{ name: \"Metallic\", metal: 90, rough: 40, clearcoat: 0 },\r\n\t\t{ name: \"Candy\", metal: 50, rough: 10, clearcoat: 0 },\r\n\t\t{ name: \"Pearl\", metal: 60, rough: 20, clearcoat: 0 },\r\n\t\t{ name: \"Velvet\", metal: 80, rough: 100, clearcoat: 0 },\r\n\t]);\r\n\r\n\tconst [toSetValues, setToSetValues] = useState({\r\n\t\tmetal: 0,\r\n\t\troughness: 0,\r\n\t\tclearcoat: 0,\r\n\t\tcolor: \"#242fb3\"\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tlet parameters = qs.parse(props.location.hash, { ignoreQueryPrefix: true });\r\n\t\t\r\n\t\tif (parameters[\"#color\"] !== undefined) {\r\n\t\t\tsetColor(String(parameters[\"#color\"]));\r\n\t\t\tsetMetal(Number(parameters[\"metal\"]));\r\n\t\t\tsetRoughness(Number(parameters[\"rough\"]));\r\n\t\t\tsetClearcoat(Number(parameters[\"clearcoat\"]));\r\n\r\n\t\t\tsetToSetValues({\r\n\t\t\t\tcolor: String(parameters[\"#color\"]),\r\n\t\t\t\tmetal: Number(parameters[\"metal\"]),\r\n\t\t\t\troughness: Number(parameters[\"rough\"]),\r\n\t\t\t\tclearcoat: Number(parameters[\"clearcoat\"]),\r\n\t\t\t})\r\n\t\t}\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tclearTimeout(updateTimeout);\r\n\t\tupdateTimeout = setTimeout(() => {\r\n\t\t\tsetMetal(toSetValues.metal);\r\n\t\t\tsetRoughness(toSetValues.roughness);\r\n\t\t\tsetClearcoat(toSetValues.clearcoat);\r\n\t\t\tsetColor(toSetValues.color);\r\n\t\t}, 500)\r\n\t\tsetLink(`#color=${color}&metal=${metal}&rough=${roughness}&clearcoat=${clearcoat}`);\r\n\t}, [toSetValues])\r\n\r\n\tconst changePreset = (e: any) => {\r\n\t\tvar values = e.target.value.split('/');\r\n\t\tsetToSetValues({\r\n\t\t\t...toSetValues,\r\n\t\t\tmetal: values[0],\r\n\t\t\troughness: values[1],\r\n\t\t\tclearcoat: values[2],\r\n\t\t})\r\n\r\n\t\tsetMetal(values[0]);\r\n\t\tsetRoughness(values[1]);\r\n\t\tsetClearcoat(values[2]);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Area>\r\n\t\t\t\t{copied && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Notification icon=\"link\">\r\n\t\t\t\t\t\t\tLink Copied to Clipboard\r\n\t\t\t\t\t\t</Notification>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Area>\r\n\t\t\t<Blank title=\"Spec Mapping\">\r\n\t\t\t\t{/* <h1 className = \"uk-margin-auto uk-text-center\">Gabir Motors Spec Map Previsualization Tool</h1> */}\r\n\r\n\t\t\t\t<div className={(continueWithSmallScreen ? \"uk-hidden\" : \"uk-hidden@m\")}>\r\n\t\t\t\t\t<div className=\"uk-width-1-2@m uk-text-center uk-margin-auto uk-margin-auto-vertical uk-container uk-position-center\">\r\n\t\t\t\t\t\t<div className=\"uk-margin uk-width-large uk-margin-auto uk-card uk-card-secondary uk-card-body uk-box-shadow-large\" style={{ maxHeight: '95vh' }}>\r\n\t\t\t\t\t\t\t<span className=\"uk-text-danger uk-text-bold\">This page is not designed for small screens</span><br /><br />\r\n\t\t\t\t\t\t\t<a href=\"#continue\" onClick={() => { setContinueWithSmallScreen(true) }} className=\"uk-button uk-button-danger\">Continue Anyways</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<div className={`${(continueWithSmallScreen ? \"uk-visible\" : \"uk-visible@m\")} uk-text-left uk-position-center`}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"uk-padding-small uk-animation-fade uk-margin uk-width-1-1 uk-margin-auto uk-card uk-card-secondary uk-card-body uk-flex uk-flex-wrap\">\r\n\r\n\t\t\t\t\t\t\t<div className=\"uk-width-1-1@s uk-width-1-3@l\">\r\n\t\t\t\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<h2 className = \"uk-display-inline text-5xl\">Choose a Car &nbsp;&nbsp;</h2>\r\n\t\t\t\t\t\t\t\t\t\t<div uk-form-custom=\"target: > * > span:first-child\" className = \"uk-margin-bottom uk-marign-left\">\r\n\t\t\t\t\t\t\t\t\t\t\t<select onChange = {(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetCarImagesLink(JSON.parse(e.target.value));\r\n\t\t\t\t\t\t\t\t\t\t\t}} className = \"uk-width-1-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{links.map(link => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value = {`${JSON.stringify(link)}`}>{ link.name }</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"uk-button uk-button-default uk-width-1-1\" type=\"button\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className = \"ml-2 align-text-bottom\" uk-icon=\"icon: chevron-down\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"uk-width-1-1 uk-text-left uk-padding-remove\">\r\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"color\">Choose a Color:</label> <input type=\"color\" id=\"color\" value={color} onChange={(e) => { setToSetValues({ ...toSetValues, color: e.target.value }) }} />\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"uk-margin-left uk-margin-bottom\">\r\n\t\t\t\t\t\t\t\t\t\t\t<input className=\"uk-form-blank uk-text-primary uk-form-width-small uk-form-small color-input\" type=\"text\" placeholder=\"Color Hex\" value={toSetValues.color} onChange={(e) => { setToSetValues({ ...toSetValues, color: e.target.value }) }} />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"metallic\">Metallic</label> <span id=\"metallic-container\"><input type=\"range\" min=\"0\" max=\"100\" value={toSetValues.metal} id=\"metallic\" onChange={(e) => { setToSetValues({ ...toSetValues, metal: parseInt(e.target.value) }) }} /> {toSetValues.metal}%</span><br />\r\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"rough\">Roughness</label> <span id=\"rough-container\"><input type=\"range\" min=\"0\" max=\"100\" value={toSetValues.roughness} id=\"rough\" onChange={(e) => { setToSetValues({ ...toSetValues, roughness: parseInt(e.target.value) }) }} /> {toSetValues.roughness}%</span><br />\r\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"clearcoat\">Clear coat</label> <span id=\"clearcoat-container\"><input type=\"range\" min=\"0\" max=\"100\" value={toSetValues.clearcoat} id=\"clearcoat\" onChange={(e) => { setToSetValues({ ...toSetValues, clearcoat: parseInt(e.target.value) }) }} /> {toSetValues.clearcoat}%</span><br />\r\n\t\t\t\t\t\t\t\t\t\t<span>Spec Map Color: </span>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"uk-margin-left uk-margin-bottom\">\r\n\t\t\t\t\t\t\t\t\t\t\t<input className=\"uk-form-blank uk-text-primary uk-form-width-small uk-form-small color-input\" type=\"text\" placeholder=\"Spec Map Hex\" value={`#${toHex(Math.ceil(metal * 2.55)) + toHex(Math.ceil(roughness * 2.55)) + toHex(Math.ceil(clearcoat * 2.55))}`} disabled />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<h2 className = \"uk-display-inline text-5xl\">Or Use a Preset &nbsp;&nbsp;</h2>\r\n\t\t\t\t\t\t\t\t\t<div uk-form-custom=\"target: > * > span:first-child\" className = \"uk-margin-bottom uk-marign-left\">\r\n\t\t\t\t\t\t\t\t\t\t<select onChange = {changePreset} className = \"uk-width-1-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"0/0/0\">Select One</option>\r\n\t\t\t\t\t\t\t\t\t\t\t{presets.map(p => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value = {`${p.metal}/${p.rough}/${p.clearcoat}`}>{ p.name }</option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"uk-button uk-button-default uk-width-1-1\" type=\"button\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className = \"ml-2 align-text-bottom\" uk-icon=\"icon: chevron-down\"></span>\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"uk-margin uk-width-1-1 uk-flex uk-flex-wrap\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"uk-width-1-1\">\r\n\t\t\t\t\t\t\t\t\t\t<a uk-tooltip=\"Get a link to the configuration you've made. Save it or share it with others!\" className=\"uk-button uk-button-default uk-align-right uk-width-1-1 uk-margin-remove-bottom\" href={link} onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tnavigator.clipboard.writeText(\"https://gabirmotors.com/specmapping\" + link)\r\n\t\t\t\t\t\t\t\t\t\t\tsetCopied(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetTimeout(() => { setCopied(false) }, 5000)\r\n\t\t\t\t\t\t\t\t\t\t}}>Click to Share</a>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<p className=\"uk-text-warning uk-text-left\"><span className=\"uk-text-bold\"><span uk-icon=\"icon: warning\"></span> Warning!</span> Some images may take a while to load</p>\r\n\t\t\t\t\t\t\t\t<p className=\"uk-text-success uk-text-left\">Thank you <a href=\"https://www.tradingpaints.com/profile/666793/Zach-C-Miller\" target=\"_new\" className=\"uk-text-bold\">Bracket (Zach M.)</a> for the code help and images!</p>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"uk-padding-small uk-width-1-1@s uk-width-2-3@l\">\r\n\t\t\t\t\t\t\t\t<CarFrame\r\n\t\t\t\t\t\t\t\t\tclearcoat={clearcoat / 100}\r\n\t\t\t\t\t\t\t\t\tmetal={metal / 100}\r\n\t\t\t\t\t\t\t\t\troughness={roughness / 100}\r\n\t\t\t\t\t\t\t\t\tcolor={color}\r\n\t\t\t\t\t\t\t\t\timgPath={carImagesLink.link} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Blank>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SpecMap;","E:\\Projects\\GabirReact\\src\\utils\\gabirdleWords.js",[],"E:\\Projects\\GabirReact\\src\\utils\\useKeypress.js",[],"E:\\Projects\\GabirReact\\src\\utils\\allwords.js",[],"E:\\Projects\\GabirReact\\src\\Components\\Notification\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\Alert\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Templates\\Blank\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Templates\\CenterCard\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\utils\\shimKeyboardEvent.js",[],"E:\\Projects\\GabirReact\\src\\Components\\index.ts",[],"E:\\Projects\\GabirReact\\src\\Components\\StandingsRow\\index.ts",[],"E:\\Projects\\GabirReact\\src\\Components\\Decorations\\index.ts",[],"E:\\Projects\\GabirReact\\src\\Components\\QuoteForm\\index.js",[],"E:\\Projects\\GabirReact\\src\\Components\\HaikuForm\\index.js",[],"E:\\Projects\\GabirReact\\src\\Components\\DriverCard\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\LoadingIcon\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\Footer\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\LoadingPage\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\CalendarRow\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\CarFrame\\index.tsx",["239","240","241","242","243","244"],"import { useEffect } from \"react\";\r\n\r\nconst DEFAULT_STEPS = [\r\n    \"00\", '19', '33', '4c', '66', '7f', '99', 'b2', 'cc', 'e5', 'ff',\r\n]\r\n\r\nlet updateInterval;\r\n\r\nfunction clamp(value: number, min = 0, max = 1) {\r\n    return Math.min(max, (Math.max(value, min)));\r\n}\r\n\r\nlet colorHex = \"000000\";\r\n/**\r\n * Renders an image of a car with the given color, metal, roughness, and clearcoat values.\r\n * \r\n * The frame expects an array of images to be stored in a subdirectory, one image for each combination of metallic, roughness, and clearcoat values. (And four images each for color, black, red, green, and blue). The images should be accessible at {imgPath}/(black|red|green|blue)/######{imgExt}. \r\n */\r\nfunction CarFrame(props: {\r\n    /**\r\n     * The individual hex value steps for the source images, when constructing them from the given metal, roughness, and clearcoat values.\r\n     * \r\n     * Default is ['00', '19', '33', '4c', '66', '7f', '99', 'b2', 'cc', 'e5', 'ff']\r\n     */\r\n    steps?: string[],\r\n    /**\r\n     * The base path for fetching the source images.\r\n     */\r\n    imgPath: string,\r\n    /**\r\n     * The extension used for images. Default is \"webp\"\r\n     */\r\n    imgExt?: string,\r\n    /**\r\n     * A hex value for the color of the car to render, with or without a leading '#'.\r\n     */\r\n    color: string,\r\n    /**\r\n     * The metallic specular value.\r\n     * \r\n     * If a number, should be between 0.0 and 1.0, and will use `steps` to convert to a string value to load the base image. If a string, will be used directly to load the image.\r\n     */\r\n    metal: number | string,\r\n     /**\r\n     * The roughness specular value.\r\n     * \r\n     * If a number, should be between 0.0 and 1.0, and will use `steps` to convert to a string value to load the base image. If a string, will be used directly to load the image.\r\n     */\r\n    roughness: number| string,\r\n   /**\r\n     * The clearcoat specular value.\r\n     * \r\n     * If a number, should be between 0.0 and 1.0, and will use `steps` to convert to a string value to load the base image. If a string, will be used directly to load the image.\r\n     */\r\n    clearcoat: number| string,\r\n    /**\r\n     * The width of the canvas, in pixels. Default is 800\r\n     */\r\n    width?: number,\r\n    /**\r\n     * The height of the canvas, in pixels. Default is 450\r\n     */\r\n    height?: number,\r\n    /**\r\n     * A CSS ID prefix to use for identifying the `img` and `canvas` elements needed to draw the image. Default is \"specmap\".\r\n     */\r\n    id?: string,\r\n}) {\r\n    const steps = props.steps || DEFAULT_STEPS;\r\n    const color = props.color.substring(0,1) === \"#\" ? props.color.substring(1) : props.color;\r\n    const imgExt = props.imgExt || 'webp';\r\n    const width = props.width || 800;\r\n    const height = props.height || 450;\r\n    const id = props.id || \"specmap\"\r\n\r\n    function getFromRange<T>(value: number, steps: T[] ): T {\r\n        return steps[clamp(Math.floor(clamp(value) * steps.length), 0, steps.length-1)];\r\n    }\r\n\r\n    // construct image path\r\n    const redVal = typeof props.metal === \"string\" ? props.metal : getFromRange(props.metal, steps);\r\n    const blueVal =  typeof props.clearcoat === \"string\" ? props.clearcoat : getFromRange(props.clearcoat, steps);\r\n    const greenVal =  typeof props.roughness === \"string\" ? props.roughness : getFromRange(props.roughness, steps);\r\n\r\n    colorHex = `${redVal}${greenVal}${blueVal}`;\r\n\r\n    function drawImage(context: CanvasRenderingContext2D, image: HTMLImageElement, alpha: number = 1.0, mode: any = \"copy\") {\r\n        context.save();\r\n        context.globalAlpha = clamp(alpha);\r\n        context.globalCompositeOperation = mode;\r\n        context.drawImage(image, 0, 0, context.canvas.width, context.canvas.height);\r\n        context.restore();\r\n    }\r\n\r\n    function drawCar() {\r\n\r\n        const hexRGB = color;\r\n\r\n        var r = parseInt(hexRGB.substr(0, 2), 16) / 255;\r\n        var g = parseInt(hexRGB.substr(2, 2), 16) / 255;\r\n        var b = parseInt(hexRGB.substr(4, 2), 16) / 255;\r\n\r\n        //console.log(\"drawCar: \", r,g, b);\r\n\r\n        const canvas = document.getElementById(`${id}-canvas`) as HTMLCanvasElement;\r\n        const black = document.getElementById(`${id}-black`) as HTMLImageElement;\r\n        const red = document.getElementById(`${id}-red`) as HTMLImageElement;\r\n        const green = document.getElementById(`${id}-green`) as HTMLImageElement;\r\n        const blue = document.getElementById(`${id}-blue`) as HTMLImageElement;\r\n\r\n        if (black.complete && red.complete && green.complete && blue.complete) {\r\n            const ctx = canvas.getContext('2d')!;\r\n\r\n            drawImage(ctx, black);\r\n            drawImage(ctx, red, r, \"lighten\");\r\n            drawImage(ctx, green, g, \"lighten\");\r\n            drawImage(ctx, blue, b, \"lighten\");\r\n        }\r\n    }\r\n\r\n    // redraw car if color changes\r\n    // useEffect(() => {\r\n    //     clearTimeout(updateTimeout);\r\n    //     updateTimeout = setTimeout(() => {\r\n    //         colorHex = `${redVal}${greenVal}${blueVal}`;\r\n    //         drawCar();\r\n    //     }, 1000)\r\n    // }, [props.color, props.clearcoat, props.metal, props.roughness])\r\n\r\n    useEffect(() => {\r\n            drawCar();\r\n    }, [props])\r\n\r\n    const blackImgSrc = `${props.imgPath}/black/${colorHex}.${imgExt}`;\r\n    const redImgSrc = `${props.imgPath}/red/${colorHex}.${imgExt}`;\r\n    const greenImgSrc = `${props.imgPath}/green/${colorHex}.${imgExt}`;\r\n    const blueImgSrc = `${props.imgPath}/blue/${colorHex}.${imgExt}`;\r\n\r\n    return <div style={{width: `${width}px`, height: `${height}px`}}>\r\n        <img src={blackImgSrc} id={`${id}-black`} style={{ display: \"none\" }} onLoad={drawCar} />\r\n        <img src={redImgSrc} id={`${id}-red`} style={{ display: \"none\" }} onLoad={drawCar} />\r\n        <img src={greenImgSrc} id={`${id}-green`} style={{ display: \"none\" }} onLoad={drawCar} />\r\n        <img src={blueImgSrc} id={`${id}-blue`} style={{ display: \"none\" }} onLoad={drawCar} />\r\n        <canvas id={`${id}-canvas`} width={width} height={height} className = \"tools-canvas uk-box-shadow-small uk-margin-auto\" />\r\n    </div>\r\n}\r\n\r\nexport default CarFrame;","E:\\Projects\\GabirReact\\src\\Components\\ShareButton\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\Header\\index.tsx",["245","246","247"],"import { Link, withRouter, RouteComponentProps  } from 'react-router-dom'\r\nimport { FC, useState, useEffect } from 'react';\r\nimport { ShareButton } from '../';\r\n\r\ninterface Props extends RouteComponentProps {\r\n  title: string;\r\n  desc?: string;\r\n}\r\n\r\nconst Header:FC<Props> = (props) => {\r\n  const { title = \"Gabir Motors\", desc = 'The world’s premiere, pretend Motorsports Company. Proud sponsor of Mike Racecar and the Penny Arcade iRacing league.' } = props;\r\n  \r\n  useEffect(() => {\r\n    (async () => {\r\n      var res = await fetch('https://streaming.gabirmotors.com/dodotd');\r\n      var data = await res.json();\r\n\r\n      if (res.status === 200) {\r\n        setDriveroftheday(data.do);\r\n      }\r\n    })();\r\n    console.log(\"      _________________   ____  ____  ___       \\n     /  ______________/  /   / /   / /   \\\\     \\n    /  /      _______   /   / /   / /    /      \\n   /  /      /____  /  /   / /   / /    /       \\n  /  /___________/ /  /   / /   / /    /        \\n  \\\\_______________/  /___/ /___/ /____/         \\n\");\r\n}, [])\r\n\r\n  const [driveroftheday, setDriveroftheday] = useState(false)\r\n\r\n  \r\n  return (\r\n    <header>\r\n      <title>{ title }</title>\r\n      <meta\r\n        name=\"description\"\r\n        content= {desc}\r\n      />\r\n      <div uk-sticky = \"true\" style= {{ zIndex: 1001 }}>\r\n        {/* eslint-disable-next-line */}\r\n        <a id = \"menuopen\" className=\"uk-margin-small-right uk-position-top-left\"uk-toggle=\"target: #offcanvas-slide\" href = \"#\"><span uk-icon=\"icon: menu; ratio: 2\" style = {{color: 'white'}}></span></a>\r\n      </div>\r\n\r\n      <div id=\"offcanvas-slide\" uk-offcanvas=\"mode: slide;\">\r\n        <div className=\"uk-offcanvas-bar uk-flex uk-flex-column\">\r\n\r\n        <ul uk-nav = \"true\" className=\"uk-nav-primary uk-margin-auto-vertical uk-nav-parent-icon\" uk-scrollspy=\"cls: uk-animation-slide-left-medium; target: .nav-text,.uk-logo; delay: 50; repeat: false\">\r\n            <li className=\"uk-logo\"><Link to=\"/\"><img src = \"../img/logo.png\" alt = \"GM logo\" style = {{width: '14vw', height: 'auto', minWidth: '200px'}}/></Link></li>\r\n\r\n            {/* <span className = \"uk-text-success uk-text-bold\">Assets and Spec Mapping have moved to the <Link to = \"/toolbox\">Toolbox</Link></span> */}\r\n            <Link to = \"/gabirdle\"><span className = \"uk-text-success uk-text-bold\">Check out Gabirdle!</span></Link>\r\n\r\n            { driveroftheday && <Link to = \"/vote\" className = { `uk-text-success` }>Livery Parade Vote</Link> }\r\n            <li className=\"uk-nav-divider\"></li>\r\n          \r\n            <li><Link className = \"uk-button-link uk-text-primary nav-text\" to = \"/calendar\">Calendar</Link></li>\r\n            <li><Link className = \"uk-button-link uk-text-primary nav-text\" to = \"/teams\">Teams</Link></li>\r\n            <li><Link className = \"uk-button-link uk-text-primary nav-text\" to = \"/tutorial\">Tutorials</Link></li>\r\n            <li className = \"uk-parent\">\r\n              <a className = \"uk-button-link uk-text-primary nav-text\">Tools</a>\r\n              <ul className=\"uk-nav-sub\">\r\n                <li><Link className = \"uk-button-link uk-text-primary nav-text-sub\" to = \"/assets\">Assets</Link></li>\r\n                <li><Link className = \"uk-button-link uk-text-primary nav-text-sub\" to = \"/specmapping\">Spec Mapping</Link></li>\r\n              </ul>\r\n            </li>\r\n            <li className = \"uk-parent\">\r\n              <a className = \"uk-button-link uk-text-primary nav-text\">Standings</a>\r\n              <ul className=\"uk-nav-sub\">\r\n                <li><Link className = \"uk-button-link uk-text-primary nav-text-sub\" to = \"/standings\">Driver Standings</Link></li>\r\n                <li><Link className = \"uk-button-link uk-text-primary nav-text-sub\" to = \"/constructors\">Team Standings</Link></li>\r\n              </ul>\r\n            </li>\r\n            <li className = \"uk-parent\">\r\n              <a className = \"uk-button-link uk-text-primary nav-text\">Submissions</a>\r\n              <ul className=\"uk-nav-sub\">\r\n                <li><Link className = \"uk-button-link uk-text-primary nav-text-sub\" to = \"/haikus\">Haikus</Link></li>\r\n                <li><Link className = \"uk-button-link uk-text-primary nav-text-sub\" to = \"/quotes\">Quotes</Link></li>\r\n              </ul>\r\n            </li>\r\n            \r\n            <li className=\"uk-nav-divider\"></li>\r\n            <li uk-scrollspy=\"cls: uk-animation-slide-top; target: .icon; delay: 100;\">\r\n              <a target = \"_new\" uk-tooltip = \"PA League Discord\" className = \"icon uk-display-inline uk-button\" href = \"https://discord.gabirmotors.com/\"><span className = \"icon-button icon-button-discord\" uk-icon = \"icon:discord; ratio: 1.4\"></span></a>&nbsp;&nbsp;\r\n              <a target = \"_new\" uk-tooltip = \"PA Twitch\" className = \"icon uk-display-inline uk-button\" href = \"https://www.twitch.tv/pennyarcade\"><span className = \"icon-button icon-button-twitch\" uk-icon = \"icon:twitch; ratio: 1.4\"></span></a>&nbsp;&nbsp;\r\n              <a target = \"_new\" uk-tooltip = \"@GabirMotors\" className = \"icon uk-display-inline uk-button\" href = \"https://twitter.com/GabirMotors\"><span className = \"icon-button icon-button-twitter\" uk-icon = \"icon:twitter; ratio: 1.4\"></span></a>&nbsp;&nbsp;\r\n              <a target = \"_new\" uk-tooltip = \"GM Merch\" className = \"icon uk-display-inline uk-button\" href = \"https://store.penny-arcade.com/collections/gabir-motors\"><span className = \"icon-button icon-button-store\" uk-icon = \"icon:bag; ratio: 1.4\"></span></a>&nbsp;&nbsp;\r\n              <a target = \"_new\" uk-tooltip = \"Source code\" className = \"icon uk-display-inline uk-button\" href = \"https://github.com/LilSpartan/GabirReactFrontend/tree/production\"><span className = \"icon-button icon-button-github\" uk-icon = \"icon:git-branch; ratio: 1.4\"></span></a>&nbsp;&nbsp;\r\n              <ShareButton />\r\n            </li>\r\n            <li uk-scrollspy=\"cls: uk-animation-slide-left-medium; target: .uk-text-uppercase; delay: 100;\">\r\n              <p className = \"uk-margin-top uk-text-uppercase uk-text-top\">Made by<br /><span style = {{color:'white'}}>Gabe Krahulik</span><br/><a target = \"_new\" href=\"https://github.com/Lilspartan/\"><span className = \"icon-button icon-button-github\" uk-icon = \"github\"></span></a> <a target = \"_new\" href=\"https://twitter.com/gabekrahulik\"><span className = \"icon-button icon-button-twitter\" uk-icon = \"twitter\"></span></a></p>\r\n            </li>\r\n            <li className=\"uk-nav-divider\"></li>\r\n            <a className = \"uk-button uk-button-link\" href = \"mailto:gabirmotors@gmail.com\" target = \"_new\">Report a Problem</a>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default withRouter(Header);","E:\\Projects\\GabirReact\\src\\Components\\StandingsRow\\DriverRow\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\StandingsRow\\TeamRow\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\Decorations\\Christmas\\index.tsx",["248","249"],"import { useState, useEffect } from 'react'\r\nimport '../style.scss'\r\n\r\nconst Christmas = () => {\r\n\tconst makeLeaf = () => {\r\n\t\tvar x = Math.floor(Math.random() * (window.innerWidth - 100));\r\n\t\tvar leaf = Math.floor(Math.random() * 3) + 1;\r\n\t\tvar animTime = Math.random() * 25\r\n\t\tvar z = Math.round(Math.random());\r\n\t\tif (animTime < 15) animTime = 15;\r\n\t\tvar isBig = Math.random() * 11\r\n\r\n\t\tvar span = document.createElement('span');\r\n\t\tspan.className = \"snowflake layer-\" + String(Math.floor(Math.random() * 3))\r\n\t\tvar img = document.createElement('img');\r\n\t\timg.src = `https://i.gabirmotors.com/assets/other/christmas/flake${leaf}.png`;\r\n\t\timg.style.left = x + \"px\";\r\n\t\timg.style.animationDuration = animTime + \"s\"\r\n\t\timg.style.setProperty(\"--z\", String(z))\r\n\t\timg.style.setProperty(\"--rotate1\", String(Math.floor(Math.random() * 61) - 30) + \"deg\");\r\n\t\timg.style.setProperty(\"--rotate2\", String(Math.floor(Math.random() * 61) - 30) + \"deg\");\r\n\t\timg.style.setProperty(\"--rotate3\", String(Math.floor(Math.random() * 61) - 30) + \"deg\");\r\n\t\timg.style.setProperty(\"--wobble1\", String(Math.floor(Math.random() * 61) - 30) + \"px\");\r\n\t\timg.style.setProperty(\"--wobble2\", String(Math.floor(Math.random() * 61) - 30) + \"px\");\r\n\t\timg.style.setProperty(\"--wobble3\", String(Math.floor(Math.random() * 61) - 30) + \"px\");\r\n\r\n\t\tif (isBig > 8) img.style.setProperty(\"--size\", String(Math.random() * (200 - 140) + 140) + \"px\")\r\n\t\telse img.style.setProperty(\"--size\", String(90) + \"px\")\r\n\r\n\t\tif (isBig > 8) img.style.setProperty(\"--blur\", String(Math.random() * (6 - 4) + 4) + \"px\")\r\n\t\telse img.style.setProperty(\"--blur\", String(3) + \"px\")\r\n\t\tspan.appendChild(img)\r\n\t\tvar leaves = document.getElementById(\"snowflakes\")\r\n\t\tleaves?.appendChild(span);\r\n\r\n\t\tvar snowflakes = document.getElementById(\"snowflakes\")\r\n\t\tsnowflakes?.appendChild(span);\r\n\t\tvar innerSnowflakes = snowflakes?.getElementsByClassName(\"snowflake\")\r\n\r\n\t\tsetTimeout(function() {\r\n\t\t\tif (innerSnowflakes) innerSnowflakes[0].remove();\r\n\t\t}, animTime * 2000);\r\n\r\n\t\tsetTimeout(makeLeaf, Math.random() * (500 - 2000) + 2000)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tmakeLeaf();\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div id=\"snowflakes\">\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Christmas\r\n","E:\\Projects\\GabirReact\\src\\Components\\Decorations\\Fall\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Schedule.tsx",["250","251"],"E:\\Projects\\GabirReact\\src\\utils\\channelchooser.ts",["252"],"export interface Role {\r\n    name: string;\r\n    description: string | null;\r\n    roleId: string;\r\n    channelId: string;\r\n}\r\n\r\nexport interface Category {\r\n    name: string;\r\n    description: string | null;\r\n    roles: Role[];\r\n}\r\n\r\nexport const categories: Category[] = [\r\n    {\r\n        name: \"League Series\",\r\n        description: \"The PA League is home to many different series, from oval racing to open wheel, find the series that's right for you.\",\r\n        roles: [\r\n            {\r\n                name: \"SOS-SRS Series\",\r\n                description: \"SOSSRS serves to provide a more advanced racing series for those who are looking to go to the next level. SOSSRS is a 1 hour race using a variety of sports cars with live stewards, full course yellows, and a comprehensive rule set.\",\r\n                roleId: \"908757571865808936\",\r\n                channelId: \"\"\r\n            },\r\n            {\r\n                name: \"Oval Series\",\r\n                description: null,\r\n                roleId: \"848375233408925726\",\r\n                channelId: \"740354820246077510\"\r\n            },\r\n            {\r\n                name: \"PATCO Series\",\r\n                description: null,\r\n                roleId: \"936442100021624873\",\r\n                channelId: \"936439616649699388\"\r\n            },\r\n            {\r\n                name: \"STRASS Series\",\r\n                description: null,\r\n                roleId: \"1051706113663451296\",\r\n                channelId: \"1051688193910652968\"\r\n            },\r\n            {\r\n                name: \"UPARLTAC Series\",\r\n                description: null,\r\n                roleId: \"1024526058684436500\",\r\n                channelId: \"1024527022468366406\"\r\n            },\r\n            {\r\n                name: \"IDC Series\",\r\n                description: null,\r\n                roleId: \"1084182351266980062\",\r\n                channelId: \"1084182784735711364\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        name: \"Other Games\",\r\n        description: \"Sometimes it's okay to play games other than iRacing, you might even find that there is a channel for the games you play!\",\r\n        roles: [\r\n            {\r\n                name: \"Trucking Simulators\",\r\n                description: null,\r\n                roleId: \"848381042494013481\",\r\n                channelId: \"738913434208567296\"\r\n            },\r\n            {\r\n                name: \"RPGs\",\r\n                description: null,\r\n                roleId: \"851533293958070292\",\r\n                channelId: \"851530218023157810\"\r\n            },\r\n            {\r\n                name: \"Other (Non-Racing) Games\",\r\n                description: null,\r\n                roleId: \"864241913091194960\",\r\n                channelId: \"864238417297408010\"\r\n            },\r\n            {\r\n                name: \"Other Sims & Racing Games\",\r\n                description: null,\r\n                roleId: \"848380690554945546\",\r\n                channelId: \"726136598378315968\"\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        name: \"Misc. Channels\",\r\n        description: \"There is no one way to describe these channels, they range from animals to fitness.\",\r\n        roles: [\r\n            {\r\n                name: \"Animal Pictures\",\r\n                description: null,\r\n                roleId: \"898761073572851802\",\r\n                channelId: \"898684733460975618\"\r\n            },\r\n            {\r\n                name: \"Other Sports\",\r\n                description: null,\r\n                roleId: \"1014010532006723635\",\r\n                channelId: \"1014010224841080842\"\r\n            },\r\n            {\r\n                name: \"DIY\",\r\n                description: null,\r\n                roleId: \"1018016000848953355\",\r\n                channelId: \"1018016413161635840\",\r\n            },\r\n            {\r\n                name: \"IT\",\r\n                description: null,\r\n                roleId: \"1081293601386004510\",\r\n                channelId: \"1081295382883094548\"\r\n            },\r\n            {\r\n                name: \"Fitness\",\r\n                description: null,\r\n                roleId: \"1081293696995180604\",\r\n                channelId: \"1081295519516721265\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        name: \"Other Racing Related\",\r\n        description: \"These channels are still iRacing related, but not ones everyone would want to see.\",\r\n        roles: [\r\n            {\r\n                name: \"Racing School\",\r\n                description: null,\r\n                roleId: \"848376144205447198\",\r\n                channelId: \"738852864444727365\"\r\n            },\r\n        ]\r\n    }\r\n]\r\n\r\nconst other = [\r\n    {\r\n        name: \"Euro Series\",\r\n        description: null,\r\n        roleId: \"848379864166826044\",\r\n        channelId: \"\"\r\n    },\r\n]","E:\\Projects\\GabirReact\\src\\Pages\\channelchooser\\ChannelChooser.tsx",["253","254","255"],"E:\\Projects\\GabirReact\\src\\utils\\schedule.ts",[],{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","severity":1,"message":"261","line":4,"column":8,"nodeType":"262","messageId":"263","endLine":4,"endColumn":13},{"ruleId":"260","severity":1,"message":"264","line":69,"column":19,"nodeType":"262","messageId":"263","endLine":69,"endColumn":30},{"ruleId":"260","severity":1,"message":"265","line":70,"column":19,"nodeType":"262","messageId":"263","endLine":70,"endColumn":30},{"ruleId":"260","severity":1,"message":"266","line":71,"column":19,"nodeType":"262","messageId":"263","endLine":71,"endColumn":30},{"ruleId":"267","severity":1,"message":"268","line":141,"column":53,"nodeType":"269","messageId":"270","endLine":141,"endColumn":54,"suggestions":"271"},{"ruleId":"272","severity":1,"message":"273","line":170,"column":14,"nodeType":"262","messageId":"274","endLine":170,"endColumn":15},{"ruleId":"272","severity":1,"message":"273","line":223,"column":14,"nodeType":"262","messageId":"274","endLine":223,"endColumn":15},{"ruleId":"272","severity":1,"message":"273","line":233,"column":14,"nodeType":"262","messageId":"274","endLine":233,"endColumn":15},{"ruleId":"275","severity":1,"message":"276","line":268,"column":64,"nodeType":"277","messageId":"278","endLine":268,"endColumn":66},{"ruleId":"275","severity":1,"message":"279","line":270,"column":45,"nodeType":"277","messageId":"280","endLine":270,"endColumn":47},{"ruleId":"260","severity":1,"message":"281","line":6,"column":39,"nodeType":"262","messageId":"263","endLine":6,"endColumn":51},{"ruleId":"260","severity":1,"message":"282","line":6,"column":73,"nodeType":"262","messageId":"263","endLine":6,"endColumn":77},{"ruleId":"260","severity":1,"message":"283","line":10,"column":10,"nodeType":"262","messageId":"263","endLine":10,"endColumn":16},{"ruleId":"284","severity":1,"message":"285","line":76,"column":5,"nodeType":"286","endLine":76,"endColumn":7,"suggestions":"287"},{"ruleId":"284","severity":1,"message":"288","line":87,"column":5,"nodeType":"286","endLine":87,"endColumn":18,"suggestions":"289"},{"ruleId":"260","severity":1,"message":"290","line":7,"column":5,"nodeType":"262","messageId":"263","endLine":7,"endColumn":19},{"ruleId":"284","severity":1,"message":"291","line":132,"column":8,"nodeType":"286","endLine":132,"endColumn":15,"suggestions":"292"},{"ruleId":"293","severity":1,"message":"294","line":140,"column":9,"nodeType":"295","endLine":140,"endColumn":98},{"ruleId":"293","severity":1,"message":"294","line":141,"column":9,"nodeType":"295","endLine":141,"endColumn":94},{"ruleId":"293","severity":1,"message":"294","line":142,"column":9,"nodeType":"295","endLine":142,"endColumn":98},{"ruleId":"293","severity":1,"message":"294","line":143,"column":9,"nodeType":"295","endLine":143,"endColumn":96},{"ruleId":"296","severity":1,"message":"297","line":56,"column":15,"nodeType":"295","endLine":56,"endColumn":72},{"ruleId":"296","severity":1,"message":"297","line":63,"column":15,"nodeType":"295","endLine":63,"endColumn":72},{"ruleId":"296","severity":1,"message":"297","line":70,"column":15,"nodeType":"295","endLine":70,"endColumn":72},{"ruleId":"260","severity":1,"message":"298","line":1,"column":10,"nodeType":"262","messageId":"263","endLine":1,"endColumn":18},{"ruleId":"284","severity":1,"message":"299","line":49,"column":5,"nodeType":"286","endLine":49,"endColumn":7,"suggestions":"300"},{"ruleId":"260","severity":1,"message":"298","line":1,"column":10,"nodeType":"262","messageId":"263","endLine":1,"endColumn":18},{"ruleId":"260","severity":1,"message":"301","line":1,"column":20,"nodeType":"262","messageId":"263","endLine":1,"endColumn":29},{"ruleId":"260","severity":1,"message":"302","line":137,"column":7,"nodeType":"262","messageId":"263","endLine":137,"endColumn":12},{"ruleId":"260","severity":1,"message":"303","line":4,"column":33,"nodeType":"262","messageId":"263","endLine":4,"endColumn":37},{"ruleId":"260","severity":1,"message":"304","line":6,"column":22,"nodeType":"262","messageId":"263","endLine":6,"endColumn":26},{"ruleId":"260","severity":1,"message":"305","line":33,"column":11,"nodeType":"262","messageId":"263","endLine":33,"endColumn":25},"no-native-reassign",["306"],"no-negated-in-lhs",["307"],"@typescript-eslint/no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","'setKeysRow1' is assigned a value but never used.","'setKeysRow2' is assigned a value but never used.","'setKeysRow3' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["308","309"],"@typescript-eslint/no-redeclare","'i' is already defined.","redeclared","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Notification' is defined but never used.","'Area' is defined but never used.","'isLive' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.hash'. Either include it or remove the dependency array.","ArrayExpression",["310"],"React Hook useEffect has missing dependencies: 'clearcoat', 'color', 'metal', and 'roughness'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLink' needs the current value of 'color'.",["311"],"'updateInterval' is defined but never used.","React Hook useEffect has a missing dependency: 'drawCar'. Either include it or remove the dependency array.",["312"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'makeLeaf'. Either include it or remove the dependency array.",["313"],"'useEffect' is defined but never used.","'other' is assigned a value but never used.","'Link' is defined but never used.","'Role' is defined but never used.","'alreadyHasRole' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"314","fix":"315","desc":"316"},{"messageId":"317","fix":"318","desc":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},"removeEscape",{"range":"328","text":"329"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"330","text":"331"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [props.location.hash]",{"range":"332","text":"333"},"Update the dependencies array to be: [clearcoat, color, metal, roughness, toSetValues]",{"range":"334","text":"335"},"Update the dependencies array to be: [drawCar, props]",{"range":"336","text":"337"},"Update the dependencies array to be: [makeLeaf]",{"range":"338","text":"339"},[3488,3489],"",[3488,3488],"\\",[2651,2653],"[props.location.hash]",[2999,3012],"[clearcoat, color, metal, roughness, toSetValues]",[5197,5204],"[drawCar, props]",[2115,2117],"[makeLeaf]"]