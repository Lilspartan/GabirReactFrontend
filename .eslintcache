[{"E:\\Projects\\GabirReact\\src\\index.js":"1","E:\\Projects\\GabirReact\\src\\serviceWorkerRegistration.js":"2","E:\\Projects\\GabirReact\\src\\App.js":"3","E:\\Projects\\GabirReact\\src\\Pages\\Main.tsx":"4","E:\\Projects\\GabirReact\\src\\Pages\\HaikuSubmit.tsx":"5","E:\\Projects\\GabirReact\\src\\Pages\\Showoff.tsx":"6","E:\\Projects\\GabirReact\\src\\Pages\\Timeline.tsx":"7","E:\\Projects\\GabirReact\\src\\Pages\\TeamsPage.tsx":"8","E:\\Projects\\GabirReact\\src\\Pages\\QuoteSubmit.tsx":"9","E:\\Projects\\GabirReact\\src\\Pages\\Tutorial.tsx":"10","E:\\Projects\\GabirReact\\src\\Pages\\Standings.tsx":"11","E:\\Projects\\GabirReact\\src\\Pages\\Driveroftheday.tsx":"12","E:\\Projects\\GabirReact\\src\\Pages\\MFT.tsx":"13","E:\\Projects\\GabirReact\\src\\Pages\\404.tsx":"14","E:\\Projects\\GabirReact\\src\\Pages\\Assets.tsx":"15","E:\\Projects\\GabirReact\\src\\Pages\\Calendar.tsx":"16","E:\\Projects\\GabirReact\\src\\Pages\\TeamPage.tsx":"17","E:\\Projects\\GabirReact\\src\\Pages\\Constructors.tsx":"18","E:\\Projects\\GabirReact\\src\\Pages\\TestingTemplates.tsx":"19","E:\\Projects\\GabirReact\\src\\Pages\\Tools\\SpecMapping.tsx":"20","E:\\Projects\\GabirReact\\src\\Pages\\Tools\\Toolbox.tsx":"21","E:\\Projects\\GabirReact\\src\\components\\Notification\\index.tsx":"22","E:\\Projects\\GabirReact\\src\\components\\Alert\\index.tsx":"23","E:\\Projects\\GabirReact\\src\\Templates\\CenterCard\\index.tsx":"24","E:\\Projects\\GabirReact\\src\\Templates\\Blank\\index.tsx":"25","E:\\Projects\\GabirReact\\src\\components\\DriverCard\\index.tsx":"26","E:\\Projects\\GabirReact\\src\\Pages\\Tools\\ColorTemplate.tsx":"27","E:\\Projects\\GabirReact\\src\\Pages\\Tools\\ColorTemplateDownload.tsx":"28","E:\\Projects\\GabirReact\\src\\Pages\\GabirTV.tsx":"29","E:\\Projects\\GabirReact\\src\\Pages\\Pacecar.tsx":"30","E:\\Projects\\GabirReact\\src\\Components\\Notification\\index.tsx":"31","E:\\Projects\\GabirReact\\src\\Components\\Alert\\index.tsx":"32","E:\\Projects\\GabirReact\\src\\Components\\DriverCard\\index.tsx":"33","E:\\Projects\\GabirReact\\src\\Components\\index.ts":"34","E:\\Projects\\GabirReact\\src\\Components\\StandingsRow\\index.ts":"35","E:\\Projects\\GabirReact\\src\\Components\\Decorations\\index.ts":"36","E:\\Projects\\GabirReact\\src\\Components\\LoadingIcon\\index.tsx":"37","E:\\Projects\\GabirReact\\src\\Components\\LoadingPage\\index.tsx":"38","E:\\Projects\\GabirReact\\src\\Components\\StandingsRow\\DriverRow\\index.tsx":"39","E:\\Projects\\GabirReact\\src\\Components\\Decorations\\Christmas\\index.tsx":"40","E:\\Projects\\GabirReact\\src\\Components\\StandingsRow\\TeamRow\\index.tsx":"41","E:\\Projects\\GabirReact\\src\\Components\\Decorations\\Fall\\index.tsx":"42","E:\\Projects\\GabirReact\\src\\Components\\Footer\\index.tsx":"43","E:\\Projects\\GabirReact\\src\\Components\\HaikuForm\\index.js":"44","E:\\Projects\\GabirReact\\src\\Components\\Header\\index.tsx":"45","E:\\Projects\\GabirReact\\src\\Components\\QuoteForm\\index.js":"46","E:\\Projects\\GabirReact\\src\\Components\\CalendarRow\\index.tsx":"47","E:\\Projects\\GabirReact\\src\\Components\\ShareButton\\index.tsx":"48","E:\\Projects\\GabirReact\\src\\Pages\\Tools\\DownforceGuide.tsx":"49","E:\\Projects\\GabirReact\\src\\Pages\\Gabirdle.tsx":"50","E:\\Projects\\GabirReact\\src\\utils\\allwords.js":"51","E:\\Projects\\GabirReact\\src\\utils\\gabirdleWords.js":"52","E:\\Projects\\GabirReact\\src\\utils\\useKeypress.js":"53","E:\\Projects\\GabirReact\\src\\utils\\shimKeyboardEvent.js":"54"},{"size":350,"mtime":1634786986552,"results":"55","hashOfConfig":"56"},{"size":5201,"mtime":1634005114235,"results":"57","hashOfConfig":"56"},{"size":3022,"mtime":1644974879687,"results":"58","hashOfConfig":"56"},{"size":19574,"mtime":1645080950165,"results":"59","hashOfConfig":"56"},{"size":992,"mtime":1643257397614,"results":"60","hashOfConfig":"56"},{"size":2883,"mtime":1635384190395,"results":"61","hashOfConfig":"56"},{"size":4164,"mtime":1643257463865,"results":"62","hashOfConfig":"56"},{"size":3646,"mtime":1643257493115,"results":"63","hashOfConfig":"56"},{"size":994,"mtime":1643257640432,"results":"64","hashOfConfig":"56"},{"size":20070,"mtime":1643257442728,"results":"65","hashOfConfig":"56"},{"size":4586,"mtime":1643257430627,"results":"66","hashOfConfig":"56"},{"size":9725,"mtime":1643257408255,"results":"67","hashOfConfig":"56"},{"size":4358,"mtime":1644128100876,"results":"68","hashOfConfig":"56"},{"size":856,"mtime":1637116899004,"results":"69","hashOfConfig":"56"},{"size":6079,"mtime":1644128441231,"results":"70","hashOfConfig":"56"},{"size":2097,"mtime":1644128340018,"results":"71","hashOfConfig":"56"},{"size":2921,"mtime":1637116899017,"results":"72","hashOfConfig":"56"},{"size":3381,"mtime":1643257033478,"results":"73","hashOfConfig":"56"},{"size":172,"mtime":1637116899017,"results":"74","hashOfConfig":"56"},{"size":10714,"mtime":1644127543867,"results":"75","hashOfConfig":"56"},{"size":3308,"mtime":1643243483898,"results":"76","hashOfConfig":"56"},{"size":1709,"mtime":1635569644912,"results":"77","hashOfConfig":"56"},{"size":2000,"mtime":1634957182193,"results":"78","hashOfConfig":"56"},{"size":767,"mtime":1641276335628,"results":"79","hashOfConfig":"56"},{"size":1166,"mtime":1643257547638,"results":"80","hashOfConfig":"56"},{"size":1863,"mtime":1641356262437,"results":"81","hashOfConfig":"56"},{"size":12450,"mtime":1644127943609,"results":"82","hashOfConfig":"56"},{"size":4562,"mtime":1644127873807,"results":"83","hashOfConfig":"56"},{"size":1019,"mtime":1644687346465,"results":"84","hashOfConfig":"56"},{"size":2211,"mtime":1643244141339,"results":"85","hashOfConfig":"56"},{"size":1709,"mtime":1635569644912,"results":"86","hashOfConfig":"56"},{"size":2000,"mtime":1634957182193,"results":"87","hashOfConfig":"56"},{"size":1863,"mtime":1641356262437,"results":"88","hashOfConfig":"56"},{"size":668,"mtime":1643257757538,"results":"89","hashOfConfig":"56"},{"size":116,"mtime":1643257017982,"results":"90","hashOfConfig":"56"},{"size":108,"mtime":1643256441349,"results":"91","hashOfConfig":"56"},{"size":951,"mtime":1643256623109,"results":"92","hashOfConfig":"56"},{"size":1257,"mtime":1643256626385,"results":"93","hashOfConfig":"56"},{"size":1850,"mtime":1643257066554,"results":"94","hashOfConfig":"56"},{"size":2321,"mtime":1643425612441,"results":"95","hashOfConfig":"56"},{"size":1164,"mtime":1643256938920,"results":"96","hashOfConfig":"56"},{"size":1652,"mtime":1643256396820,"results":"97","hashOfConfig":"56"},{"size":518,"mtime":1643257187071,"results":"98","hashOfConfig":"56"},{"size":4172,"mtime":1643257326748,"results":"99","hashOfConfig":"56"},{"size":6799,"mtime":1645168793797,"results":"100","hashOfConfig":"56"},{"size":2892,"mtime":1643257606315,"results":"101","hashOfConfig":"56"},{"size":3771,"mtime":1643257670970,"results":"102","hashOfConfig":"56"},{"size":891,"mtime":1643257745898,"results":"103","hashOfConfig":"56"},{"size":1414,"mtime":1644127578599,"results":"104","hashOfConfig":"56"},{"size":18198,"mtime":1645168750452,"results":"105","hashOfConfig":"56"},{"size":159231,"mtime":1644990113402,"results":"106","hashOfConfig":"56"},{"size":469,"mtime":1645168777844,"results":"107","hashOfConfig":"56"},{"size":1279,"mtime":1645066207339,"results":"108","hashOfConfig":"56"},{"size":934,"mtime":1645066370826,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"z2gb0o",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"119"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"119"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"119"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"E:\\Projects\\GabirReact\\src\\index.js",[],["225","226"],"E:\\Projects\\GabirReact\\src\\serviceWorkerRegistration.js",[],"E:\\Projects\\GabirReact\\src\\App.js",[],"E:\\Projects\\GabirReact\\src\\Pages\\Main.tsx",[],["227","228"],"E:\\Projects\\GabirReact\\src\\Pages\\HaikuSubmit.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Showoff.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Timeline.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\TeamsPage.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\QuoteSubmit.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Tutorial.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Standings.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Driveroftheday.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\MFT.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\404.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Assets.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Calendar.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\TeamPage.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Constructors.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\TestingTemplates.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Tools\\SpecMapping.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Tools\\Toolbox.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\Notification\\index.tsx",[],["229","230"],"E:\\Projects\\GabirReact\\src\\components\\Alert\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Templates\\CenterCard\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Templates\\Blank\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\components\\DriverCard\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Tools\\ColorTemplate.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Tools\\ColorTemplateDownload.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\GabirTV.tsx",["231"],"import Blank from '../Templates/Blank/index';\r\n\r\nconst GabirTV = () => {\r\n\tconst getViewers = async (user: { id: string, url: string }) => {\r\n\t\tvar res = await fetch(`https://api.twitch.tv/helix/streams?user_id=${user.id}`, {\r\n\t\t\theaders: new Headers({\r\n\t\t\t\t'Client-ID': 'v354nab7jsgctl2zww4ic69tc4l3hf',\r\n\t\t\t\t'Authorization': 'Bearer jkmoj86ctljekpx3xl7ix28iwmzyen'\r\n\t\t\t})\r\n\t\t})\r\n\t\t\r\n\t\tvar data = await res.json();\r\n\t\tif (data.data.length) {\r\n\t\t\tconsole.log(`${user.url} is Online!`)\r\n\t\t\twindow.location.href = user.url\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Blank title=\"GabirTV\" loading={false}>\r\n\r\n\t\t\t\t<h1 className=\"uk-width-1-2@m uk-text-center uk-margin-auto uk-margin-auto-vertical uk-animation-slide-top-small uk-container uk-display-block\">\r\n\t\t\t\t\t<img alt=\"Gabir Motors Logo\" src=\"img/newgabirtext.png\" style={{ height: 'auto', width: '30vw', minWidth: '300px', marginBottom: '60vh' }} />\r\n\t\t\t\t</h1>\r\n\r\n\t\t\t\t<h1 className=\"uk-position-center\">\r\n\t\t\t\t\ttest\r\n\t\t\t\t</h1>\r\n\t\t\t</Blank>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default GabirTV","E:\\Projects\\GabirReact\\src\\Pages\\Pacecar.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\Notification\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\Alert\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\DriverCard\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\index.ts",[],"E:\\Projects\\GabirReact\\src\\Components\\StandingsRow\\index.ts",[],"E:\\Projects\\GabirReact\\src\\Components\\Decorations\\index.ts",[],"E:\\Projects\\GabirReact\\src\\Components\\LoadingIcon\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\LoadingPage\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\StandingsRow\\DriverRow\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\Decorations\\Christmas\\index.tsx",["232"],"import { useEffect } from 'react'\r\nimport '../style.scss'\r\n\r\nconst Christmas = () => {\r\n    const makeLeaf = () => {\r\n\t\tvar x = Math.floor(Math.random() * (window.innerWidth - 100));\r\n\t\tvar leaf = Math.floor(Math.random() * 3) + 1;\r\n\t\tvar animTime = Math.random() * 25\r\n\t\tvar z = Math.round(Math.random());\r\n\t\tif (animTime < 15) animTime = 15;\r\n\t\tvar isBig = Math.random() * 11\r\n\r\n\t\tvar span = document.createElement('span');\r\n\t\tspan.className = \"snowflake layer-\" + String(Math.floor(Math.random() * 3))\r\n\t\tvar img = document.createElement('img');\r\n\t\timg.src = `https://i.gabirmotors.com/assets/other/christmas/flake${leaf}.png`;\r\n\t\timg.style.left = x + \"px\";\r\n\t\timg.style.animationDuration = animTime + \"s\"\r\n\t\timg.style.setProperty(\"--z\", String(z))\r\n\t\timg.style.setProperty(\"--rotate1\", String(Math.floor(Math.random() *61) - 30) + \"deg\");\r\n\t\timg.style.setProperty(\"--rotate2\", String(Math.floor(Math.random() *61) - 30) + \"deg\");\r\n\t\timg.style.setProperty(\"--rotate3\", String(Math.floor(Math.random() *61) - 30) + \"deg\");\r\n\t\timg.style.setProperty(\"--wobble1\", String(Math.floor(Math.random() *61) - 30) + \"px\");\r\n\t\timg.style.setProperty(\"--wobble2\", String(Math.floor(Math.random() *61) - 30) + \"px\");\r\n\t\timg.style.setProperty(\"--wobble3\", String(Math.floor(Math.random() *61) - 30) + \"px\");\r\n        \r\n        if (isBig > 8) img.style.setProperty(\"--size\", String(Math.random() * (200 - 140) + 140) + \"px\")\r\n        else img.style.setProperty(\"--size\", String(90) + \"px\")\r\n        \r\n        if (isBig > 8) img.style.setProperty(\"--blur\", String(Math.random() * (6 - 4) + 4) + \"px\")\r\n        else img.style.setProperty(\"--blur\", String(3) + \"px\")\r\n\t\tspan.appendChild(img)\r\n\t\tvar leaves = document.getElementById(\"snowflakes\")\r\n\t\tleaves?.appendChild(span);\r\n\r\n        var snowflakes = document.getElementById(\"snowflakes\")\r\n\t\tsnowflakes?.appendChild(span);\r\n\t\tvar innerSnowflakes = snowflakes?.getElementsByClassName(\"snowflake\")\r\n\r\n        setTimeout(function () {\r\n            if (innerSnowflakes) innerSnowflakes[0].remove();\r\n        }, animTime * 2000);\r\n\r\n\t\tsetTimeout(makeLeaf, Math.random() * (500 - 2000) + 2000)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tmakeLeaf();\r\n\t}, [])\r\n\r\n    return (\r\n        <>\r\n            <div id = \"snowflakes\">\r\n            \r\n\t\t    </div>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Christmas\r\n","E:\\Projects\\GabirReact\\src\\Components\\StandingsRow\\TeamRow\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\Decorations\\Fall\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\Footer\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\HaikuForm\\index.js",[],"E:\\Projects\\GabirReact\\src\\Components\\Header\\index.tsx",["233","234","235"],"import { Link, withRouter, RouteComponentProps  } from 'react-router-dom'\r\nimport { FC, useState, useEffect } from 'react';\r\nimport { ShareButton } from '../';\r\n\r\ninterface Props extends RouteComponentProps {\r\n  title: string;\r\n  desc?: string;\r\n}\r\n\r\nconst Header:FC<Props> = (props) => {\r\n  const { title = \"Gabir Motors\", desc } = props;\r\n  \r\n  useEffect(() => {\r\n    (async () => {\r\n      var res = await fetch('https://streaming.gabirmotors.com/dodotd');\r\n      var data = await res.json();\r\n\r\n      if (res.status === 200) {\r\n        setDriveroftheday(data.do);\r\n      }\r\n    })();\r\n    console.log(\"      _________________   ____  ____  ___       \\n     /  ______________/  /   / /   / /   \\\\     \\n    /  /      _______   /   / /   / /    /      \\n   /  /      /____  /  /   / /   / /    /       \\n  /  /___________/ /  /   / /   / /    /        \\n  \\\\_______________/  /___/ /___/ /____/         \\n\");\r\n}, [])\r\n\r\n  const [driveroftheday, setDriveroftheday] = useState(false)\r\n\r\n  \r\n  return (\r\n    <header>\r\n      <title>{ title }</title>\r\n      <meta\r\n        name=\"description\"\r\n        content= {desc !== undefined ? desc : 'The world\\'s premiere, pretend Motorsports Company. Proud sponsor of Mike Racecar and the Penny Arcade iRacing league.'}\r\n      />\r\n      \r\n      <div uk-sticky = \"true\" style= {{ zIndex: 1001 }}>\r\n        {/* eslint-disable-next-line */}\r\n        <a id = \"menuopen\" className=\"uk-margin-small-right uk-position-top-left\"uk-toggle=\"target: #offcanvas-slide\" href = \"#\"><span uk-icon=\"icon: menu; ratio: 2\" style = {{color: 'white'}}></span></a>\r\n      </div>\r\n\r\n      <div id=\"offcanvas-slide\" uk-offcanvas=\"mode: slide;\">\r\n        <div className=\"uk-offcanvas-bar uk-flex uk-flex-column\">\r\n\r\n        <ul uk-nav = \"true\" className=\"uk-nav-primary uk-margin-auto-vertical uk-nav-parent-icon\" uk-scrollspy=\"cls: uk-animation-slide-left-medium; target: .nav-text,.uk-logo; delay: 50; repeat: false\">\r\n            <li className=\"uk-logo\"><Link to=\"/\"><img src = \"../img/logo.png\" alt = \"GM logo\" style = {{width: '14vw', height: 'auto', minWidth: '200px'}}/></Link></li>\r\n\r\n            {/* <span className = \"uk-text-success uk-text-bold\">Assets and Spec Mapping have moved to the <Link to = \"/toolbox\">Toolbox</Link></span> */}\r\n\r\n            { driveroftheday && <Link to = \"/vote\" className = { `uk-text-success` }>Livery Parade Vote</Link> }\r\n            {/* <Link to = \"/gabirdle\" className = { `uk-text-success` }>Play Gabirdle</Link> */}\r\n            <li className=\"uk-nav-divider\"></li>\r\n          \r\n            <li><Link className = \"uk-button-link uk-text-primary nav-text\" to = \"/calendar\">Calendar</Link></li>\r\n            <li><Link className = \"uk-button-link uk-text-primary nav-text\" to = \"/teams\">Teams</Link></li>\r\n            <li><Link className = \"uk-button-link uk-text-primary nav-text\" to = \"/tutorial\">Tutorials</Link></li>\r\n            <li className = \"uk-parent\">\r\n              <a className = \"uk-button-link uk-text-primary nav-text\">Tools</a>\r\n              <ul className=\"uk-nav-sub\">\r\n                <li><Link className = \"uk-button-link uk-text-primary nav-text-sub\" to = \"/toolbox\">Toolbox</Link></li>\r\n                <li><Link className = \"uk-button-link uk-text-primary nav-text-sub\" to = \"/assets\">Assets</Link></li>\r\n                <li><Link className = \"uk-button-link uk-text-primary nav-text-sub\" to = \"/specmapping\">Spec Mapping</Link></li>\r\n              </ul>\r\n            </li>\r\n            <li className = \"uk-parent\">\r\n              <a className = \"uk-button-link uk-text-primary nav-text\">Standings</a>\r\n              <ul className=\"uk-nav-sub\">\r\n                <li><Link className = \"uk-button-link uk-text-primary nav-text-sub\" to = \"/standings\">Driver Standings</Link></li>\r\n                <li><Link className = \"uk-button-link uk-text-primary nav-text-sub\" to = \"/constructors\">Team Standings</Link></li>\r\n              </ul>\r\n            </li>\r\n            <li className = \"uk-parent\">\r\n              <a className = \"uk-button-link uk-text-primary nav-text\">Submissions</a>\r\n              <ul className=\"uk-nav-sub\">\r\n                <li><Link className = \"uk-button-link uk-text-primary nav-text-sub\" to = \"/haikus\">Haikus</Link></li>\r\n                <li><Link className = \"uk-button-link uk-text-primary nav-text-sub\" to = \"/quotes\">Quotes</Link></li>\r\n              </ul>\r\n            </li>\r\n            \r\n            <li className=\"uk-nav-divider\"></li>\r\n            <li uk-scrollspy=\"cls: uk-animation-slide-top; target: .icon; delay: 100;\">\r\n              <a target = \"_new\" uk-tooltip = \"PA League Discord\" className = \"icon uk-display-inline uk-button\" href = \"https://discord.gabirmotors.com/\"><span className = \"icon-button icon-button-discord\" uk-icon = \"icon:discord; ratio: 1.4\"></span></a>&nbsp;&nbsp;\r\n              <a target = \"_new\" uk-tooltip = \"PA Twitch\" className = \"icon uk-display-inline uk-button\" href = \"https://www.twitch.tv/pennyarcade\"><span className = \"icon-button icon-button-twitch\" uk-icon = \"icon:twitch; ratio: 1.4\"></span></a>&nbsp;&nbsp;\r\n              <a target = \"_new\" uk-tooltip = \"@GabirMotors\" className = \"icon uk-display-inline uk-button\" href = \"https://twitter.com/GabirMotors\"><span className = \"icon-button icon-button-twitter\" uk-icon = \"icon:twitter; ratio: 1.4\"></span></a>&nbsp;&nbsp;\r\n              <a target = \"_new\" uk-tooltip = \"GM Merch\" className = \"icon uk-display-inline uk-button\" href = \"https://store.penny-arcade.com/collections/gabir-motors\"><span className = \"icon-button icon-button-store\" uk-icon = \"icon:bag; ratio: 1.4\"></span></a>&nbsp;&nbsp;\r\n              <a target = \"_new\" uk-tooltip = \"Source code\" className = \"icon uk-display-inline uk-button\" href = \"https://github.com/LilSpartan/GabirReactFrontend/tree/production\"><span className = \"icon-button icon-button-github\" uk-icon = \"icon:git-branch; ratio: 1.4\"></span></a>&nbsp;&nbsp;\r\n              <ShareButton />\r\n            </li>\r\n            <li uk-scrollspy=\"cls: uk-animation-slide-left-medium; target: .uk-text-uppercase; delay: 100;\">\r\n              <p className = \"uk-margin-top uk-text-uppercase uk-text-top\">Made by<br /><span style = {{color:'white'}}>Gabe Krahulik</span><br/><a target = \"_new\" href=\"https://github.com/Lilspartan/\"><span className = \"icon-button icon-button-github\" uk-icon = \"github\"></span></a> <a target = \"_new\" href=\"https://twitter.com/gabekrahulik\"><span className = \"icon-button icon-button-twitter\" uk-icon = \"twitter\"></span></a></p>\r\n            </li>\r\n            <li className=\"uk-nav-divider\"></li>\r\n            <a className = \"uk-button uk-button-link\" href = \"mailto:gabirmotors@gmail.com\" target = \"_new\">Report a Problem</a>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default withRouter(Header);","E:\\Projects\\GabirReact\\src\\Components\\QuoteForm\\index.js",[],"E:\\Projects\\GabirReact\\src\\Components\\CalendarRow\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Components\\ShareButton\\index.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Tools\\DownforceGuide.tsx",[],"E:\\Projects\\GabirReact\\src\\Pages\\Gabirdle.tsx",["236","237","238","239","240","241","242","243","244","245","246"],"import Blank from '../Templates/Blank/index';\r\nimport { useState, useEffect } from 'react';\r\nimport allWords from '../utils/allwords';\r\nimport words from '../utils/gabirdleWords';\r\nimport useKeypress from '../utils/useKeypress';\r\n\r\ninterface GameState {\r\n\tguessRow: \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\";\r\n\trows: {\r\n\t\t\"0\": string[];\r\n\t\t\"1\": string[];\r\n\t\t\"2\": string[];\r\n\t\t\"3\": string[];\r\n\t\t\"4\": string[];\r\n\t\t\"5\": string[];\r\n\t};\r\n\tinSpot: string[];\r\n\tinWord: string[];\r\n\tnotInWord: string[];\r\n}\r\n\r\nconst Gabirdle = () => {\r\n\tconst [gameState, setGameState] = useState<GameState>({\r\n\t\tguessRow: \"0\",\r\n\t\trows: {\r\n\t\t\t\"0\": [\"\", \"\", \"\", \"\", \"\"],\r\n\t\t\t\"1\": [\"\", \"\", \"\", \"\", \"\"],\r\n\t\t\t\"2\": [\"\", \"\", \"\", \"\", \"\"],\r\n\t\t\t\"3\": [\"\", \"\", \"\", \"\", \"\"],\r\n\t\t\t\"4\": [\"\", \"\", \"\", \"\", \"\"],\r\n\t\t\t\"5\": [\"\", \"\", \"\", \"\", \"\"]\r\n\t\t},\r\n\t\tinSpot: [],\r\n\t\tinWord: [],\r\n\t\tnotInWord: []\r\n\t})\r\n\r\n\t/*\r\n\t\tc - Correct / in spot\r\n\t\ti - in word\r\n\t\tn - not in word\r\n\t*/\r\n\tconst [evaluations,setEvaluations] = useState<string[][]>([\r\n\t\t[],\r\n\t\t[],\r\n\t\t[],\r\n\t\t[],\r\n\t\t[],\r\n\t\t[]\r\n\t]);\r\n\t\r\n\tconst [keysRow1, setKeysRow1] = useState([\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"])\r\n\tconst [keysRow2, setKeysRow2] = useState([\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"])\r\n\tconst [keysRow3, setKeysRow3] = useState([\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"])\r\n\tconst [state, setState] = useState(\"PLAYING\");\r\n    const [message, setMessage] = useState<string | null>(null);\r\n    const [shareMessage, setShareMessage] = useState(\"\");\r\n    const [shareButton, setShareButton] = useState(\"SHARE\");\r\n    const [nextTime, setNextTime] = useState(0);\r\n\r\n\tuseKeypress(['Enter', 'Backspace', ...keysRow1, ...keysRow2, ...keysRow3], (event: { key: string }) => {\r\n\t\tif (event.key === \"Backspace\") pressButton(\"del\");\r\n\t\telse if (event.key === \"Enter\") pressButton(\"enter\");\r\n\t\telse if (keysRow1.includes(event.key.toUpperCase()) || keysRow2.includes(event.key.toUpperCase()) || keysRow3.includes(event.key.toUpperCase())) {\r\n\t\t\tpressButton(event.key.toUpperCase())\r\n\t\t}\r\n\t});\r\n\r\n\t// const [wordToGuess, setWordToGuess] = useState(words[Math.floor(Math.random() * words.length)])\r\n\tconst [wordToGuess, setWordToGuess] = useState(words[0])\r\n\r\n\tconst endMessages = [\r\n\t\t[\r\n\t\t\t\"Genius!\",\r\n\t\t\t\"Suspiciously Good!\",\r\n\t\t\t\"That's Amazing!\",\r\n\t\t\t\"Rivaling the Speeds of Mike Racecar\"\r\n\t\t],\r\n\t\t[\r\n\t\t\t\"I Can't Believe you Did That...\",\r\n\t\t\t\"That's Impressive!\"\r\n\t\t],\r\n\t\t[\r\n\t\t\t\"A Very Good Game\",\r\n\t\t\t\"Wow!\",\r\n\t\t\t\"Nice!\"\r\n\t\t],\r\n\t\t[\r\n\t\t\t\"A Very Respectable Score\",\r\n\t\t\t\"Great Job!\"\r\n\t\t],\r\n\t\t[\r\n\t\t\t\"That was cutting it close!\",\r\n\t\t\t\"Good Save!\"\r\n\t\t],\r\n\t\t[\r\n\t\t\t\"I was starting to get worried!\"\r\n\t\t]\r\n\t]\r\n\r\n    function timeConverter(UNIX_timestamp:number){\r\n        var a = new Date(UNIX_timestamp * 1000);;\r\n        var year = a.getFullYear();\r\n        var month = a.getMonth() + 1 < 10 ? \"0\" + String(a.getMonth() + 1) : String(a.getMonth() + 1);\r\n        var date = \"0\" + a.getDate();\r\n        var hour = \"0\" + a.getHours();\r\n        var min = \"0\" + a.getMinutes();\r\n        var sec = \"0\" + a.getSeconds();\r\n        let _tz = new Date()!.toString()!.match(/([-\\+][0-9]+)\\s/)![1]\r\n        var s = `${year}-${month}-${date.substr(-2)}T${hour.substr(-2)}:${min.substr(-2)}:${sec.substr(-2)}${_tz}`\r\n        return s\r\n    }\r\n\r\n\tconst pressButton = (btn: string) => {\r\n\t\tif (state !== \"PLAYING\") return;\r\n        setMessage(null);\r\n\r\n\t\tif (btn !== \"enter\" && btn !== \"del\") {\r\n\t\t\tif (gameState.rows[gameState.guessRow].length < 6) {\r\n\t\t\t\tlet _temp = gameState.rows[gameState.guessRow]\r\n\t\t\t\tlet foundEmptySpace = null;\r\n\t\t\t\tfor (var i = 0; i < gameState.rows[gameState.guessRow].length; i++) {\r\n\t\t\t\t\tif (gameState.rows[gameState.guessRow][i] === \"\" && foundEmptySpace === null) {\r\n\t\t\t\t\t\tfoundEmptySpace = i;\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (foundEmptySpace === null) { return }\r\n\r\n\t\t\t\t_temp[foundEmptySpace] = btn;\r\n\t\t\t\tsetGameState({ ...gameState, rows: { ...gameState.rows, [gameState.guessRow]: _temp } })\r\n\t\t\t}\r\n\t\t} else if (btn === \"del\") {\r\n\t\t\tif (gameState.rows[gameState.guessRow].length > 0) {\r\n\t\t\t\tlet _temp = gameState.rows[gameState.guessRow]\r\n\t\t\t\tlet foundEmptySpace = 5;\r\n\t\t\t\tfor (var i = 0; i < gameState.rows[gameState.guessRow].length; i++) {\r\n\t\t\t\t\tif (gameState.rows[gameState.guessRow][i] === \"\" && foundEmptySpace === 5) {\r\n\t\t\t\t\t\tfoundEmptySpace = i;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_temp[foundEmptySpace - 1] = \"\";\r\n\t\t\t\tsetGameState({ ...gameState, rows: { ...gameState.rows, [gameState.guessRow]: _temp } })\r\n\t\t\t}\r\n\t\t} else if (btn === \"enter\") {\r\n\t\t\t// Enter Guess\r\n\t\t\tlet userGuess = gameState.rows[gameState.guessRow].join(\"\").toLowerCase();\r\n\t\t\tif (userGuess.length !== 5) return setMessage(\"Guess Must be 5 Letters\");\r\n\t\t\tif (!(allWords.includes(userGuess) || words.includes(userGuess))) {\r\n\t\t\t\treturn setMessage(\"That is Not a Valid Word\")\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"Guessing: \" + userGuess);\r\n\r\n\t\t\t\tlet _split = gameState.rows[gameState.guessRow];\r\n\t\t\t\tfor (var letter in _split) {\r\n\t\t\t\t\tlet _l = _split[letter];\r\n\t\t\t\t\tif (_l.toLowerCase() === wordToGuess.toLowerCase()[letter]) {\r\n\t\t\t\t\t\t//In Spot\r\n\t\t\t\t\t\tlet _temp = gameState.inSpot;\r\n\t\t\t\t\t\tif (!_temp.includes(_l)) {\r\n\t\t\t\t\t\t\t_temp.push(_l)\r\n\t\t\t\t\t\t\tsetGameState({ ...gameState, inSpot: _temp })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (wordToGuess.toLowerCase().split(\"\").includes(_l.toLowerCase())) {\r\n\t\t\t\t\t\t// In Word\r\n\t\t\t\t\t\tlet _temp = gameState.inWord;\r\n\t\t\t\t\t\tif (!_temp.includes(_l)) {\r\n\t\t\t\t\t\t\t_temp.push(_l)\r\n\t\t\t\t\t\t\tsetGameState({ ...gameState, inWord: _temp })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (_l) {\r\n\t\t\t\t\t\t// None\r\n\t\t\t\t\t\tlet _temp = gameState.notInWord;\r\n\t\t\t\t\t\tif (!_temp.includes(_l)) {\r\n\t\t\t\t\t\t\t_temp.push(_l)\r\n\t\t\t\t\t\t\tsetGameState({ ...gameState, notInWord: _temp })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet _t = evaluations\r\n\t\t\t\tlet _toAdd = [\"n\", \"n\", \"n\", \"n\", \"n\"];\r\n\t\t\t\tlet _splitWord = wordToGuess.toUpperCase().split(\"\");\r\n\t\t\t\tlet _userGuess = [...gameState.rows[gameState.guessRow]];\r\n\r\n\t\t\t\t// Check for letter in the correct spot\r\n\t\t\t\tconsole.log(\"Looking for letters in the right spot\")\r\n\t\t\t\tfor (var i = 0; i < _splitWord.length; i ++) {\r\n\t\t\t\t\tif (_splitWord[i] === _userGuess[i]) {\r\n\t\t\t\t\t\t_splitWord[i] = \"_\";\r\n                        _userGuess[i] = \"-\";\r\n\t\t\t\t\t\t_toAdd[i] = \"c\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t// Check for letters in the word\t\r\n\t\t\t\tconsole.log(\"Looking for letters in the word\")\r\n\t\t\t\tfor (var i = 0; i < _userGuess.length; i ++) {\r\n\t\t\t\t\tif (_splitWord.includes(_userGuess[i])) {\r\n\t\t\t\t\t\t_splitWord[_splitWord.indexOf(_userGuess[i])] = \"_\";\r\n                        _userGuess[i] = \"-\";\r\n\t\t\t\t\t\t_toAdd[i] = \"i\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t_t[Number(gameState.guessRow)] = _toAdd;\r\n\t\t\t\tsetEvaluations(_t)\r\n                let _lw = true\r\n\r\n                if (userGuess === wordToGuess) {\r\n\t\t\t\t\tsetState(\"WIN\")\r\n\t\t\t\t\tsetMessage(endMessages[Number(gameState.guessRow)][Math.floor(Math.random() * endMessages[Number(gameState.guessRow)].length)])\r\n\t\t\t\t} else {\r\n                    switch (gameState.guessRow) {\r\n                        case \"0\": setGameState({ ...gameState, guessRow: \"1\" }); break;\r\n                        case \"1\": setGameState({ ...gameState, guessRow: \"2\" }); break;\r\n                        case \"2\": setGameState({ ...gameState, guessRow: \"3\" }); break;\r\n                        case \"3\": setGameState({ ...gameState, guessRow: \"4\" }); break;\r\n                        case \"4\": setGameState({ ...gameState, guessRow: \"5\" }); break;\r\n                        case \"5\":\r\n                            if (userGuess !== wordToGuess) {\r\n                                setMessage(\"The word was: \" + wordToGuess.toUpperCase())\r\n                                setState(\"LOSE\")\r\n                                _lw = false;\r\n                                break;\r\n                            }\r\n                    }\r\n                }\r\n\r\n                if (userGuess === wordToGuess || gameState.guessRow === \"5\") {\r\n\t\t\t\t\tconsole.log(\"Making Share Message...\")\r\n                    var _tempMessage = `Gabirdle ${!_lw ? \"X\" : Number(gameState.guessRow) + 1}/6`;\r\n                    Object.values(gameState.rows).map((row, j) => {\r\n                        if (row) _tempMessage += '\\n';\r\n                        row.map((letter, i) => {\r\n                            if (j < Number(gameState.guessRow) + 1) {\r\n                                if (letter.toLowerCase() === wordToGuess.toLowerCase()[i]) {\r\n                                    return _tempMessage += '🟩';\r\n                                } else if (wordToGuess.toLowerCase().split(\"\").includes(letter.toLowerCase())) {\r\n                                    return _tempMessage += '🟨';\r\n                                } else {\r\n                                    return _tempMessage += '⬛';\r\n                                }\r\n                            }\r\n                        })\r\n                    })\r\n                    setShareMessage(_tempMessage);\r\n\r\n                    let menuButton = document.getElementById(\"menuButton\") as HTMLButtonElement;\r\n                    menuButton.click();\r\n\r\n\t\t\t\t\tconsole.log(\"Setting Local Storage...\")\r\n\t\t\t\t\tlocalStorage.setItem(\"lastGame\", JSON.stringify({\r\n\t\t\t\t\t\tgameState,\r\n\t\t\t\t\t\tevaluations,\r\n\t\t\t\t\t\tstate: (userGuess === wordToGuess ? \"WIN\" : \"LOSE\"),\r\n\t\t\t\t\t\twordToGuess,\r\n\t\t\t\t\t\tshareMessage: _tempMessage\r\n\t\t\t\t\t}))\r\n                }\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n    const wordTimes = [\r\n\t\t1645759800, 1645760700,\r\n\t\t1645761600, 1645762500,\r\n\t\t1645763400, 1645764300,\r\n\t\t1645765200, 1645766100,\r\n\t\t1645767000, 1645767900,\r\n\t\t1645768800, 1645769700,\r\n\t\t1645770600, 1645771500,\r\n\t\t1645772400\r\n\t  ]\r\n\r\n    // const wordTimes = [\r\n\t// \t1645147920, 1645147980, 1645148040, 1645148100,\r\n\t// \t1645148160, 1645148220, 1645148280, 1645148340,\r\n\t// \t1645148400, 1645148460, 1645148520, 1645148580,\r\n\t// \t1645148640, 1645148700, 1645148760, 1645148820,\r\n\t// \t1645148880, 1645148940, 1645149000, 1645149060,\r\n\t// \t1645149120, 1645149180, 1645149240, 1645149300,\r\n\t// \t1645149360, 1645149420, 1645149480, 1645149540,\r\n\t// \t1645149600, 1645149660, 1645149720, 1645149780,\r\n\t// \t1645149840, 1645149900, 1645149960, 1645150020,\r\n\t// \t1645150080, 1645150140, 1645150200, 1645150260,\r\n\t// \t1645150320, 1645150380, 1645150440, 1645150500,\r\n\t// \t1645150560, 1645150620, 1645150680, 1645150740,\r\n\t// \t1645150800, 1645150860\r\n\t//   ]\r\n\r\n    useEffect(() => {\r\n        \r\n        var done = false;\r\n\t\t\r\n\t\tconsole.log(\"Finding when then next word is\")\r\n\r\n        for (var i = 0; i < wordTimes.length; i ++) {\r\n            if (wordTimes[i] * 1000 > Date.now() && !done) {\r\n                done = true;\r\n                setNextTime(i);\r\n\t\t\t\tsetWordToGuess(words[i])\r\n            }\r\n        }\r\n    }, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"Looking for gamedata in local storage\")\r\n\t\tvar _dataFromLocalStorage = localStorage.getItem(\"lastGame\");\r\n\t\tif (_dataFromLocalStorage !== null) { \r\n\t\t\tlet _d = JSON.parse(_dataFromLocalStorage)\r\n\t\t\tconsole.log(\"found gamedata in local storage\")\r\n\t\t\tif (_d.wordToGuess === wordToGuess) {\r\n\t\t\t\tsetGameState(_d!.gameState);\r\n\t\t\t\tsetEvaluations(_d!.evaluations);\r\n\t\t\t\tsetState(_d!.state);\r\n\t\t\t\tsetShareMessage(_d!.shareMessage);\r\n\t\t\t} else {\r\n\t\t\t\tsetGameState({\r\n\t\t\t\t\tguessRow: \"0\",\r\n\t\t\t\t\trows: {\r\n\t\t\t\t\t\t\"0\": [\"\", \"\", \"\", \"\", \"\"],\r\n\t\t\t\t\t\t\"1\": [\"\", \"\", \"\", \"\", \"\"],\r\n\t\t\t\t\t\t\"2\": [\"\", \"\", \"\", \"\", \"\"],\r\n\t\t\t\t\t\t\"3\": [\"\", \"\", \"\", \"\", \"\"],\r\n\t\t\t\t\t\t\"4\": [\"\", \"\", \"\", \"\", \"\"],\r\n\t\t\t\t\t\t\"5\": [\"\", \"\", \"\", \"\", \"\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tinSpot: [],\r\n\t\t\t\t\tinWord: [],\r\n\t\t\t\t\tnotInWord: []\r\n\t\t\t\t});\r\n\t\t\t\tsetEvaluations([[],[],[],[],[],[]]);\r\n\t\t\t\tsetState(\"PLAYING\");\r\n\t\t\t\tsetShareMessage(\"\");\r\n\t\t\t}\r\n\t\t}\t\r\n\t}, [wordToGuess])\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"State: \" + state)\r\n\t}, [state])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Blank title=\"Gabirdle\" loading={false}>\r\n\t\t\t\t<div id=\"shareMenu\" uk-offcanvas=\"flip: true; overlay: true\">\r\n\t\t\t\t\t<div className=\"uk-offcanvas-bar\">\r\n\r\n\t\t\t\t\t\t<button className=\"uk-offcanvas-close\" type=\"button\" uk-close=\"true\"></button>\r\n                        \r\n                        <div className=\"uk-child-width-1-4 uk-text-center\" uk-grid = \"true\" uk-scrollspy=\"cls: uk-animation-slide-top-medium; target: .fade-cd; delay: 100; repeat: false\" uk-countdown={`date: ` + timeConverter(wordTimes[nextTime])} uk-parallax=\"blur: 15;\">\r\n                            <div className = \"uk-width-1-1\">\r\n                                <h1 className = \"fade-cd uk-text-center uk-display-block\">NEXT WORD IN</h1>\r\n                            </div>\r\n                            <div className = \"fade-cd\">\r\n                                <span className=\"acumin uk-countdown-number uk-countdown-days\"></span>\r\n                                <div className=\"acumin uk-countdown-label\">Days</div>\r\n                            </div>\r\n                            <div className = \"fade-cd\">\r\n                                <span className=\"acumin uk-countdown-number uk-countdown-hours\"></span>\r\n                                <div className=\"acumin uk-countdown-label\">Hours</div>\r\n                            </div>\r\n                            <div className = \"fade-cd\">\r\n                                <span className=\"acumin uk-countdown-number uk-countdown-minutes\"></span>\r\n                                <div className=\"acumin uk-countdown-label\">Minutes</div>\r\n                            </div>\r\n                            <div className = \"fade-cd\">\r\n                                <span className=\"acumin uk-countdown-number uk-countdown-seconds\"></span>\r\n                                <div className=\"acumin uk-countdown-label\">Seconds</div>\r\n                            </div>\r\n                        </div>\r\n\r\n\t\t\t\t\t\t{state === \"PLAYING\" ? <h2>Finish Your Game to Share</h2> : (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<h3>Gabirdle, {state === \"LOSE\" ? \"X\" : Number(gameState.guessRow) + 1}/6</h3>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tObject.values(gameState.rows).map((row, j) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{row.map((letter, i) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (j < Number(gameState.guessRow) + 1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (letter.toLowerCase() === wordToGuess.toLowerCase()[i]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn '🟩'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (wordToGuess.toLowerCase().split(\"\").includes(letter.toLowerCase())) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn '🟨'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn '⬛'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span><br />\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n                        {state !== \"PLAYING\" ? <a id = \"share\" onClick = {() => {\r\n                            navigator.clipboard.writeText(shareMessage);\r\n                            setShareButton(\"COPIED\");\r\n                        }} uk-tooltip = \"Share\" className = \"uk-button uk-button-default\" href = \"#share\">{ shareButton }</a> : \"\"}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div id=\"game\">\r\n                    { message !== null ? (\r\n                        <span id = \"message\">{ message }</span>\r\n                    ) : \"\"}\r\n\t\t\t\t\t<div id=\"guesses\">\r\n\t\t\t\t\t\t{/* <button className=\"uk-button uk-button-default\" uk-toggle=\"target: #shareMenu\">Menu</button> */}\r\n                        <div id = \"header\">\r\n                            <img id = \"logo\" src=\"https://i.gabirmotors.com/assets/other/gabirdle_logo.png\" alt=\"Gabirdle Logo\"/>\r\n                            <button className=\"menuButton\" id = \"menuButton\" uk-toggle=\"target: #shareMenu\"><span uk-icon=\"icon: cog; ratio: 2.5\"></span></button>\r\n                        </div>\r\n\t\t\t\t\t\t{Object.values(gameState.rows).map((row, j) => {\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div id={`row${j + 1}`} className=\"row\" uk-scrollspy={`cls: ${((Number(gameState.guessRow) > j || (state === \"WIN\" && Number(gameState.guessRow) + 1 > j)) ? \" uk-animation-scale-up\" : \"uk-animation-slide-top-small\")}; target: .square,.in-spot,.in-word; delay: ${(Number(gameState.guessRow) > j ? \"100\" : \"50\")};; repeat: true`}>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t{row.map((letter, i) => {\r\n\t\t\t\t\t\t\t\t\t\tlet _classes = \"square \"\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (evaluations[j] !== null) {\r\n\t\t\t\t\t\t\t\t\t\t \tif (evaluations[j][i] === \"c\") {\r\n\t\t\t\t\t\t\t\t\t\t\t\t_classes += \" in-spot\"\r\n\t\t\t\t\t\t\t\t\t\t\t} else if (evaluations[j][i] === \"i\") {\r\n\t\t\t\t\t\t\t\t\t\t\t\t_classes += \" in-word\"\r\n\t\t\t\t\t\t\t\t\t\t\t} else if (evaluations[j][i] === \"n\") {\r\n\t\t\t\t\t\t\t\t\t\t\t\t_classes += \" not-in-word\"\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div id={`square${i + 1}`} className={_classes}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{letter}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div id=\"keyboard\" className=\"\">\r\n\t\t\t\t\t\t<div id=\"row1\" className=\"row\">\r\n\t\t\t\t\t\t\t{keysRow1.map((key, i) => {\r\n\t\t\t\t\t\t\t\tlet _classes = \"\";\r\n\t\t\t\t\t\t\t\tif (gameState.inSpot.includes(key)) _classes += \"in-spot\";\r\n\t\t\t\t\t\t\t\telse if (gameState.inWord.includes(key)) _classes += \"in-word\";\r\n\t\t\t\t\t\t\t\telse if (gameState.notInWord.includes(key)) _classes += \"not-in-word\";\r\n\t\t\t\t\t\t\t\treturn <button onClick={() => { pressButton(key) }} className={_classes}>{key}</button>\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div id=\"row2\" className=\"row\">\r\n\t\t\t\t\t\t\t{keysRow2.map((key, i) => {\r\n\t\t\t\t\t\t\t\tlet _classes = \"\";\r\n\t\t\t\t\t\t\t\tif (gameState.inSpot.includes(key)) _classes += \"in-spot\";\r\n\t\t\t\t\t\t\t\telse if (gameState.inWord.includes(key)) _classes += \"in-word\";\r\n\t\t\t\t\t\t\t\telse if (gameState.notInWord.includes(key)) _classes += \"not-in-word\";\r\n\t\t\t\t\t\t\t\treturn <button onClick={() => { pressButton(key) }} className={_classes}>{key}</button>\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div id=\"row3\" className=\"row\">\r\n\t\t\t\t\t\t\t<button className=\"big\" onClick={() => { pressButton(\"enter\") }}><span uk-icon=\"icon: check; ratio: 2\"></span></button>\r\n\t\t\t\t\t\t\t{keysRow3.map((key, i) => {\r\n\t\t\t\t\t\t\t\tlet _classes = \"\";\r\n\t\t\t\t\t\t\t\tif (gameState.inSpot.includes(key)) _classes += \"in-spot\";\r\n\t\t\t\t\t\t\t\telse if (gameState.inWord.includes(key)) _classes += \"in-word\";\r\n\t\t\t\t\t\t\t\telse if (gameState.notInWord.includes(key)) _classes += \"not-in-word\";\r\n\t\t\t\t\t\t\t\treturn <button onClick={() => { pressButton(key) }} className={_classes}>{key}</button>\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t<button className=\"big\" onClick={() => { pressButton(\"del\") }}><span uk-icon=\"icon: arrow-left; ratio: 2\"></span></button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Blank>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Gabirdle;","E:\\Projects\\GabirReact\\src\\utils\\allwords.js",[],"E:\\Projects\\GabirReact\\src\\utils\\gabirdleWords.js",[],"E:\\Projects\\GabirReact\\src\\utils\\useKeypress.js",[],"E:\\Projects\\GabirReact\\src\\utils\\shimKeyboardEvent.js",[],{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"247","replacedBy":"251"},{"ruleId":"249","replacedBy":"252"},{"ruleId":"253","severity":1,"message":"254","line":4,"column":8,"nodeType":"255","messageId":"256","endLine":4,"endColumn":18},{"ruleId":"257","severity":1,"message":"258","line":49,"column":5,"nodeType":"259","endLine":49,"endColumn":7,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":57,"column":15,"nodeType":"263","endLine":57,"endColumn":72},{"ruleId":"261","severity":1,"message":"262","line":65,"column":15,"nodeType":"263","endLine":65,"endColumn":72},{"ruleId":"261","severity":1,"message":"262","line":72,"column":15,"nodeType":"263","endLine":72,"endColumn":72},{"ruleId":"253","severity":1,"message":"264","line":52,"column":19,"nodeType":"255","messageId":"256","endLine":52,"endColumn":30},{"ruleId":"253","severity":1,"message":"265","line":53,"column":19,"nodeType":"255","messageId":"256","endLine":53,"endColumn":30},{"ruleId":"253","severity":1,"message":"266","line":54,"column":19,"nodeType":"255","messageId":"256","endLine":54,"endColumn":30},{"ruleId":"267","severity":1,"message":"268","line":109,"column":53,"nodeType":"269","messageId":"270","endLine":109,"endColumn":54,"suggestions":"271"},{"ruleId":"272","severity":1,"message":"273","line":138,"column":14,"nodeType":"255","messageId":"274","endLine":138,"endColumn":15},{"ruleId":"272","severity":1,"message":"273","line":191,"column":14,"nodeType":"255","messageId":"274","endLine":191,"endColumn":15},{"ruleId":"272","severity":1,"message":"273","line":201,"column":14,"nodeType":"255","messageId":"274","endLine":201,"endColumn":15},{"ruleId":"275","severity":1,"message":"276","line":236,"column":64,"nodeType":"277","messageId":"278","endLine":236,"endColumn":66},{"ruleId":"275","severity":1,"message":"279","line":238,"column":45,"nodeType":"277","messageId":"280","endLine":238,"endColumn":47},{"ruleId":"257","severity":1,"message":"281","line":309,"column":8,"nodeType":"259","endLine":309,"endColumn":10,"suggestions":"282"},{"ruleId":"275","severity":1,"message":"279","line":387,"column":35,"nodeType":"277","messageId":"280","endLine":387,"endColumn":37},"no-native-reassign",["283"],"no-negated-in-lhs",["284"],["283"],["284"],"@typescript-eslint/no-unused-vars","'getViewers' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'makeLeaf'. Either include it or remove the dependency array.","ArrayExpression",["285"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setKeysRow1' is assigned a value but never used.","'setKeysRow2' is assigned a value but never used.","'setKeysRow3' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["286","287"],"@typescript-eslint/no-redeclare","'i' is already defined.","redeclared","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has a missing dependency: 'wordTimes'. Either include it or remove the dependency array.",["288"],"no-global-assign","no-unsafe-negation",{"desc":"289","fix":"290"},{"messageId":"291","fix":"292","desc":"293"},{"messageId":"294","fix":"295","desc":"296"},{"desc":"297","fix":"298"},"Update the dependencies array to be: [makeLeaf]",{"range":"299","text":"300"},"removeEscape",{"range":"301","text":"302"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"303","text":"304"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [wordTimes]",{"range":"305","text":"306"},[2170,2172],"[makeLeaf]",[3076,3077],"",[3076,3076],"\\",[10602,10604],"[wordTimes]"]