[{"/home/runner/GabirReactFrontend/src/index.js":"1","/home/runner/GabirReactFrontend/src/serviceWorkerRegistration.js":"2","/home/runner/GabirReactFrontend/src/App.js":"3","/home/runner/GabirReactFrontend/src/Pages/404.tsx":"4","/home/runner/GabirReactFrontend/src/Pages/Main.tsx":"5","/home/runner/GabirReactFrontend/src/Pages/Calendar.tsx":"6","/home/runner/GabirReactFrontend/src/Pages/Assets.tsx":"7","/home/runner/GabirReactFrontend/src/Pages/TeamPage.tsx":"8","/home/runner/GabirReactFrontend/src/Pages/TeamsPage.tsx":"9","/home/runner/GabirReactFrontend/src/Pages/Showoff.tsx":"10","/home/runner/GabirReactFrontend/src/Pages/HaikuSubmit.tsx":"11","/home/runner/GabirReactFrontend/src/Pages/QuoteSubmit.tsx":"12","/home/runner/GabirReactFrontend/src/Pages/Timeline.tsx":"13","/home/runner/GabirReactFrontend/src/Pages/Tutorial.tsx":"14","/home/runner/GabirReactFrontend/src/Pages/Driveroftheday.tsx":"15","/home/runner/GabirReactFrontend/src/Pages/Standings.tsx":"16","/home/runner/GabirReactFrontend/src/Pages/NewAssets.tsx":"17","/home/runner/GabirReactFrontend/src/components/QuoteForm.js":"18","/home/runner/GabirReactFrontend/src/components/HaikuForm.js":"19","/home/runner/GabirReactFrontend/src/components/Header.tsx":"20","/home/runner/GabirReactFrontend/src/components/Footer.tsx":"21","/home/runner/GabirReactFrontend/src/components/Race.tsx":"22","/home/runner/GabirReactFrontend/src/components/Loading.tsx":"23","/home/runner/GabirReactFrontend/src/components/Row.tsx":"24","/home/runner/GabirReactFrontend/src/components/InfoTab.tsx":"25","/home/runner/GabirReactFrontend/src/components/Alert/index.tsx":"26","/home/runner/GabirReactFrontend/src/components/Notification/index.tsx":"27","/home/runner/GabirReactFrontend/src/components/RightTab.tsx":"28","/home/runner/GabirReactFrontend/src/components/ShareButton.tsx":"29","/home/runner/GabirReactFrontend/src/components/RightTabLink.tsx":"30"},{"size":336,"mtime":1631036759308,"results":"31","hashOfConfig":"32"},{"size":5064,"mtime":1631036759308,"results":"33","hashOfConfig":"32"},{"size":2605,"mtime":1633111502653,"results":"34","hashOfConfig":"32"},{"size":1221,"mtime":1631036759304,"results":"35","hashOfConfig":"32"},{"size":18996,"mtime":1633113103818,"results":"36","hashOfConfig":"32"},{"size":2723,"mtime":1631036759304,"results":"37","hashOfConfig":"32"},{"size":5034,"mtime":1632942432776,"results":"38","hashOfConfig":"32"},{"size":4681,"mtime":1631036759308,"results":"39","hashOfConfig":"32"},{"size":4305,"mtime":1631036759308,"results":"40","hashOfConfig":"32"},{"size":2809,"mtime":1631036759308,"results":"41","hashOfConfig":"32"},{"size":1045,"mtime":1631036759308,"results":"42","hashOfConfig":"32"},{"size":1471,"mtime":1631036759308,"results":"43","hashOfConfig":"32"},{"size":4007,"mtime":1633111926238,"results":"44","hashOfConfig":"32"},{"size":16557,"mtime":1631036759308,"results":"45","hashOfConfig":"32"},{"size":9540,"mtime":1631036759304,"results":"46","hashOfConfig":"32"},{"size":4508,"mtime":1631036759308,"results":"47","hashOfConfig":"32"},{"size":4525,"mtime":1633111502653,"results":"48","hashOfConfig":"32"},{"size":2812,"mtime":1632942432776,"results":"49","hashOfConfig":"32"},{"size":4063,"mtime":1632942432776,"results":"50","hashOfConfig":"32"},{"size":5667,"mtime":1631036759308,"results":"51","hashOfConfig":"32"},{"size":504,"mtime":1631036759308,"results":"52","hashOfConfig":"32"},{"size":4957,"mtime":1633122300780,"results":"53","hashOfConfig":"32"},{"size":1225,"mtime":1631036759308,"results":"54","hashOfConfig":"32"},{"size":1797,"mtime":1632942432776,"results":"55","hashOfConfig":"32"},{"size":830,"mtime":1631036759308,"results":"56","hashOfConfig":"32"},{"size":1935,"mtime":1632942432776,"results":"57","hashOfConfig":"32"},{"size":1105,"mtime":1632942432776,"results":"58","hashOfConfig":"32"},{"size":335,"mtime":1631036759308,"results":"59","hashOfConfig":"32"},{"size":865,"mtime":1631036759308,"results":"60","hashOfConfig":"32"},{"size":662,"mtime":1631036759308,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"xw73bi",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"71"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"71"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"71"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"71"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"/home/runner/GabirReactFrontend/src/index.js",[],["128","129"],"/home/runner/GabirReactFrontend/src/serviceWorkerRegistration.js",[],"/home/runner/GabirReactFrontend/src/App.js",[],"/home/runner/GabirReactFrontend/src/Pages/404.tsx",[],["130","131"],"/home/runner/GabirReactFrontend/src/Pages/Main.tsx",["132","133"],"/home/runner/GabirReactFrontend/src/Pages/Calendar.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Assets.tsx",["134"],"/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react/jsx-no-target-blank */\n/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React from 'react'\nimport Header from \"../components/Header\";\nimport { useState, useEffect } from \"react\";\nimport { withRouter } from 'react-router-dom'\nimport InfoTab from '../components/InfoTab'\nimport Alert from '../components/Alert/index'\nimport { \n    File as FileTypes, \n    Folder as FolderTypes, \n    GetFile,\n    GetFolder\n} from '../interfaces';\n\nconst TeamsPage = () => {\n    const [assets, setAssets] = useState({children: []});\n    const [showSize, setShowSize] = useState(false);\n\n    useEffect(() => {\n        const fetchAssets = async () => {\n            const res = await fetch(`https://i.gabirmotors.com/assetsList`)\n            const data = await res.json()\n            \n            console.log(data)\n    \n            return setAssets(data);\n        }\n\n        fetchAssets();\n    }, [])\n\n    const File = ({ name, size, path, fileSize, ext }:FileTypes) => {\n        const imgExt = [\".jpg\", \".png\"];\n        const txtExt = [\".txt\", \".json\", \".md\"];\n        const webExt = [\".html\"];\n        const pdfExt = [\".pdf\"];\n        let displayIcon = \"file\";\n        if (imgExt.includes(ext)) {\n            displayIcon = \"image\";\n        } else if (txtExt.includes(ext)) {\n            displayIcon = \"file-text\"\n        } else if (webExt.includes(ext)) {\n            displayIcon = \"desktop\"\n        } else if (pdfExt.includes(ext)) {\n            displayIcon = \"file-pdf\"\n        }  \n        return (\n            <div uk-lightbox = \"true\" className = \"file\">\n                <li className = \"uk-active\">\n                    <a data-caption= {`${name} | ${((fileSize / 1000) / 1000).toFixed(2)}MB`} className = \"uk-text-left uk-link\" href={`https://i.gabirmotors.com${path.replace(\"public\", \"\")}`} target = \"_blank\" style = {{ paddingLeft: `${size * 20}px`, fontSize: '24px' }}><span uk-icon={displayIcon}></span> {name} {showSize && <span className = \"uk-text-muted\">| {((fileSize / 1000) / 1000).toFixed(2)}MB</span>}</a>\n                    {displayIcon === \"image\" && (\n                        <div style = {{ backgroundColor: 'rgba(0,0,0,0)' }} uk-dropdown = \"pos: left; offset: 100;animation: uk-animation-slide-left-medium; duration: 100; delay-hide: 0\">\n                            <img src={`https://i.gabirmotors.com${path.replace(\"public\", \"\")}`} alt=\"\" style = {{ maxHeight: '250px', maxWidth: '300px' }}/>\n                        </div>\n                    )}\n                </li>\n            </div>\n        )\n    }\n\n    const Folder = ({ name, children, size }:FolderTypes) => {\n        return (\n            <li className=\"uk-parent uk-active folder\">\n                <a className = \"uk-text-left\" href=\"#\" style = {{ paddingLeft: `${size * 20}px` }}><span uk-icon=\"folder\"></span> {name}</a>\n                <ul className=\"uk-nav-primary uk-nav-parent-icon\" uk-nav = \"true\">\n                        { children.map((child:GetFile | GetFolder) => (\n                            <>\n                                {\"children\" in child ? <Folder name = {child.name} children = {child.children} size = {Number(size) + 1}/> : <File name = {child.name} size = {Number(size) + 1} path = {child.path} ext = {child.extension} fileSize = {child.size} />}\n                            </>\n                        ))}\n                </ul>\n            </li>\n        )\n    }\n\n    return (\n        <>\n            <Header\n                title={`Gabir Motors | Assets`}\n            />\n            <Alert type = \"info\" title = \"Tip:\" text = 'Hovering over an image name now displays a preview of that image' id = \"assetspreview\"/>\n\n            <div className=\"uk-height-large uk-background-cover uk-light uk-flex uk-background-cover uk-background-fixed\" style={{ backgroundImage: 'url(img/gabir_bg.jpg)', height: '100vh' }}>\n                \n                <div className=\"uk-width-1-2@m uk-text-center uk-margin-auto uk-margin-auto-vertical uk-container uk-position-center\">\n                    <div className=\"uk-animation-slide-top-medium uk-margin uk-width-large uk-margin-auto uk-card uk-card-secondary uk-card-body uk-box-shadow-large\">\n                        <a href = \"#\" onClick = {() => { setShowSize(!showSize) }} className = \"uk-button uk-button-text\">Toggle File Sizes</a>\n                        <ul className=\"uk-nav-primary uk-nav-parent-icon assets-nav\" uk-nav = \"true\">\n                            { assets.children.map((child:GetFile | GetFolder) => (\n                                <>\n                                    {\"children\" in child ? <Folder name = {child.name} children = {child.children} size = {0}/> : <File name = {child.name} size = {0} path = {child.path} ext = {child.extension} fileSize = {child.size} />}\n                                </>\n                            ))}\n                        </ul>\n                    </div>\n                </div>        \n            </div>\n\n        </>\n    )\n}\n\nexport default withRouter(TeamsPage)\n","/home/runner/GabirReactFrontend/src/Pages/TeamPage.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/TeamsPage.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Showoff.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/HaikuSubmit.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/QuoteSubmit.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Timeline.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Tutorial.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Driveroftheday.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Standings.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/NewAssets.tsx",["135","136","137","138"],"/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react/jsx-no-target-blank */\n/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React from 'react'\nimport Header from \"../components/Header\";\nimport { useState, useEffect } from \"react\";\nimport { withRouter } from 'react-router-dom'\nimport Alert from '../components/Alert/index'\nimport { \n    GetFile,\n    GetFolder\n} from '../interfaces';\n\ninterface FileTypes {\n    path:      string;\n    name:      string;\n    ext:       string;\n    size:      number;\n}\n\ninterface FolderTypes {\n    name:      string;\n    children:  (GetFile | GetFolder)[];\n}\n\nconst Assets = () => {\n    const [assets, setAssets] = useState({children: []});\n    const [showSize, setShowSize] = useState(false);\n\n    useEffect(() => {\n        const fetchAssets = async () => {\n            const res = await fetch(`https://i.gabirmotors.com/assetsList`)\n            const data = await res.json()\n            \n            console.log(data)\n    \n            return setAssets(data);\n        }\n\n        fetchAssets();\n    }, [])\n\n    const Image = ({ name, path, ext, size }:FileTypes) => {\n        const imgExt = [\".jpg\", \".png\"];\n        let displayIcon = \"file/\";\n        if (imgExt.includes(ext)) {\n            displayIcon = \"image\";\n        }\n        var tag = path;\n        tag = tag.replace(\"public/assets/\", \"\").substring(0,tag.replace(\"public/assets/\", \"\").indexOf('/'));\n        var classes = \"tag-all tag-\" + tag;\n\n\n        return (\n            <div style = {{ marginTop: \"20px\", padding: \"20px\" }} className = {classes}>\n                <div className=\"uk-flex uk-flex-center uk-flex-middle\">\n                    <a href = {`https://i.gabirmotors.com${path.replace('public', '')}`} target = \"_new\" uk-tooltip={`${name} | ${((size / 1000) / 1000).toFixed(2)}MB`}><img src={`https://i.gabirmotors.com${path.replace('public', '')}`} alt=\"\" style = {{ maxHeight: \"150px\" }} uk-img = \"true\"/></a>\n                </div>\n            </div>\n        )\n    }\n\n    const Folder = ({ name, children }:FolderTypes) => {\n        return  (\n            <>\n                { children.map((child:GetFile | GetFolder) => {\n                    if (\"children\" in child) {\n                        return <Folder name = {child.name} children = {child?.children}/>\n                    } else {\n                        return <Image name = {child.name} path = {child.path} ext = {child.extension} size = {child.size} />  \n                    }\n                })}\n            </>\n        )\n    }\n\n    return (\n        <>\n            <Header\n                title={`Gabir Motors | Assets`}\n            />\n\n            <div className=\"uk-height-large uk-background-cover uk-light uk-flex uk-background-cover uk-background-fixed\" style={{ backgroundImage: 'url(img/gabir_bg.jpg)', minHeight: '100vh', height: 'auto', paddingBottom: '5vh' }}>\n                \n                <div className=\"uk-width-2-3@m uk-text-center uk-margin-auto uk-container\" uk-filter=\"target: .assets-filter; animation: fade\">\n                    <div style = {{ marginTop: \"5vh\" }}>\n                        <ul className=\"uk-subnav uk-subnav-pill\">\n                            <li uk-filter-control=\".tag-all\"><a href=\"#\">All</a></li>\n                            <li uk-filter-control=\".tag-teams\"><a href=\"#\">Teams</a></li>\n                            <li uk-filter-control=\".tag-league\"><a href=\"#\">League</a></li>\n                            <li uk-filter-control=\".tag-characters\"><a href=\"#\">Characters</a></li>\n                            <li uk-filter-control=\".tag-other\"><a href=\"#\">Other</a></li>\n                        </ul>\n                    </div>\n                    <div className = \"uk-child-width-1-3@s uk-child-width-1-3@m assets-filter\" uk-grid=\"masonry: true; 50\">\n                        { assets.children.map((child:GetFile | GetFolder) => {\n                            if (\"children\" in child) {\n                                return (\n                                    <Folder name = {child.name} children = {child?.children}/>\n                                )\n                            } else {\n                                return (\n                                    <Image name = {child.name} path = {child.path} ext = {child.extension} size = {child.size} /> \n                                )  \n                            }\n                        })}\n                    </div>\n                </div>        \n            </div>\n\n        </>\n    )\n}\n\nexport default withRouter(Assets)\n","/home/runner/GabirReactFrontend/src/components/QuoteForm.js",[],"/home/runner/GabirReactFrontend/src/components/HaikuForm.js",[],"/home/runner/GabirReactFrontend/src/components/Header.tsx",[],"/home/runner/GabirReactFrontend/src/components/Footer.tsx",[],"/home/runner/GabirReactFrontend/src/components/Race.tsx",[],"/home/runner/GabirReactFrontend/src/components/Loading.tsx",[],"/home/runner/GabirReactFrontend/src/components/Row.tsx",[],"/home/runner/GabirReactFrontend/src/components/InfoTab.tsx",[],"/home/runner/GabirReactFrontend/src/components/Alert/index.tsx",["139","140"],"import { useState, useEffect } from 'react'\nimport './style.scss'\n\ntype Props = {\n    icon?: string;\n    type?: \"success\" | \"danger\" | \"default\" | \"info\" | \"warning\";\n    title?: string;\n    text?: string;\n    collapse?: boolean;\n    id?: string;\n}\n\ninterface LooseObject {\n    [key: string]: any\n}\n\nconst Alert = ({ icon, type, title, text, collapse, id }: Props) => {\n    var dismissedAlerts = localStorage.getItem(\"alerts\");\n    if (dismissedAlerts === undefined && id !== undefined) {\n        var alerts: LooseObject = {};\n        alerts[`${id}`] = false;\n        localStorage.setItem(\"alerts\", JSON.stringify(alerts));\n    }\n    const [dismissed, setDismissed] = useState(localStorage.getItem(\"alerts\"));\n    const [classes, setClasses] = useState(`alert alert-${type} alert-dismiss show`)\n    const dismiss = () => {\n        setClasses(classes.replace('show', 'hide'));\n        var dismissedAlerts = localStorage.getItem(\"alerts\");\n        if (dismissedAlerts !== undefined && id !== undefined) {\n            var data = JSON.parse(dismissedAlerts ? dismissedAlerts : \"{}\");\n            data[id] = true;\n            localStorage.setItem(\"alerts\", JSON.stringify(data));\n            setDismissed(localStorage.getItem(\"alerts\"))\n        }\n    }\n\n    useEffect(() => {\n        if (dismissed !== null && id !== undefined) {\n            var a = JSON.parse(dismissed);\n            if (a[id]) {\n                setClasses(classes.replace('show', 'uk-invisible'));\n            }\n        }\n    }, [dismissed])\n\n    return (\n        <>\n            <div className = {classes}>\n                <span className =\"alert-close\"><a href = \"#\" onClick = {dismiss} >✖</a></span>\n                <span className =\"alert-body\">\n                    <span className =\"alert-title\">{ title }</span>\n                    <span className =\"slert-text\">{ text }</span>\n                </span>\n            </div>\n        </>\n    )\n}\n\nexport default Alert;\n","/home/runner/GabirReactFrontend/src/components/Notification/index.tsx",["141"],"import { useState } from 'react'\nimport './style.scss'\n\ntype Props = {\n    type?: \"success\" | \"danger\" | \"light\" | \"info\" | \"warning\";\n    children?: any;\n    icon?: string;\n    link?: string;\n}\n\nexport const Notification = ({ type, children, icon, link }: Props) => {\n    const [classes, setClasses] = useState(`notification notification-${type} show`)\n    const dismiss = () => {\n        setClasses(classes.replace('show', 'hide'));\n    }\n\n    return (\n        <a href = {( link ? link : \"#\")} target = {( link ? \"_new\" : \"\")}>\n            <div className={classes}>\n                <span className=\"notification-close\"><a href=\"#\" onClick={dismiss}>✖</a></span>\n\n                <span className=\"notification-body\">\n                    <span className=\"notification-text\"> {icon !== undefined ? ( <span className = \"notification-icon\" uk-icon = {`icon:${icon}`}></span> ) : \"\"} { children } </span>\n                </span>\n            </div>\n        </a>\n    )\n}\n\nexport const Area = (props: any) => {\n    return (\n        <div id=\"notifications\">\n            { props?.children}\n        </div>\n    )\n}","/home/runner/GabirReactFrontend/src/components/RightTab.tsx",[],"/home/runner/GabirReactFrontend/src/components/ShareButton.tsx",[],"/home/runner/GabirReactFrontend/src/components/RightTabLink.tsx",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":13,"column":20,"nodeType":"148","messageId":"149","endLine":13,"endColumn":31},{"ruleId":"150","severity":1,"message":"151","line":92,"column":88,"nodeType":"152","messageId":"153","endLine":92,"endColumn":90},{"ruleId":"146","severity":1,"message":"154","line":9,"column":8,"nodeType":"148","messageId":"149","endLine":9,"endColumn":15},{"ruleId":"146","severity":1,"message":"155","line":9,"column":8,"nodeType":"148","messageId":"149","endLine":9,"endColumn":13},{"ruleId":"146","severity":1,"message":"156","line":29,"column":12,"nodeType":"148","messageId":"149","endLine":29,"endColumn":20},{"ruleId":"146","severity":1,"message":"157","line":29,"column":22,"nodeType":"148","messageId":"149","endLine":29,"endColumn":33},{"ruleId":"146","severity":1,"message":"158","line":48,"column":13,"nodeType":"148","messageId":"149","endLine":48,"endColumn":24},{"ruleId":"159","severity":1,"message":"160","line":44,"column":8,"nodeType":"161","endLine":44,"endColumn":19,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":49,"column":48,"nodeType":"165","endLine":49,"endColumn":83},{"ruleId":"163","severity":1,"message":"164","line":20,"column":54,"nodeType":"165","endLine":20,"endColumn":84},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"@typescript-eslint/no-unused-vars","'setUrlQuery' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'InfoTab' is defined but never used.","'Alert' is defined but never used.","'showSize' is assigned a value but never used.","'setShowSize' is assigned a value but never used.","'displayIcon' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'classes' and 'id'. Either include them or remove the dependency array. You can also do a functional update 'setClasses(c => ...)' if you only need 'classes' in the 'setClasses' call.","ArrayExpression",["168"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},"Update the dependencies array to be: [classes, dismissed, id]",{"range":"171","text":"172"},[1493,1504],"[classes, dismissed, id]"]