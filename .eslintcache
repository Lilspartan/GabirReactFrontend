[{"/home/runner/GabirReactFrontend/src/index.js":"1","/home/runner/GabirReactFrontend/src/serviceWorkerRegistration.js":"2","/home/runner/GabirReactFrontend/src/App.js":"3","/home/runner/GabirReactFrontend/src/Pages/MFT.tsx":"4","/home/runner/GabirReactFrontend/src/Pages/404.tsx":"5","/home/runner/GabirReactFrontend/src/Pages/Calendar.tsx":"6","/home/runner/GabirReactFrontend/src/Pages/Main.tsx":"7","/home/runner/GabirReactFrontend/src/Pages/TeamPage.tsx":"8","/home/runner/GabirReactFrontend/src/Pages/TeamsPage.tsx":"9","/home/runner/GabirReactFrontend/src/Pages/GabirTV.tsx":"10","/home/runner/GabirReactFrontend/src/Pages/Pacecar.tsx":"11","/home/runner/GabirReactFrontend/src/Pages/Assets.tsx":"12","/home/runner/GabirReactFrontend/src/Pages/QuoteSubmit.tsx":"13","/home/runner/GabirReactFrontend/src/Pages/Timeline.tsx":"14","/home/runner/GabirReactFrontend/src/Pages/Showoff.tsx":"15","/home/runner/GabirReactFrontend/src/Pages/HaikuSubmit.tsx":"16","/home/runner/GabirReactFrontend/src/Pages/Standings.tsx":"17","/home/runner/GabirReactFrontend/src/Pages/Driveroftheday.tsx":"18","/home/runner/GabirReactFrontend/src/Pages/TestingTemplates.tsx":"19","/home/runner/GabirReactFrontend/src/Pages/Tools/ColorTemplate.tsx":"20","/home/runner/GabirReactFrontend/src/Pages/Tools/Toolbox.tsx":"21","/home/runner/GabirReactFrontend/src/Pages/Tools/SpecMapping.tsx":"22","/home/runner/GabirReactFrontend/src/Pages/Tools/DownforceGuide.tsx":"23","/home/runner/GabirReactFrontend/src/Pages/Tools/ColorTemplateDownload.tsx":"24","/home/runner/GabirReactFrontend/src/Pages/Tutorial.tsx":"25","/home/runner/GabirReactFrontend/src/Pages/Constructors.tsx":"26","/home/runner/GabirReactFrontend/src/Pages/Gabirdle.tsx":"27","/home/runner/GabirReactFrontend/src/utils/useKeypress.js":"28","/home/runner/GabirReactFrontend/src/utils/allwords.js":"29","/home/runner/GabirReactFrontend/src/utils/gabirdleWords.js":"30","/home/runner/GabirReactFrontend/src/Templates/Blank/index.tsx":"31","/home/runner/GabirReactFrontend/src/Templates/CenterCard/index.tsx":"32","/home/runner/GabirReactFrontend/src/utils/shimKeyboardEvent.js":"33","/home/runner/GabirReactFrontend/src/Components/Notification/index.tsx":"34","/home/runner/GabirReactFrontend/src/Components/Alert/index.tsx":"35","/home/runner/GabirReactFrontend/src/Components/index.ts":"36","/home/runner/GabirReactFrontend/src/Components/StandingsRow/index.ts":"37","/home/runner/GabirReactFrontend/src/Components/Decorations/index.ts":"38","/home/runner/GabirReactFrontend/src/Components/HaikuForm/index.js":"39","/home/runner/GabirReactFrontend/src/Components/QuoteForm/index.js":"40","/home/runner/GabirReactFrontend/src/Components/DriverCard/index.tsx":"41","/home/runner/GabirReactFrontend/src/Components/LoadingPage/index.tsx":"42","/home/runner/GabirReactFrontend/src/Components/Footer/index.tsx":"43","/home/runner/GabirReactFrontend/src/Components/Header/index.tsx":"44","/home/runner/GabirReactFrontend/src/Components/LoadingIcon/index.tsx":"45","/home/runner/GabirReactFrontend/src/Components/CalendarRow/index.tsx":"46","/home/runner/GabirReactFrontend/src/Components/CarFrame/index.tsx":"47","/home/runner/GabirReactFrontend/src/Components/ShareButton/index.tsx":"48","/home/runner/GabirReactFrontend/src/Components/StandingsRow/DriverRow/index.tsx":"49","/home/runner/GabirReactFrontend/src/Components/Decorations/Christmas/index.tsx":"50","/home/runner/GabirReactFrontend/src/Components/StandingsRow/TeamRow/index.tsx":"51","/home/runner/GabirReactFrontend/src/Components/Decorations/Fall/index.tsx":"52"},{"size":336,"mtime":1644002668389,"results":"53","hashOfConfig":"54"},{"size":5064,"mtime":1635376107373,"results":"55","hashOfConfig":"54"},{"size":2954,"mtime":1645029454249,"results":"56","hashOfConfig":"54"},{"size":4272,"mtime":1645029454249,"results":"57","hashOfConfig":"54"},{"size":830,"mtime":1637091319358,"results":"58","hashOfConfig":"54"},{"size":2036,"mtime":1645029454249,"results":"59","hashOfConfig":"54"},{"size":19099,"mtime":1645029454249,"results":"60","hashOfConfig":"54"},{"size":2826,"mtime":1637090778705,"results":"61","hashOfConfig":"54"},{"size":3548,"mtime":1643829236385,"results":"62","hashOfConfig":"54"},{"size":986,"mtime":1645029454249,"results":"63","hashOfConfig":"54"},{"size":2165,"mtime":1643829236385,"results":"64","hashOfConfig":"54"},{"size":5954,"mtime":1645029454249,"results":"65","hashOfConfig":"54"},{"size":972,"mtime":1643829236385,"results":"66","hashOfConfig":"54"},{"size":4080,"mtime":1643829236385,"results":"67","hashOfConfig":"54"},{"size":2809,"mtime":1635376107369,"results":"68","hashOfConfig":"54"},{"size":971,"mtime":1643829236385,"results":"69","hashOfConfig":"54"},{"size":4499,"mtime":1643829236385,"results":"70","hashOfConfig":"54"},{"size":9503,"mtime":1643829236385,"results":"71","hashOfConfig":"54"},{"size":164,"mtime":1643829236385,"results":"72","hashOfConfig":"54"},{"size":12108,"mtime":1645029454253,"results":"73","hashOfConfig":"54"},{"size":3229,"mtime":1643829236385,"results":"74","hashOfConfig":"54"},{"size":7243,"mtime":1671142621945,"results":"75","hashOfConfig":"54"},{"size":1379,"mtime":1645029454253,"results":"76","hashOfConfig":"54"},{"size":4431,"mtime":1645029454253,"results":"77","hashOfConfig":"54"},{"size":19816,"mtime":1643829236385,"results":"78","hashOfConfig":"54"},{"size":3297,"mtime":1643829236381,"results":"79","hashOfConfig":"54"},{"size":17707,"mtime":1650392091492,"results":"80","hashOfConfig":"54"},{"size":1233,"mtime":1650392091500,"results":"81","hashOfConfig":"54"},{"size":143309,"mtime":1645029454257,"results":"82","hashOfConfig":"54"},{"size":427,"mtime":1650392091500,"results":"83","hashOfConfig":"54"},{"size":1128,"mtime":1643829236389,"results":"84","hashOfConfig":"54"},{"size":744,"mtime":1643829236389,"results":"85","hashOfConfig":"54"},{"size":898,"mtime":1650392091500,"results":"86","hashOfConfig":"54"},{"size":1662,"mtime":1671141059696,"results":"87","hashOfConfig":"54"},{"size":1941,"mtime":1671141059696,"results":"88","hashOfConfig":"54"},{"size":652,"mtime":1671141059696,"results":"89","hashOfConfig":"54"},{"size":110,"mtime":1671141059696,"results":"90","hashOfConfig":"54"},{"size":102,"mtime":1671141059696,"results":"91","hashOfConfig":"54"},{"size":4063,"mtime":1671141059696,"results":"92","hashOfConfig":"54"},{"size":2812,"mtime":1671141059696,"results":"93","hashOfConfig":"54"},{"size":1818,"mtime":1671141059696,"results":"94","hashOfConfig":"54"},{"size":1231,"mtime":1671141059696,"results":"95","hashOfConfig":"54"},{"size":504,"mtime":1671141059696,"results":"96","hashOfConfig":"54"},{"size":6575,"mtime":1671141059696,"results":"97","hashOfConfig":"54"},{"size":932,"mtime":1671141059696,"results":"98","hashOfConfig":"54"},{"size":3637,"mtime":1671141059696,"results":"99","hashOfConfig":"54"},{"size":5984,"mtime":1671142652629,"results":"100","hashOfConfig":"54"},{"size":865,"mtime":1671141059696,"results":"101","hashOfConfig":"54"},{"size":1803,"mtime":1671141059696,"results":"102","hashOfConfig":"54"},{"size":2160,"mtime":1671141059696,"results":"103","hashOfConfig":"54"},{"size":1131,"mtime":1671141059696,"results":"104","hashOfConfig":"54"},{"size":1605,"mtime":1671141059696,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"13kotmx",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"115"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"115"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/runner/GabirReactFrontend/src/index.js",[],["214","215"],"/home/runner/GabirReactFrontend/src/serviceWorkerRegistration.js",[],"/home/runner/GabirReactFrontend/src/App.js",[],"/home/runner/GabirReactFrontend/src/Pages/MFT.tsx",[],["216","217"],"/home/runner/GabirReactFrontend/src/Pages/404.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Calendar.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Main.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/TeamPage.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/TeamsPage.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/GabirTV.tsx",["218"],"import Blank from '../Templates/Blank/index';\n\nconst GabirTV = () => {\n\tconst getViewers = async (user: { id: string, url: string }) => {\n\t\tvar res = await fetch(`https://api.twitch.tv/helix/streams?user_id=${user.id}`, {\n\t\t\theaders: new Headers({\n\t\t\t\t'Client-ID': 'v354nab7jsgctl2zww4ic69tc4l3hf',\n\t\t\t\t'Authorization': 'Bearer jkmoj86ctljekpx3xl7ix28iwmzyen'\n\t\t\t})\n\t\t})\n\t\t\n\t\tvar data = await res.json();\n\t\tif (data.data.length) {\n\t\t\tconsole.log(`${user.url} is Online!`)\n\t\t\twindow.location.href = user.url\n\t\t}\n\t}\n\treturn (\n\t\t<>\n\t\t\t<Blank title=\"GabirTV\" loading={false}>\n\n\t\t\t\t<h1 className=\"uk-width-1-2@m uk-text-center uk-margin-auto uk-margin-auto-vertical uk-animation-slide-top-small uk-container uk-display-block\">\n\t\t\t\t\t<img alt=\"Gabir Motors Logo\" src=\"img/newgabirtext.png\" style={{ height: 'auto', width: '30vw', minWidth: '300px', marginBottom: '60vh' }} />\n\t\t\t\t</h1>\n\n\t\t\t\t<h1 className=\"uk-position-center\">\n\t\t\t\t\ttest\n\t\t\t\t</h1>\n\t\t\t</Blank>\n\t\t</>\n\t)\n}\n\nexport default GabirTV","/home/runner/GabirReactFrontend/src/Pages/Pacecar.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Assets.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/QuoteSubmit.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Timeline.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Showoff.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/HaikuSubmit.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Standings.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Driveroftheday.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/TestingTemplates.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Tools/ColorTemplate.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Tools/Toolbox.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Tools/SpecMapping.tsx",["219","220","221"],"/home/runner/GabirReactFrontend/src/Pages/Tools/DownforceGuide.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Tools/ColorTemplateDownload.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Tutorial.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Constructors.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Gabirdle.tsx",["222","223","224","225","226","227","228","229","230","231","232"],"import Blank from '../Templates/Blank/index';\nimport { useState, useEffect } from 'react';\nimport allWords from '../utils/allwords';\nimport words from '../utils/gabirdleWords';\nimport useKeypress from '../utils/useKeypress';\n\ninterface GameState {\n\tguessRow: \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\";\n\trows: {\n\t\t\"0\": string[];\n\t\t\"1\": string[];\n\t\t\"2\": string[];\n\t\t\"3\": string[];\n\t\t\"4\": string[];\n\t\t\"5\": string[];\n\t};\n\tinSpot: string[];\n\tinWord: string[];\n\tnotInWord: string[];\n}\n\nconst Gabirdle = () => {\n\tconst [gameState, setGameState] = useState<GameState>({\n\t\tguessRow: \"0\",\n\t\trows: {\n\t\t\t\"0\": [\"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"1\": [\"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"2\": [\"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"3\": [\"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"4\": [\"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"5\": [\"\", \"\", \"\", \"\", \"\"]\n\t\t},\n\t\tinSpot: [],\n\t\tinWord: [],\n\t\tnotInWord: []\n\t})\n\n\t/*\n\t\tc - Correct / in spot\n\t\ti - in word\n\t\tn - not in word\n\t*/\n\tconst [evaluations,setEvaluations] = useState<string[][]>([\n\t\t[],\n\t\t[],\n\t\t[],\n\t\t[],\n\t\t[],\n\t\t[]\n\t]);\n\t\n\tconst [keysRow1, setKeysRow1] = useState([\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"])\n\tconst [keysRow2, setKeysRow2] = useState([\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"])\n\tconst [keysRow3, setKeysRow3] = useState([\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"])\n\tconst [state, setState] = useState(\"PLAYING\");\n    const [message, setMessage] = useState<string | null>(null);\n    const [shareMessage, setShareMessage] = useState(\"\");\n    const [shareButton, setShareButton] = useState(\"SHARE\");\n    const [nextTime, setNextTime] = useState(0);\n\n\tuseKeypress(['Enter', 'Backspace', ...keysRow1, ...keysRow2, ...keysRow3], (event: { key: string }) => {\n\t\tif (event.key === \"Backspace\") pressButton(\"del\");\n\t\telse if (event.key === \"Enter\") pressButton(\"enter\");\n\t\telse if (keysRow1.includes(event.key.toUpperCase()) || keysRow2.includes(event.key.toUpperCase()) || keysRow3.includes(event.key.toUpperCase())) {\n\t\t\tpressButton(event.key.toUpperCase())\n\t\t}\n\t});\n\n\t// const [wordToGuess, setWordToGuess] = useState(words[Math.floor(Math.random() * words.length)])\n\tconst [wordToGuess, setWordToGuess] = useState(words[0])\n\n\tconst endMessages = [\n\t\t[\n\t\t\t\"Genius!\",\n\t\t\t\"Suspiciously Good!\",\n\t\t\t\"That's Amazing!\",\n\t\t\t\"Rivaling the Speeds of Mike Racecar\"\n\t\t],\n\t\t[\n\t\t\t\"I Can't Believe you Did That...\",\n\t\t\t\"That's Impressive!\"\n\t\t],\n\t\t[\n\t\t\t\"A Very Good Game\",\n\t\t\t\"Wow!\",\n\t\t\t\"Nice!\"\n\t\t],\n\t\t[\n\t\t\t\"A Very Respectable Score\",\n\t\t\t\"Great Job!\"\n\t\t],\n\t\t[\n\t\t\t\"That was cutting it close!\",\n\t\t\t\"Good Save!\"\n\t\t],\n\t\t[\n\t\t\t\"I was starting to get worried!\"\n\t\t]\n\t]\n\n    function timeConverter(UNIX_timestamp:number){\n        var a = new Date(UNIX_timestamp * 1000);;\n        var year = a.getFullYear();\n        var month = a.getMonth() + 1 < 10 ? \"0\" + String(a.getMonth() + 1) : String(a.getMonth() + 1);\n        var date = \"0\" + a.getDate();\n        var hour = \"0\" + a.getHours();\n        var min = \"0\" + a.getMinutes();\n        var sec = \"0\" + a.getSeconds();\n        let _tz = new Date()!.toString()!.match(/([-\\+][0-9]+)\\s/)![1]\n        var s = `${year}-${month}-${date.substr(-2)}T${hour.substr(-2)}:${min.substr(-2)}:${sec.substr(-2)}${_tz}`\n        return s\n    }\n\n\tconst pressButton = (btn: string) => {\n\t\tif (state !== \"PLAYING\") return;\n        setMessage(null);\n\n\t\tif (btn !== \"enter\" && btn !== \"del\") {\n\t\t\tif (gameState.rows[gameState.guessRow].length < 6) {\n\t\t\t\tlet _temp = gameState.rows[gameState.guessRow]\n\t\t\t\tlet foundEmptySpace = null;\n\t\t\t\tfor (var i = 0; i < gameState.rows[gameState.guessRow].length; i++) {\n\t\t\t\t\tif (gameState.rows[gameState.guessRow][i] === \"\" && foundEmptySpace === null) {\n\t\t\t\t\t\tfoundEmptySpace = i;\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (foundEmptySpace === null) { return }\n\n\t\t\t\t_temp[foundEmptySpace] = btn;\n\t\t\t\tsetGameState({ ...gameState, rows: { ...gameState.rows, [gameState.guessRow]: _temp } })\n\t\t\t}\n\t\t} else if (btn === \"del\") {\n\t\t\tif (gameState.rows[gameState.guessRow].length > 0) {\n\t\t\t\tlet _temp = gameState.rows[gameState.guessRow]\n\t\t\t\tlet foundEmptySpace = 5;\n\t\t\t\tfor (var i = 0; i < gameState.rows[gameState.guessRow].length; i++) {\n\t\t\t\t\tif (gameState.rows[gameState.guessRow][i] === \"\" && foundEmptySpace === 5) {\n\t\t\t\t\t\tfoundEmptySpace = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t_temp[foundEmptySpace - 1] = \"\";\n\t\t\t\tsetGameState({ ...gameState, rows: { ...gameState.rows, [gameState.guessRow]: _temp } })\n\t\t\t}\n\t\t} else if (btn === \"enter\") {\n\t\t\t// Enter Guess\n\t\t\tlet userGuess = gameState.rows[gameState.guessRow].join(\"\").toLowerCase();\n\t\t\tif (userGuess.length !== 5) return setMessage(\"Guess Must be 5 Letters\");\n\t\t\tif (!(allWords.includes(userGuess) || words.includes(userGuess))) {\n\t\t\t\treturn setMessage(\"That is Not a Valid Word\")\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Guessing: \" + userGuess);\n\n\t\t\t\tlet _split = gameState.rows[gameState.guessRow];\n\t\t\t\tfor (var letter in _split) {\n\t\t\t\t\tlet _l = _split[letter];\n\t\t\t\t\tif (_l.toLowerCase() === wordToGuess.toLowerCase()[letter]) {\n\t\t\t\t\t\t//In Spot\n\t\t\t\t\t\tlet _temp = gameState.inSpot;\n\t\t\t\t\t\tif (!_temp.includes(_l)) {\n\t\t\t\t\t\t\t_temp.push(_l)\n\t\t\t\t\t\t\tsetGameState({ ...gameState, inSpot: _temp })\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (wordToGuess.toLowerCase().split(\"\").includes(_l.toLowerCase())) {\n\t\t\t\t\t\t// In Word\n\t\t\t\t\t\tlet _temp = gameState.inWord;\n\t\t\t\t\t\tif (!_temp.includes(_l)) {\n\t\t\t\t\t\t\t_temp.push(_l)\n\t\t\t\t\t\t\tsetGameState({ ...gameState, inWord: _temp })\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (_l) {\n\t\t\t\t\t\t// None\n\t\t\t\t\t\tlet _temp = gameState.notInWord;\n\t\t\t\t\t\tif (!_temp.includes(_l)) {\n\t\t\t\t\t\t\t_temp.push(_l)\n\t\t\t\t\t\t\tsetGameState({ ...gameState, notInWord: _temp })\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet _t = evaluations\n\t\t\t\tlet _toAdd = [\"n\", \"n\", \"n\", \"n\", \"n\"];\n\t\t\t\tlet _splitWord = wordToGuess.toUpperCase().split(\"\");\n\t\t\t\tlet _userGuess = [...gameState.rows[gameState.guessRow]];\n\n\t\t\t\t// Check for letter in the correct spot\n\t\t\t\tconsole.log(\"Looking for letters in the right spot\")\n\t\t\t\tfor (var i = 0; i < _splitWord.length; i ++) {\n\t\t\t\t\tif (_splitWord[i] === _userGuess[i]) {\n\t\t\t\t\t\t_splitWord[i] = \"_\";\n                        _userGuess[i] = \"-\";\n\t\t\t\t\t\t_toAdd[i] = \"c\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t// Check for letters in the word\t\n\t\t\t\tconsole.log(\"Looking for letters in the word\")\n\t\t\t\tfor (var i = 0; i < _userGuess.length; i ++) {\n\t\t\t\t\tif (_splitWord.includes(_userGuess[i])) {\n\t\t\t\t\t\t_splitWord[_splitWord.indexOf(_userGuess[i])] = \"_\";\n                        _userGuess[i] = \"-\";\n\t\t\t\t\t\t_toAdd[i] = \"i\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t_t[Number(gameState.guessRow)] = _toAdd;\n\t\t\t\tsetEvaluations(_t)\n                let _lw = true\n\n                if (userGuess === wordToGuess) {\n\t\t\t\t\tsetState(\"WIN\")\n\t\t\t\t\tsetMessage(endMessages[Number(gameState.guessRow)][Math.floor(Math.random() * endMessages[Number(gameState.guessRow)].length)])\n\t\t\t\t} else {\n                    switch (gameState.guessRow) {\n                        case \"0\": setGameState({ ...gameState, guessRow: \"1\" }); break;\n                        case \"1\": setGameState({ ...gameState, guessRow: \"2\" }); break;\n                        case \"2\": setGameState({ ...gameState, guessRow: \"3\" }); break;\n                        case \"3\": setGameState({ ...gameState, guessRow: \"4\" }); break;\n                        case \"4\": setGameState({ ...gameState, guessRow: \"5\" }); break;\n                        case \"5\":\n                            if (userGuess !== wordToGuess) {\n                                setMessage(\"The word was: \" + wordToGuess.toUpperCase())\n                                setState(\"LOSE\")\n                                _lw = false;\n                                break;\n                            }\n                    }\n                }\n\n                if (userGuess === wordToGuess || gameState.guessRow === \"5\") {\n\t\t\t\t\tconsole.log(\"Making Share Message...\")\n                    var _tempMessage = `Gabirdle ${!_lw ? \"X\" : Number(gameState.guessRow) + 1}/6`;\n                    Object.values(gameState.rows).map((row, j) => {\n                        if (row) _tempMessage += '\\n';\n                        row.map((letter, i) => {\n                            if (j < Number(gameState.guessRow) + 1) {\n                                if (letter.toLowerCase() === wordToGuess.toLowerCase()[i]) {\n                                    return _tempMessage += '🟩';\n                                } else if (wordToGuess.toLowerCase().split(\"\").includes(letter.toLowerCase())) {\n                                    return _tempMessage += '🟨';\n                                } else {\n                                    return _tempMessage += '⬛';\n                                }\n                            }\n                        })\n                    })\n                    setShareMessage(_tempMessage);\n\n                    let menuButton = document.getElementById(\"menuButton\") as HTMLButtonElement;\n                    menuButton.click();\n\n\t\t\t\t\tconsole.log(\"Setting Local Storage...\")\n\t\t\t\t\tlocalStorage.setItem(\"lastGame\", JSON.stringify({\n\t\t\t\t\t\tgameState,\n\t\t\t\t\t\tevaluations,\n\t\t\t\t\t\tstate: (userGuess === wordToGuess ? \"WIN\" : \"LOSE\"),\n\t\t\t\t\t\twordToGuess,\n\t\t\t\t\t\tshareMessage: _tempMessage\n\t\t\t\t\t}))\n                }\n\n\t\t\t}\n\t\t}\n\t}\n\n    const wordTimes = [\n\t\t1645759800, 1645760700,\n\t\t1645761600, 1645762500,\n\t\t1645763400, 1645764300,\n\t\t1645765200, 1645766100,\n\t\t1645767000, 1645767900,\n\t\t1645768800, 1645769700,\n\t\t1645770600, 1645771500,\n\t\t1645772400\n\t  ]\n\n    // const wordTimes = [\n\t// \t1645147920, 1645147980, 1645148040, 1645148100,\n\t// \t1645148160, 1645148220, 1645148280, 1645148340,\n\t// \t1645148400, 1645148460, 1645148520, 1645148580,\n\t// \t1645148640, 1645148700, 1645148760, 1645148820,\n\t// \t1645148880, 1645148940, 1645149000, 1645149060,\n\t// \t1645149120, 1645149180, 1645149240, 1645149300,\n\t// \t1645149360, 1645149420, 1645149480, 1645149540,\n\t// \t1645149600, 1645149660, 1645149720, 1645149780,\n\t// \t1645149840, 1645149900, 1645149960, 1645150020,\n\t// \t1645150080, 1645150140, 1645150200, 1645150260,\n\t// \t1645150320, 1645150380, 1645150440, 1645150500,\n\t// \t1645150560, 1645150620, 1645150680, 1645150740,\n\t// \t1645150800, 1645150860\n\t//   ]\n\n    useEffect(() => {\n        \n        var done = false;\n\t\t\n\t\tconsole.log(\"Finding when then next word is\")\n\n        for (var i = 0; i < wordTimes.length; i ++) {\n            if (wordTimes[i] * 1000 > Date.now() && !done) {\n                done = true;\n                setNextTime(i);\n\t\t\t\tsetWordToGuess(words[i])\n            }\n        }\n    }, [])\n\n\tuseEffect(() => {\n\t\tconsole.log(\"Looking for gamedata in local storage\")\n\t\tvar _dataFromLocalStorage = localStorage.getItem(\"lastGame\");\n\t\tif (_dataFromLocalStorage !== null) { \n\t\t\tlet _d = JSON.parse(_dataFromLocalStorage)\n\t\t\tconsole.log(\"found gamedata in local storage\")\n\t\t\tif (_d.wordToGuess === wordToGuess) {\n\t\t\t\tsetGameState(_d!.gameState);\n\t\t\t\tsetEvaluations(_d!.evaluations);\n\t\t\t\tsetState(_d!.state);\n\t\t\t\tsetShareMessage(_d!.shareMessage);\n\t\t\t} else {\n\t\t\t\tsetGameState({\n\t\t\t\t\tguessRow: \"0\",\n\t\t\t\t\trows: {\n\t\t\t\t\t\t\"0\": [\"\", \"\", \"\", \"\", \"\"],\n\t\t\t\t\t\t\"1\": [\"\", \"\", \"\", \"\", \"\"],\n\t\t\t\t\t\t\"2\": [\"\", \"\", \"\", \"\", \"\"],\n\t\t\t\t\t\t\"3\": [\"\", \"\", \"\", \"\", \"\"],\n\t\t\t\t\t\t\"4\": [\"\", \"\", \"\", \"\", \"\"],\n\t\t\t\t\t\t\"5\": [\"\", \"\", \"\", \"\", \"\"]\n\t\t\t\t\t},\n\t\t\t\t\tinSpot: [],\n\t\t\t\t\tinWord: [],\n\t\t\t\t\tnotInWord: []\n\t\t\t\t});\n\t\t\t\tsetEvaluations([[],[],[],[],[],[]]);\n\t\t\t\tsetState(\"PLAYING\");\n\t\t\t\tsetShareMessage(\"\");\n\t\t\t}\n\t\t}\t\n\t}, [wordToGuess])\n\n\tuseEffect(() => {\n\t\tconsole.log(\"State: \" + state)\n\t}, [state])\n\n\treturn (\n\t\t<>\n\t\t\t<Blank title=\"Gabirdle\" loading={false}>\n\t\t\t\t<div id=\"shareMenu\" uk-offcanvas=\"flip: true; overlay: true\">\n\t\t\t\t\t<div className=\"uk-offcanvas-bar\">\n\n\t\t\t\t\t\t<button className=\"uk-offcanvas-close\" type=\"button\" uk-close=\"true\"></button>\n                        \n                        <div className=\"uk-child-width-1-4 uk-text-center\" uk-grid = \"true\" uk-scrollspy=\"cls: uk-animation-slide-top-medium; target: .fade-cd; delay: 100; repeat: false\" uk-countdown={`date: ` + timeConverter(wordTimes[nextTime])} uk-parallax=\"blur: 15;\">\n                            <div className = \"uk-width-1-1\">\n                                <h1 className = \"fade-cd uk-text-center uk-display-block\">NEXT WORD IN</h1>\n                            </div>\n                            <div className = \"fade-cd\">\n                                <span className=\"acumin uk-countdown-number uk-countdown-days\"></span>\n                                <div className=\"acumin uk-countdown-label\">Days</div>\n                            </div>\n                            <div className = \"fade-cd\">\n                                <span className=\"acumin uk-countdown-number uk-countdown-hours\"></span>\n                                <div className=\"acumin uk-countdown-label\">Hours</div>\n                            </div>\n                            <div className = \"fade-cd\">\n                                <span className=\"acumin uk-countdown-number uk-countdown-minutes\"></span>\n                                <div className=\"acumin uk-countdown-label\">Minutes</div>\n                            </div>\n                            <div className = \"fade-cd\">\n                                <span className=\"acumin uk-countdown-number uk-countdown-seconds\"></span>\n                                <div className=\"acumin uk-countdown-label\">Seconds</div>\n                            </div>\n                        </div>\n\n\t\t\t\t\t\t{state === \"PLAYING\" ? <h2>Finish Your Game to Share</h2> : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<h3>Gabirdle, {state === \"LOSE\" ? \"X\" : Number(gameState.guessRow) + 1}/6</h3>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tObject.values(gameState.rows).map((row, j) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t{row.map((letter, i) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (j < Number(gameState.guessRow) + 1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (letter.toLowerCase() === wordToGuess.toLowerCase()[i]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn '🟩'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (wordToGuess.toLowerCase().split(\"\").includes(letter.toLowerCase())) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn '🟨'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn '⬛'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t\t\t\t\t\t\t</span><br />\n\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n                        {state !== \"PLAYING\" ? <a id = \"share\" onClick = {() => {\n                            navigator.clipboard.writeText(shareMessage);\n                            setShareButton(\"COPIED\");\n                        }} uk-tooltip = \"Share\" className = \"uk-button uk-button-default\" href = \"#share\">{ shareButton }</a> : \"\"}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"game\">\n                    { message !== null ? (\n                        <span id = \"message\">{ message }</span>\n                    ) : \"\"}\n\t\t\t\t\t<div id=\"guesses\">\n\t\t\t\t\t\t{/* <button className=\"uk-button uk-button-default\" uk-toggle=\"target: #shareMenu\">Menu</button> */}\n                        <div id = \"header\">\n                            <img id = \"logo\" src=\"https://i.gabirmotors.com/assets/other/gabirdle_logo.png\" alt=\"Gabirdle Logo\"/>\n                            <button className=\"menuButton\" id = \"menuButton\" uk-toggle=\"target: #shareMenu\"><span uk-icon=\"icon: cog; ratio: 2.5\"></span></button>\n                        </div>\n\t\t\t\t\t\t{Object.values(gameState.rows).map((row, j) => {\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div id={`row${j + 1}`} className=\"row\" uk-scrollspy={`cls: ${((Number(gameState.guessRow) > j || (state === \"WIN\" && Number(gameState.guessRow) + 1 > j)) ? \" uk-animation-scale-up\" : \"uk-animation-slide-top-small\")}; target: .square,.in-spot,.in-word; delay: ${(Number(gameState.guessRow) > j ? \"100\" : \"50\")};; repeat: true`}>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t{row.map((letter, i) => {\n\t\t\t\t\t\t\t\t\t\tlet _classes = \"square \"\n\n\t\t\t\t\t\t\t\t\t\tif (evaluations[j] !== null) {\n\t\t\t\t\t\t\t\t\t\t \tif (evaluations[j][i] === \"c\") {\n\t\t\t\t\t\t\t\t\t\t\t\t_classes += \" in-spot\"\n\t\t\t\t\t\t\t\t\t\t\t} else if (evaluations[j][i] === \"i\") {\n\t\t\t\t\t\t\t\t\t\t\t\t_classes += \" in-word\"\n\t\t\t\t\t\t\t\t\t\t\t} else if (evaluations[j][i] === \"n\") {\n\t\t\t\t\t\t\t\t\t\t\t\t_classes += \" not-in-word\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<div id={`square${i + 1}`} className={_classes}>\n\t\t\t\t\t\t\t\t\t\t\t\t{letter}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div id=\"keyboard\" className=\"\">\n\t\t\t\t\t\t<div id=\"row1\" className=\"row\">\n\t\t\t\t\t\t\t{keysRow1.map((key, i) => {\n\t\t\t\t\t\t\t\tlet _classes = \"\";\n\t\t\t\t\t\t\t\tif (gameState.inSpot.includes(key)) _classes += \"in-spot\";\n\t\t\t\t\t\t\t\telse if (gameState.inWord.includes(key)) _classes += \"in-word\";\n\t\t\t\t\t\t\t\telse if (gameState.notInWord.includes(key)) _classes += \"not-in-word\";\n\t\t\t\t\t\t\t\treturn <button onClick={() => { pressButton(key) }} className={_classes}>{key}</button>\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div id=\"row2\" className=\"row\">\n\t\t\t\t\t\t\t{keysRow2.map((key, i) => {\n\t\t\t\t\t\t\t\tlet _classes = \"\";\n\t\t\t\t\t\t\t\tif (gameState.inSpot.includes(key)) _classes += \"in-spot\";\n\t\t\t\t\t\t\t\telse if (gameState.inWord.includes(key)) _classes += \"in-word\";\n\t\t\t\t\t\t\t\telse if (gameState.notInWord.includes(key)) _classes += \"not-in-word\";\n\t\t\t\t\t\t\t\treturn <button onClick={() => { pressButton(key) }} className={_classes}>{key}</button>\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div id=\"row3\" className=\"row\">\n\t\t\t\t\t\t\t<button className=\"big\" onClick={() => { pressButton(\"enter\") }}><span uk-icon=\"icon: check; ratio: 2\"></span></button>\n\t\t\t\t\t\t\t{keysRow3.map((key, i) => {\n\t\t\t\t\t\t\t\tlet _classes = \"\";\n\t\t\t\t\t\t\t\tif (gameState.inSpot.includes(key)) _classes += \"in-spot\";\n\t\t\t\t\t\t\t\telse if (gameState.inWord.includes(key)) _classes += \"in-word\";\n\t\t\t\t\t\t\t\telse if (gameState.notInWord.includes(key)) _classes += \"not-in-word\";\n\t\t\t\t\t\t\t\treturn <button onClick={() => { pressButton(key) }} className={_classes}>{key}</button>\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t<button className=\"big\" onClick={() => { pressButton(\"del\") }}><span uk-icon=\"icon: arrow-left; ratio: 2\"></span></button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Blank>\n\t\t</>\n\t)\n}\n\nexport default Gabirdle;","/home/runner/GabirReactFrontend/src/utils/useKeypress.js",[],"/home/runner/GabirReactFrontend/src/utils/allwords.js",[],"/home/runner/GabirReactFrontend/src/utils/gabirdleWords.js",[],"/home/runner/GabirReactFrontend/src/Templates/Blank/index.tsx",[],"/home/runner/GabirReactFrontend/src/Templates/CenterCard/index.tsx",[],"/home/runner/GabirReactFrontend/src/utils/shimKeyboardEvent.js",[],"/home/runner/GabirReactFrontend/src/Components/Notification/index.tsx",[],"/home/runner/GabirReactFrontend/src/Components/Alert/index.tsx",[],"/home/runner/GabirReactFrontend/src/Components/index.ts",[],"/home/runner/GabirReactFrontend/src/Components/StandingsRow/index.ts",[],"/home/runner/GabirReactFrontend/src/Components/Decorations/index.ts",[],"/home/runner/GabirReactFrontend/src/Components/HaikuForm/index.js",[],"/home/runner/GabirReactFrontend/src/Components/QuoteForm/index.js",[],"/home/runner/GabirReactFrontend/src/Components/DriverCard/index.tsx",[],"/home/runner/GabirReactFrontend/src/Components/LoadingPage/index.tsx",[],"/home/runner/GabirReactFrontend/src/Components/Footer/index.tsx",[],"/home/runner/GabirReactFrontend/src/Components/Header/index.tsx",["233","234","235"],"/home/runner/GabirReactFrontend/src/Components/LoadingIcon/index.tsx",[],"/home/runner/GabirReactFrontend/src/Components/CalendarRow/index.tsx",[],"/home/runner/GabirReactFrontend/src/Components/CarFrame/index.tsx",["236","237","238","239","240","241"],"/home/runner/GabirReactFrontend/src/Components/ShareButton/index.tsx",[],"/home/runner/GabirReactFrontend/src/Components/StandingsRow/DriverRow/index.tsx",[],"/home/runner/GabirReactFrontend/src/Components/Decorations/Christmas/index.tsx",["242","243"],"/home/runner/GabirReactFrontend/src/Components/StandingsRow/TeamRow/index.tsx",[],"/home/runner/GabirReactFrontend/src/Components/Decorations/Fall/index.tsx",[],{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":4,"column":8,"nodeType":"250","messageId":"251","endLine":4,"endColumn":18},{"ruleId":"248","severity":1,"message":"252","line":25,"column":17,"nodeType":"250","messageId":"251","endLine":25,"endColumn":26},{"ruleId":"248","severity":1,"message":"253","line":31,"column":9,"nodeType":"250","messageId":"251","endLine":31,"endColumn":13},{"ruleId":"254","severity":1,"message":"255","line":62,"column":5,"nodeType":"256","endLine":62,"endColumn":18,"suggestions":"257"},{"ruleId":"248","severity":1,"message":"258","line":52,"column":19,"nodeType":"250","messageId":"251","endLine":52,"endColumn":30},{"ruleId":"248","severity":1,"message":"259","line":53,"column":19,"nodeType":"250","messageId":"251","endLine":53,"endColumn":30},{"ruleId":"248","severity":1,"message":"260","line":54,"column":19,"nodeType":"250","messageId":"251","endLine":54,"endColumn":30},{"ruleId":"261","severity":1,"message":"262","line":109,"column":53,"nodeType":"263","messageId":"264","endLine":109,"endColumn":54,"suggestions":"265"},{"ruleId":"266","severity":1,"message":"267","line":138,"column":14,"nodeType":"250","messageId":"268","endLine":138,"endColumn":15},{"ruleId":"266","severity":1,"message":"267","line":191,"column":14,"nodeType":"250","messageId":"268","endLine":191,"endColumn":15},{"ruleId":"266","severity":1,"message":"267","line":201,"column":14,"nodeType":"250","messageId":"268","endLine":201,"endColumn":15},{"ruleId":"269","severity":1,"message":"270","line":236,"column":64,"nodeType":"271","messageId":"272","endLine":236,"endColumn":66},{"ruleId":"269","severity":1,"message":"273","line":238,"column":45,"nodeType":"271","messageId":"274","endLine":238,"endColumn":47},{"ruleId":"254","severity":1,"message":"275","line":309,"column":8,"nodeType":"256","endLine":309,"endColumn":10,"suggestions":"276"},{"ruleId":"269","severity":1,"message":"273","line":387,"column":35,"nodeType":"271","messageId":"274","endLine":387,"endColumn":37},{"ruleId":"277","severity":1,"message":"278","line":55,"column":15,"nodeType":"279","endLine":55,"endColumn":72},{"ruleId":"277","severity":1,"message":"278","line":63,"column":15,"nodeType":"279","endLine":63,"endColumn":72},{"ruleId":"277","severity":1,"message":"278","line":70,"column":15,"nodeType":"279","endLine":70,"endColumn":72},{"ruleId":"248","severity":1,"message":"280","line":7,"column":5,"nodeType":"250","messageId":"251","endLine":7,"endColumn":19},{"ruleId":"254","severity":1,"message":"281","line":132,"column":8,"nodeType":"256","endLine":132,"endColumn":15,"suggestions":"282"},{"ruleId":"283","severity":1,"message":"284","line":140,"column":9,"nodeType":"279","endLine":140,"endColumn":98},{"ruleId":"283","severity":1,"message":"284","line":141,"column":9,"nodeType":"279","endLine":141,"endColumn":94},{"ruleId":"283","severity":1,"message":"284","line":142,"column":9,"nodeType":"279","endLine":142,"endColumn":98},{"ruleId":"283","severity":1,"message":"284","line":143,"column":9,"nodeType":"279","endLine":143,"endColumn":96},{"ruleId":"248","severity":1,"message":"285","line":1,"column":10,"nodeType":"250","messageId":"251","endLine":1,"endColumn":18},{"ruleId":"254","severity":1,"message":"286","line":49,"column":5,"nodeType":"256","endLine":49,"endColumn":7,"suggestions":"287"},"no-native-reassign",["288"],"no-negated-in-lhs",["289"],"@typescript-eslint/no-unused-vars","'getViewers' is assigned a value but never used.","Identifier","unusedVar","'setCopied' is assigned a value but never used.","'link' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'clearcoat', 'color', 'metal', and 'roughness'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLink' needs the current value of 'color'.","ArrayExpression",["290"],"'setKeysRow1' is assigned a value but never used.","'setKeysRow2' is assigned a value but never used.","'setKeysRow3' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["291","292"],"@typescript-eslint/no-redeclare","'i' is already defined.","redeclared","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has a missing dependency: 'wordTimes'. Either include it or remove the dependency array.",["293"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'updateInterval' is defined but never used.","React Hook useEffect has a missing dependency: 'drawCar'. Either include it or remove the dependency array.",["294"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'makeLeaf'. Either include it or remove the dependency array.",["295"],"no-global-assign","no-unsafe-negation",{"desc":"296","fix":"297"},{"messageId":"298","fix":"299","desc":"300"},{"messageId":"301","fix":"302","desc":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},"Update the dependencies array to be: [clearcoat, color, metal, roughness, toSetValues]",{"range":"310","text":"311"},"removeEscape",{"range":"312","text":"313"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"314","text":"315"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [wordTimes]",{"range":"316","text":"317"},"Update the dependencies array to be: [drawCar, props]",{"range":"318","text":"319"},"Update the dependencies array to be: [makeLeaf]",{"range":"320","text":"321"},[2441,2454],"[clearcoat, color, metal, roughness, toSetValues]",[2968,2969],"",[2968,2968],"\\",[10294,10296],"[wordTimes]",[5066,5073],"[drawCar, props]",[2067,2069],"[makeLeaf]"]