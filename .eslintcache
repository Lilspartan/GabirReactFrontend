[{"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/index.js":"1","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/App.js":"2","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/Assets.tsx":"3","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/TeamPage.tsx":"4","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/TeamsPage.tsx":"5","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/QuoteSubmit.tsx":"6","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/Showoff.tsx":"7","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/Tutorial.tsx":"8","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/404.tsx":"9","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/Main.tsx":"10","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/Calendar.tsx":"11","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/HaikuSubmit.tsx":"12","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/Timeline.tsx":"13","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/Driveroftheday.tsx":"14","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/Standings.tsx":"15","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/QuoteForm.js":"16","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/HaikuForm.js":"17","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/InfoTab.tsx":"18","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/Footer.tsx":"19","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/Race.tsx":"20","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/Row.tsx":"21","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/Header.tsx":"22","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/Loading.tsx":"23","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/LoadingIcon.tsx":"24","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/RightTab.tsx":"25","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/RightTabLink.tsx":"26"},{"size":220,"mtime":1628029139420,"results":"27","hashOfConfig":"28"},{"size":1577,"mtime":1628030441164,"results":"29","hashOfConfig":"28"},{"size":4511,"mtime":1627055172838,"results":"30","hashOfConfig":"28"},{"size":4681,"mtime":1627055172840,"results":"31","hashOfConfig":"28"},{"size":3845,"mtime":1627054804663,"results":"32","hashOfConfig":"28"},{"size":1471,"mtime":1627054804661,"results":"33","hashOfConfig":"28"},{"size":2809,"mtime":1627054804661,"results":"34","hashOfConfig":"28"},{"size":16557,"mtime":1627054804664,"results":"35","hashOfConfig":"28"},{"size":1221,"mtime":1628029139416,"results":"36","hashOfConfig":"28"},{"size":16872,"mtime":1628029139418,"results":"37","hashOfConfig":"28"},{"size":2651,"mtime":1628029139416,"results":"38","hashOfConfig":"28"},{"size":1045,"mtime":1628029139417,"results":"39","hashOfConfig":"28"},{"size":3784,"mtime":1628029139418,"results":"40","hashOfConfig":"28"},{"size":9321,"mtime":1628030459758,"results":"41","hashOfConfig":"28"},{"size":4512,"mtime":1628029139418,"results":"42","hashOfConfig":"28"},{"size":2810,"mtime":1627054804705,"results":"43","hashOfConfig":"28"},{"size":4061,"mtime":1628029139419,"results":"44","hashOfConfig":"28"},{"size":830,"mtime":1623716268212,"results":"45","hashOfConfig":"28"},{"size":504,"mtime":1627054804682,"results":"46","hashOfConfig":"28"},{"size":2854,"mtime":1627054804706,"results":"47","hashOfConfig":"28"},{"size":1793,"mtime":1627055172842,"results":"48","hashOfConfig":"28"},{"size":5407,"mtime":1628029209717,"results":"49","hashOfConfig":"28"},{"size":1225,"mtime":1628029139420,"results":"50","hashOfConfig":"28"},{"size":932,"mtime":1628029139420,"results":"51","hashOfConfig":"28"},{"size":335,"mtime":1627054804707,"results":"52","hashOfConfig":"28"},{"size":662,"mtime":1623716268215,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"o2i8dw",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/index.js",[],["109","110"],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/App.js",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/Assets.tsx",[],["111","112"],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/TeamPage.tsx",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/TeamsPage.tsx",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/QuoteSubmit.tsx",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/Showoff.tsx",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/Tutorial.tsx",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/404.tsx",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/Main.tsx",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/Calendar.tsx",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/HaikuSubmit.tsx",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/Timeline.tsx",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/Driveroftheday.tsx",["113","114","115","116","117","118","119","120","121"],"import { Link } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\nimport LoadingIcon from '../components/LoadingIcon'\nimport axios from \"axios\";\nimport { withRouter } from 'react-router-dom';\nimport qs from 'qs';\n\ntype Driver = {\n    Username:  string;\n    CarNumber: string\n    UserID:    number;\n    votes:     number;\n    id:        string;\n}\n\ntype User = {\n    email: string,\n    picture: string\n}\n\nconst Driveroftheday = (props: any) => {\n\n    /*\n        Steps:\n        \n        1. Check to see if vote is currently active\n        2. Check if the user is logged in, if yes skip to step 4\n        3. Display Twitch Sign In button\n        4. Check if the user has already voted, if yes skip to step 6\n        5. DIsplay the driver that the user voted for\n        6. Display the vote form\n\n        Possible Display States:\n\n        CHECKING - Getting the state\n        NO_VOTING_REDIRECT - vote is not active, redirect to main page\n        NOT_LOGGED_IN - Display the twitch log in button\n        ALREADY_VOTED - Display the previous voted\n        HAS_NOT_VOTED - Display the form\n    */\n\n    // List of drivers that can be voted for \n    const [drivers, setDrivers] = useState<Driver[]>([])\n\n    // Wether the user has voted yet or not\n    const [alreadyVoted, setAlreadyVoted] = useState(false);\n\n    // The driver the user has already voted for or undefined\n    const [voted, setVoted] = useState<Driver>()\n\n    // The twitch user with email to ensure no duplicate votes, and picture to display the user\n    const [twitchUser, setTwitchUser] = useState<User>({\n        email: \"\",\n        picture: \"\"\n    });\n\n    // Save the display state\n    const [displayState, setDisplayState] = useState(\"CHECKING\")\n\n    var token = (qs.parse(props.location.hash, { ignoreQueryPrefix: true })[`#access_token`])\n\n    const [chosenDriver, setChosenDriver] = useState<Driver>()\n\n    useEffect(() => {\n        (async() => {\n            // STEP 1: Check if the vote is active\n            var res = await fetch('https://streaming.gabirmotors.com/dodotd');\n            var d = await res.json();\n    \n            if (res.status === 200) {\n                if (!d.do) {\n                    // If the vote is not active, go to the main page\n                    setDisplayState(\"NO_VOTING_REDIRECT\")\n                    props.history.push(\"/\");\n                } else {\n                    if (!token) {\n                        // Not Logged In\n                        setDisplayState(\"NOT_LOGGED_IN\")\n                    } else {\n                        // Logged In\n                        var res = await fetch('https://id.twitch.tv/oauth2/userinfo', {\n                            headers: new Headers({\n                                \"Authorization\": `Bearer ${token}`\n                            })\n                        })\n                        var userData:User = await res.json()\n                        if (res.status !== 200) {\n                            // Invalid token\n                            setDisplayState(\"NOT_LOGGED_IN\")\n                        }\n                        await setTwitchUser(userData)\n                    }\n                }\n            }\n\n            var res = await fetch('https://streaming.gabirmotors.com/dotd');\n            const data:Driver[] = await res.json()\n            setDrivers(data)\n        })()\n    }, [])\n\n    useEffect(() => {\n        axios\n        .post('https://streaming.gabirmotors.com/dotd/checkvoted', { email: twitchUser.email })\n        .then(res => {\n            console.log(res.data)\n            if (res.data?.message == \"ALREADY_VOTED\") {\n                console.log(res.data)\n                setVoted(res.data.data.driver)\n                setAlreadyVoted(true);\n                setDisplayState(\"ALREADY_VOTED\")\n            } else {\n                setDisplayState(\"HAS_NOT_VOTED\")\n            }\n            \n            //window.location.reload();\n        })\n        .catch(e => {\n            alert('There was an error, try again later!')\n            console.log(e)\n        })\n    }, [twitchUser])\n\n    const onChange = (e:any) => {\n        setChosenDriver(drivers[e.target.value])\n    }\n\n    const onSubmit = () => {\n        if (chosenDriver !== undefined && chosenDriver.id !== undefined) {\n            axios\n                .post('https://streaming.gabirmotors.com/dotd/vote', { id: chosenDriver.id, email: twitchUser.email })\n                .then(res => {\n                    if (res.data?.message == \"ALREADY_VOTED\") {\n                        console.log(res.data)\n                        setVoted(res.data.data.driver)\n                        setAlreadyVoted(true);\n                    } else {\n                        setDisplayState(\"ALREADY_VOTED\");\n                        setVoted(chosenDriver)\n                        setAlreadyVoted(true);\n                    }\n                    \n                    //window.location.reload();\n                })\n                .catch(e => {\n                    alert('There was an error, try again later!')\n                    console.log(e)\n                })\n        }\n    }\n\n    return (\n        <>\n            <Header title = \"Gabir Motors | Driver of the Day\" />\n            <div className=\"uk-height-large uk-background-fixed uk-light uk-flex uk-background-cover\" style={{backgroundImage: 'url(img/gabir_bg.jpg)', height: '100vh'}}>\n\n                <div className=\"uk-width-1-2@m uk-text-center uk-margin-auto uk-margin-auto-vertical uk-animation-slide-top-small uk-container\">\n                    <div className=\"uk-margin uk-width-large uk-margin-auto uk-card uk-card-secondary uk-card-body uk-box-shadow-large\">\n                        {displayState === \"NOT_LOGGED_IN\" && (\n                            <>\n                                <h1>Sign in to vote</h1>\n                                <div className=\"uk-margin\">\n                                    <a href='https://id.twitch.tv/oauth2/authorize?client_id=6gfpjegdkmcmepffbvh4vfp8s9vd13&redirect_uri=https://gabirmotors.com/vote&response_type=token+id_token&scope=user:read:email+openid&claims={ \"id_token\": { \"email\": null, \"email_verified\": null }, \"userinfo\": { \"picture\": null, \"email\": null } }' className = \"uk-button uk-button-primary\" style = {{ backgroundColor: '#6441a5', color: 'white' }}>Sign in with <span uk-icon = \"icon:twitch; ratio: 1.4\"></span></a>\n                                </div>\n                            </>\n                        )}\n                        \n                        {(displayState === \"ALREADY_VOTED\" || displayState === \"HAS_NOT_VOTED\") && (\n                            <>\n                                <Link to=\"/\" className=\"uk-card-title uk-text-center\">\n                                    <img src = \"img/logo.png\" alt = \"GM logo\" style = {{width: '10vw', height: 'auto', minWidth: '200px', }}/>\n                                </Link>\n                                <h3 className = \"acumin\"><img src={twitchUser.picture} style = {{ width: '5vw'}}/></h3>\n                            </> \n                        )}\n\n\n                        {\n                            (displayState === \"HAS_NOT_VOTED\") && (\n                                <>\n                                    <h1>Driver of the Day Vote</h1>\n                                    <div className=\"uk-margin\">\n                                        <div uk-form-custom=\"target: > * > span:first-child\">\n                                            <select onChange = {onChange}>\n                                                <option value=\"\">Please select...</option>\n                                                \n                                                {drivers.map((d, i) => (\n                                                    <>\n                                                        <option key = {i} value={i}>#{d.CarNumber} {d.Username}</option>\n                                                    </>\n                                                ))}\n                                            </select>\n                                            <button className=\"uk-button uk-button-default\" type=\"button\">\n                                                <span></span>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <div className = \"uk-margin\">\n                                        <a className = \"uk-text-success\" onClick = {onSubmit}>Submit Vote</a>\n                                    </div>\n                                </>\n                            )\n                        }\n\n                        {\n                            (displayState === \"ALREADY_VOTED\") && (\n                                <>\n                                    <h2>You Have Already Voted For:</h2>\n                                    <h3>#{voted?.CarNumber} {voted?.Username}</h3>\n                                </> \n                            )\n                        }\n                        \n                    </div>\n                </div>\n                <Footer />\n            </div>\n        </>\n    )\n}\n\nexport default withRouter(Driveroftheday);","/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/Pages/Standings.tsx",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/QuoteForm.js",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/HaikuForm.js",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/InfoTab.tsx",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/Footer.tsx",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/Race.tsx",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/Row.tsx",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/Header.tsx",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/Loading.tsx",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/LoadingIcon.tsx",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/RightTab.tsx",[],"/home/gabekrahulik/projects/GabirMotorsReactFrontEnd/src/components/RightTabLink.tsx",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":19},{"ruleId":"126","severity":1,"message":"130","line":48,"column":12,"nodeType":"128","messageId":"129","endLine":48,"endColumn":24},{"ruleId":"131","severity":1,"message":"132","line":83,"column":29,"nodeType":"128","messageId":"133","endLine":83,"endColumn":32},{"ruleId":"131","severity":1,"message":"132","line":98,"column":17,"nodeType":"128","messageId":"133","endLine":98,"endColumn":20},{"ruleId":"134","severity":1,"message":"135","line":102,"column":8,"nodeType":"136","endLine":102,"endColumn":10,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":109,"column":35,"nodeType":"140","messageId":"141","endLine":109,"endColumn":37},{"ruleId":"138","severity":1,"message":"139","line":135,"column":43,"nodeType":"140","messageId":"141","endLine":135,"endColumn":45},{"ruleId":"142","severity":1,"message":"143","line":175,"column":58,"nodeType":"144","endLine":175,"endColumn":115},{"ruleId":"145","severity":1,"message":"146","line":201,"column":41,"nodeType":"144","endLine":201,"endColumn":95},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"@typescript-eslint/no-unused-vars","'LoadingIcon' is defined but never used.","Identifier","unusedVar","'alreadyVoted' is assigned a value but never used.","@typescript-eslint/no-redeclare","'res' is already defined.","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.history' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["149"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},"Update the dependencies array to be: [props.history, token]",{"range":"152","text":"153"},[3444,3446],"[props.history, token]"]