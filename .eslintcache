[{"/home/runner/GabirReactFrontend/src/index.js":"1","/home/runner/GabirReactFrontend/src/App.js":"2","/home/runner/GabirReactFrontend/src/serviceWorkerRegistration.js":"3","/home/runner/GabirReactFrontend/src/Pages/404.tsx":"4","/home/runner/GabirReactFrontend/src/Pages/Calendar.tsx":"5","/home/runner/GabirReactFrontend/src/Pages/Main.tsx":"6","/home/runner/GabirReactFrontend/src/Pages/TeamsPage.tsx":"7","/home/runner/GabirReactFrontend/src/Pages/TeamPage.tsx":"8","/home/runner/GabirReactFrontend/src/Pages/Assets.tsx":"9","/home/runner/GabirReactFrontend/src/Pages/Showoff.tsx":"10","/home/runner/GabirReactFrontend/src/Pages/QuoteSubmit.tsx":"11","/home/runner/GabirReactFrontend/src/Pages/HaikuSubmit.tsx":"12","/home/runner/GabirReactFrontend/src/Pages/Timeline.tsx":"13","/home/runner/GabirReactFrontend/src/Pages/Tutorial.tsx":"14","/home/runner/GabirReactFrontend/src/Pages/Driveroftheday.tsx":"15","/home/runner/GabirReactFrontend/src/Pages/Standings.tsx":"16","/home/runner/GabirReactFrontend/src/Pages/Constructors.tsx":"17","/home/runner/GabirReactFrontend/src/Pages/Tools/SpecMapping.tsx":"18","/home/runner/GabirReactFrontend/src/components/HaikuForm.js":"19","/home/runner/GabirReactFrontend/src/components/QuoteForm.js":"20","/home/runner/GabirReactFrontend/src/components/Footer.tsx":"21","/home/runner/GabirReactFrontend/src/components/Header.tsx":"22","/home/runner/GabirReactFrontend/src/components/Race.tsx":"23","/home/runner/GabirReactFrontend/src/components/LoadingIcon/Loading.tsx":"24","/home/runner/GabirReactFrontend/src/components/Alert/index.tsx":"25","/home/runner/GabirReactFrontend/src/components/Notification/index.tsx":"26","/home/runner/GabirReactFrontend/src/components/StandingsRow/Row.tsx":"27","/home/runner/GabirReactFrontend/src/components/StandingsRow/TeamRow.tsx":"28","/home/runner/GabirReactFrontend/src/components/ShareButton.tsx":"29","/home/runner/GabirReactFrontend/src/components/RightTab/RightTab.tsx":"30","/home/runner/GabirReactFrontend/src/components/Decorations/Fall.tsx":"31","/home/runner/GabirReactFrontend/src/utils/useWindowDimensions.ts":"32"},{"size":336,"mtime":1635376107373,"results":"33","hashOfConfig":"34"},{"size":2762,"mtime":1635376107369,"results":"35","hashOfConfig":"34"},{"size":5064,"mtime":1635376107373,"results":"36","hashOfConfig":"34"},{"size":1221,"mtime":1635376107369,"results":"37","hashOfConfig":"34"},{"size":2735,"mtime":1635376107369,"results":"38","hashOfConfig":"34"},{"size":19169,"mtime":1635959188549,"results":"39","hashOfConfig":"34"},{"size":3639,"mtime":1635376107369,"results":"40","hashOfConfig":"34"},{"size":4681,"mtime":1635376107369,"results":"41","hashOfConfig":"34"},{"size":7034,"mtime":1635376107369,"results":"42","hashOfConfig":"34"},{"size":2809,"mtime":1635376107369,"results":"43","hashOfConfig":"34"},{"size":1046,"mtime":1635376107369,"results":"44","hashOfConfig":"34"},{"size":1045,"mtime":1635376107369,"results":"45","hashOfConfig":"34"},{"size":4019,"mtime":1635376107369,"results":"46","hashOfConfig":"34"},{"size":19819,"mtime":1635376107369,"results":"47","hashOfConfig":"34"},{"size":9540,"mtime":1635376107369,"results":"48","hashOfConfig":"34"},{"size":4529,"mtime":1635376107369,"results":"49","hashOfConfig":"34"},{"size":4341,"mtime":1635376107369,"results":"50","hashOfConfig":"34"},{"size":11459,"mtime":1635958775884,"results":"51","hashOfConfig":"34"},{"size":4063,"mtime":1635376107369,"results":"52","hashOfConfig":"34"},{"size":2812,"mtime":1635376107369,"results":"53","hashOfConfig":"34"},{"size":504,"mtime":1635376107369,"results":"54","hashOfConfig":"34"},{"size":6918,"mtime":1635791103702,"results":"55","hashOfConfig":"34"},{"size":4957,"mtime":1635376107369,"results":"56","hashOfConfig":"34"},{"size":1225,"mtime":1635376107369,"results":"57","hashOfConfig":"34"},{"size":1941,"mtime":1635376107369,"results":"58","hashOfConfig":"34"},{"size":1662,"mtime":1635791103702,"results":"59","hashOfConfig":"34"},{"size":1800,"mtime":1635376107373,"results":"60","hashOfConfig":"34"},{"size":1128,"mtime":1635376107373,"results":"61","hashOfConfig":"34"},{"size":865,"mtime":1635376107373,"results":"62","hashOfConfig":"34"},{"size":335,"mtime":1635376107373,"results":"63","hashOfConfig":"34"},{"size":846,"mtime":1635963791403,"results":"64","hashOfConfig":"34"},{"size":582,"mtime":1635959376310,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"xw73bi",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"75"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"75"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},"/home/runner/GabirReactFrontend/src/index.js",[],["136","137"],"/home/runner/GabirReactFrontend/src/App.js",[],"/home/runner/GabirReactFrontend/src/serviceWorkerRegistration.js",[],"/home/runner/GabirReactFrontend/src/Pages/404.tsx",[],["138","139"],"/home/runner/GabirReactFrontend/src/Pages/Calendar.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Main.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/TeamsPage.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/TeamPage.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Assets.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Showoff.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/QuoteSubmit.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/HaikuSubmit.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Timeline.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Tutorial.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Driveroftheday.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Standings.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Constructors.tsx",[],"/home/runner/GabirReactFrontend/src/Pages/Tools/SpecMapping.tsx",["140","141","142"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { useState, useEffect } from 'react'\nimport Header from '../../components/Header'\nimport Loading from \"../../components/LoadingIcon/Loading\";\nimport qs from 'qs';\nimport { Notification, Area } from '../../components/Notification/index'\n\ntype CarImage = {\n\tpath: string;\n\tname: string;\n}\n\ntype Preset = {\n\tname: string;\n\tmetal: number;\n\trough: number;\n}\n\nconst SpecMap = (props: any) => {\n\tconst [loading, setLoading] = useState(true);\n\tconst [color, setColor] = useState((qs.parse(props.location.hash, { ignoreQueryPrefix: true })[`#color`] !== undefined ? String(qs.parse(props.location.hash, { ignoreQueryPrefix: true })[`#color`]) : \"#000000\"));\n\tconst [metallic, setMetallic] = useState(Number(qs.parse(props.location.hash, { ignoreQueryPrefix: true })[`metal`]) || 0);\n\tconst [roughness, setRoughness] = useState(Number(qs.parse(props.location.hash, { ignoreQueryPrefix: true })[`rough`]) || 0);\n\tconst [car, setCar] = useState((qs.parse(props.location.hash, { ignoreQueryPrefix: true })[`car`] !== undefined ? String(qs.parse(props.location.hash, { ignoreQueryPrefix: true })[`car`]) : \"streetstock\"));\n\tconst [copied, setCopied] = useState(false);\n\tconst [c, setC] = useState(false);\n\tconst [link, setLink] = useState(`#color=${color}&metal=${metallic}&rough=${roughness}&car=${car}`);\n\tconst [carsList, setCarsList] = useState<CarImage[]>([]);\n\tconst [presets, setPresets] = useState<Preset[]>([\n\t\t{name: \"Flat\",metal: 0,rough: 80},\n\t\t{name: \"Matte\",metal: 0,rough: 50},\n\t\t{name: \"Satin\",metal: 0,rough: 20},\n\t\t{name: \"Gloss\",metal: 0,rough: 0},\n\t\t{name: \"Chrome\",metal: 100,rough: 0},\n\t\t{name: \"Metallic\",metal: 90,rough: 40},\n\t\t{name: \"Candy\",metal: 50,rough: 10},\n\t\t{name: \"Pearl\",metal: 60,rough: 20},\n\t\t{name: \"Velvet\",metal: 80,rough: 100},\n\t]);\n\n\tfunction drawCar(hexRGB: string, metalPct: number, roughPct: number) {\n\t\tvar rough = roughPct / 10;\n\t\tvar metal = metalPct / 10;\n\n\t\tif (hexRGB.substring(0, 1) === \"#\") {\n\t\t\thexRGB = hexRGB.substr(1);\n\t\t}\n\t\tvar r = parseInt(hexRGB.substr(0, 2), 16) / 255;\n\t\tvar g = parseInt(hexRGB.substr(2, 2), 16) / 255;\n\t\tvar b = parseInt(hexRGB.substr(4, 2), 16) / 255;\n\n\t\tvar black = document.getElementById(\"black\");\n\t\tvar red = document.getElementById(\"red\");\n\t\tvar green = document.getElementById(\"green\");\n\t\tvar blue = document.getElementById(\"blue\");\n\n\t\tvar ctx = (document.getElementById(\"canvas\") as HTMLCanvasElement)?.getContext('2d');\n\t\tctx?.clearRect(0, 0, (document.getElementById(\"canvas\") as HTMLCanvasElement)?.width, (document.getElementById(\"canvas\") as HTMLCanvasElement)?.height);\n\n\t\tif (ctx) {\n\t\t\tdrawImage(ctx, black, metal, rough);\n\t\t\tdrawImage(ctx, red, metal, rough, r, \"lighten\");\n\t\t\tdrawImage(ctx, green, metal, rough, g, \"lighten\");\n\t\t\tdrawImage(ctx, blue, metal, rough, b, \"lighten\");\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tdrawCar(color, metallic, roughness)\n\t\tsetLink(`#color=${color}&metal=${metallic}&rough=${roughness}&car=${car}`);\n\t}, [color, metallic, roughness, car])\n\n\tuseEffect(() => {\n\t\tconst fetchCars = async () => {\n\t\t\tconst res = await fetch(\"https://i.gabirmotors.com/carImages\");\n\t\t\tconst data = await res.json();\n\t\t\tvar cars = [];\n\n\t\t\tfor (var i = 0; i < data.children.length; i ++) {\n\t\t\t\tcars.push({\n\t\t\t\t\tpath: data.children[i].name,\n\t\t\t\t\tname: data.children[i].children[0].name.replace(\".txt\", \"\")\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tsetCarsList(cars);\n\t\t}\n\n\t\tfetchCars();\n\n\t\tsetTimeout(() => {\n\t\t\tsetLoading(false);\n\t\t\tsetTimeout(() => {\n\t\t\t\tdrawCar(color, metallic, roughness)\n\t\t\t}, 1000)\n\t\t}, 2000)\n\t}, [])\n\n\tfunction drawImage(ctx: any, image: any, metal: number, rough: number, alpha = 1.0, mode = \"copy\") {\n\t\tctx.save();\n\t\tctx.globalAlpha = alpha;\n\t\tctx.globalCompositeOperation = mode;\n\n\t\tvar w = image.width / 11;\n\t\tvar h = image.height / 11;\n\n\t\tvar xOffset = w * rough;\n\t\tvar yOffset = h * metal;\n\n\t\tctx.drawImage(image, xOffset, yOffset, w, h, 0, 0, 600, 400);\n\t\tctx.restore();\n\t}\n\n\tconst changeColor = (e: any) => setColor(e.target.value)\n\tconst changeMetal = (e: any) => setMetallic(e.target.value * 10)\n\tconst changeRough = (e: any) => setRoughness(e.target.value * 10)\n\tconst changePreset = (e: any) => {\n\t\tvar values = e.target.value.split('/');\n\t\tsetMetallic(values[0]);\n\t\tsetRoughness(values[1]);\n\t}\n\tconst changeCar = (e: any) => {\n\t\tsetCar(e.target.value)\n\t\tsetTimeout(() => {\n\t\t\tdrawCar(color, metallic, roughness)\n\t\t}, 2000)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Header title=\"Gabir Motors | Spec Mapping\" />\n\t\t\t{loading && <Loading />}\n\t\t\t{\n\t\t\t\t!loading && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Area>\n\t\t\t\t\t\t\t{copied && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Notification icon=\"link\">\n\t\t\t\t\t\t\t\t\t\tLink Copied to Clipboard\n\t\t\t\t\t\t\t\t\t</Notification>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Area>\n\t\t\t\t\t\t<div className=\"uk-height-large uk-background-cover uk-light uk-background-cover uk-background-fixed\" style={{ backgroundImage: 'url(img/gabir_bg.jpg)', minHeight: '100vh', height: 'auto' }}>\n\t\t\t\t\t\t\t{/* <h1 className = \"uk-margin-auto uk-text-center\">Gabir Motors Spec Map Previsualization Tool</h1> */}\n\n\t\t\t\t\t\t\t<div className = {(c ? \"uk-hidden\" : \"uk-hidden@m\")}>\n\t\t\t\t\t\t\t\t<div className=\"uk-width-1-2@m uk-text-center uk-margin-auto uk-margin-auto-vertical uk-container uk-position-center\">\n\t\t\t\t\t\t\t\t\t<div className=\"uk-margin uk-width-large uk-margin-auto uk-card uk-card-secondary uk-card-body uk-box-shadow-large\" style={{ maxHeight: '95vh' }}>\n\t\t\t\t\t\t\t\t\t\t<span className=\"uk-text-danger uk-text-bold\">This page is not designed for small screens</span><br /><br />\n\t\t\t\t\t\t\t\t\t\t<a href=\"#continue\" onClick = {() => { setC(true) }} className=\"uk-button uk-button-danger\">Continue Anyways</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t<div className={`${(c ? \"uk-visible\" : \"uk-visible@m\")} uk-text-left uk-position-center`}>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<div className=\"uk-padding-small uk-animation-fade uk-margin uk-width-1-1 uk-margin-auto uk-card uk-card-secondary uk-card-body uk-flex uk-flex-wrap\">\n\t\t\t\t\t\t\t\t\t\t<div className = \"uk-padding-small uk-width-1-1@s uk-width-1-2@l\">\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"uk-flex uk-width-1-1 uk-flex-left\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = \"uk-width-1-2 uk-margin-auto-vertical\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h2 className = \"uk-text-left uk-margin-remove uk-height-1-1\">Pick a car</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = \"uk-width-1-2 uk-margin-auto-vertical\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div uk-form-custom=\"target: > * > span:first-child\" className = \"uk-width-1-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select onChange = {changeCar} value = {car} className = \"uk-width-1-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{carsList.map(ca => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value = {ca.path}>{ ca.name }</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"uk-button uk-button-default uk-width-1-1\" type=\"button\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span></span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<hr />\n\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"uk-margin uk-width-1-1 uk-flex uk-flex-wrap\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = \"uk-width-1-1@s uk-width-1-2@xl uk-text-left uk-padding-remove\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"color\">Choose a Color:</label> <input type=\"color\" id=\"color\" value={color} onChange={changeColor} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"uk-margin-left uk-margin-bottom\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input className=\"uk-input uk-form-width-small uk-form-small uk-form-blank color-input\" type=\"text\" placeholder=\"Color Hex\" value = {color} onChange={changeColor} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"metallic\">Metallic</label> <span id=\"metallic-container\"><input type=\"range\" min=\"0\" max=\"10\" value={metallic / 10} id=\"metallic\" onChange={changeMetal} /> {metallic}%</span><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"rough\">Roughness</label> <span id=\"rough-container\"><input type=\"range\" min=\"0\" max=\"10\" value={roughness / 10} id=\"rough\" onChange={changeRough} /> {roughness}%</span><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Spec Map Color: </span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"uk-margin-left uk-margin-bottom\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input className=\"uk-input uk-form-width-small uk-form-small color-input\" type=\"text\" placeholder=\"Spec Map Hex\" value = {`#${(Math.ceil(metallic * 2.55).toString(16).toUpperCase() === \"0\" ? \"00\" : Math.ceil(metallic * 2.55).toString(16).toUpperCase()) + (Math.ceil(roughness * 2.55).toString(16).toUpperCase() === \"0\" ? \"00\" : Math.ceil(roughness * 2.55).toString(16).toUpperCase()) + \"00\"}`} disabled />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = \"uk-width-1-1@s uk-width-1-2@xl\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"uk-flex uk-width-1-1 uk-flex-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className = \"uk-width-1-2 uk-margin-auto-vertical\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h2 className = \"uk-text-left uk-margin-remove uk-height-1-1\">Or Use a Preset</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className = \"uk-width-1-2 uk-margin-auto-vertical\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div uk-form-custom=\"target: > * > span:first-child\" className = \"uk-width-1-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select onChange = {changePreset} className = \"uk-width-1-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"select\">Select One</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{presets.map(p => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value = {`${p.metal}/${p.rough}`}>{ p.name }</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"uk-button uk-button-default uk-width-1-1 uk-margin-small-top\" type=\"button\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span></span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t<hr />\n\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"uk-margin uk-width-1-1 uk-flex uk-flex-wrap\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = \"uk-width-1-1@s uk-width-1-2@xl\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a uk-tooltip = \"Get a link to the configuration you've made. Save it or share it with others!\" className=\"uk-button uk-button-default uk-align-right uk-width-1-1 uk-margin-small-top\" href={link} onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnavigator.clipboard.writeText(\"https://gabirmotors.com/specmapping\" + link)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCopied(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTimeout(() => { setCopied(false) }, 5000)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>Click to Share</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"uk-text-warning uk-text-left\"><span className = \"uk-text-bold\"><span uk-icon=\"icon: warning\"></span> Warning!</span> Some images may take a while to load</p>\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"uk-text-success uk-text-left\">Thank you <a href=\"https://www.tradingpaints.com/profile/666793/Zach-C-Miller\" target = \"_new\" className = \"uk-text-bold\">Bracket (Zach M.)</a> for the code help and images!</p>\n\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<div className = \"uk-padding-small uk-width-1-1@s uk-width-1-2@l\">\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<img id=\"black\" src = {`https://i.gabirmotors.com/siteimages/${car}/grid-black.jpg`} style={{ display: \"none\" }} alt=\"grid-black\" />\n\t\t\t\t\t\t\t\t\t\t\t<img id=\"blue\" src = {`https://i.gabirmotors.com/siteimages/${car}/grid-blue.jpg`} style={{ display: \"none\" }} alt=\"grid-blue\" />\n\t\t\t\t\t\t\t\t\t\t\t<img id=\"red\" src = {`https://i.gabirmotors.com/siteimages/${car}/grid-red.jpg`} style={{ display: \"none\" }} alt=\"grid-red\" />\n\t\t\t\t\t\t\t\t\t\t\t<img id=\"green\" src = {`https://i.gabirmotors.com/siteimages/${car}/grid-green.jpg`} style={{ display: \"none\" }} alt=\"grid-green\" />\n\t\t\t\t\t\t\t\t\t\t\t<canvas className=\"tools-canvas uk-box-shadow-small uk-margin-auto\" id=\"canvas\" width=\"600\" height=\"400\"></canvas>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t</>\n\t)\n}\n\nexport default SpecMap;","/home/runner/GabirReactFrontend/src/components/HaikuForm.js",[],"/home/runner/GabirReactFrontend/src/components/QuoteForm.js",[],"/home/runner/GabirReactFrontend/src/components/Footer.tsx",[],"/home/runner/GabirReactFrontend/src/components/Header.tsx",[],"/home/runner/GabirReactFrontend/src/components/Race.tsx",[],"/home/runner/GabirReactFrontend/src/components/LoadingIcon/Loading.tsx",[],"/home/runner/GabirReactFrontend/src/components/Alert/index.tsx",[],"/home/runner/GabirReactFrontend/src/components/Notification/index.tsx",[],"/home/runner/GabirReactFrontend/src/components/StandingsRow/Row.tsx",[],"/home/runner/GabirReactFrontend/src/components/StandingsRow/TeamRow.tsx",[],"/home/runner/GabirReactFrontend/src/components/ShareButton.tsx",[],"/home/runner/GabirReactFrontend/src/components/RightTab/RightTab.tsx",[],["143","144"],"/home/runner/GabirReactFrontend/src/components/Decorations/Fall.tsx",["145","146"],"import { useState, useEffect } from 'react'\nimport './style.scss'\n\nconst Fall = () => {\n\tconst pickRandomLeaf = () => {\n\t\treturn Math.floor(Math.random() * 3) + 1;\n\t}\n\n\tconst pickRandomX = () => {\n\t\treturn Math.floor(Math.random() * window.innerWidth);\n\t}\n\n\tconst [leaves, setLeaves] = useState<{x: number, leaf: number}[]>([])\n\n\tconst makeLeaf = () => {\n\t\tvar l = leaves\n\t\tvar x = pickRandomX();\n\t\tvar leaf = pickRandomLeaf();\n\t\tl.push({x, leaf});\n\t\tsetLeaves(l);\n\t\tconsole.log(leaves)\n\t\tsetTimeout(makeLeaf, 10000)\n\t}\n\n\tuseEffect(() => {\n\t\tmakeLeaf();\n\t}, [])\n\n\treturn (\n\t\t<div id = \"leaves\">\n\t\t\t{leaves.map((leaf, i) => (\n\t\t\t\t<span key = {i} className = \"fall-leaf\">\n\t\t\t\t\t<img src = {`https://i.gabirmotors.com/assets/other/fall/leaf${leaf.leaf}.png`} style = {{ left: `${leaf.x}px` }}/>\n\t\t\t\t</span>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default Fall;\n","/home/runner/GabirReactFrontend/src/utils/useWindowDimensions.ts",[],["147","148"],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":29,"column":18,"nodeType":"155","messageId":"156","endLine":29,"endColumn":28},{"ruleId":"157","severity":1,"message":"158","line":71,"column":5,"nodeType":"159","endLine":71,"endColumn":38,"suggestions":"160"},{"ruleId":"157","severity":1,"message":"161","line":97,"column":5,"nodeType":"159","endLine":97,"endColumn":7,"suggestions":"162"},{"ruleId":"149","replacedBy":"163"},{"ruleId":"151","replacedBy":"164"},{"ruleId":"157","severity":1,"message":"165","line":27,"column":5,"nodeType":"159","endLine":27,"endColumn":7,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":33,"column":6,"nodeType":"169","endLine":33,"endColumn":121},{"ruleId":"149","replacedBy":"170"},{"ruleId":"151","replacedBy":"171"},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"@typescript-eslint/no-unused-vars","'setPresets' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'drawCar'. Either include it or remove the dependency array.","ArrayExpression",["174"],"React Hook useEffect has missing dependencies: 'color', 'drawCar', 'metallic', and 'roughness'. Either include them or remove the dependency array.",["175"],["172"],["173"],"React Hook useEffect has a missing dependency: 'makeLeaf'. Either include it or remove the dependency array.",["176"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["172"],["173"],"no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [color, metallic, roughness, car, drawCar]",{"range":"183","text":"184"},"Update the dependencies array to be: [color, drawCar, metallic, roughness]",{"range":"185","text":"186"},"Update the dependencies array to be: [makeLeaf]",{"range":"187","text":"188"},[2963,2996],"[color, metallic, roughness, car, drawCar]",[3528,3530],"[color, drawCar, metallic, roughness]",[558,560],"[makeLeaf]"]